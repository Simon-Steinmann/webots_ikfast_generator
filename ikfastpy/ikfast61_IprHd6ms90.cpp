/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2020-09-07 01:02:36.887481
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16;
x0=IKsin(j[1]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKcos(j[3]);
x5=IKsin(j[3]);
x6=((0.795475103666937)*x3);
x7=((0.795475103666937)*x2);
x8=((((0.826592120996774)*x1))+(((-0.562801444122218)*x0)));
x9=((((0.826592120996774)*x0))+(((0.562801444122218)*x1)));
x10=((-1.0)*x9);
x11=((0.795475103666937)*x8);
x12=(x2*x8);
x13=(x3*x8);
x14=(x10*x2);
x15=(((x6*x8))+((x10*x7))+(((0.605986270014491)*x3*x9))+(((0.605986270014491)*x12)));
x16=(((x7*x8))+((x6*x9))+(((-0.605986270014491)*x13))+(((-0.605986270014491)*x14)));
eerot[0]=((((((((((((0.147859751618005)*(((((-0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.147859751618005)*(((((0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-0.0184041468203086)*(IKcos(j[0]))))+(((-0.146709895809228)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((0.981317151726531)*(IKsin(j[0]))))+(((0.123102159115064)*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((-0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.989008338615738)*(((((0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((((((((((0.981317151726531)*(IKsin(j[0]))))+(((0.123102159115064)*(IKcos(j[0]))))))*(IKcos(j[4]))))+(((((((0.146709895809228)*(IKsin(j[0]))))+(((0.0184041468203086)*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((-0.989008338615738)*(((((0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.989008338615738)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((-0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.989008338615738)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.147859751618005)*(((((0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5])))));
eerot[1]=((((((((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3])))));
eerot[2]=((((((((((((0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.147859751618005)*(((((0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((0.989008338615738)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((-0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.981317151726531)*(IKsin(j[0]))))+(((-0.123102159115064)*(IKcos(j[0]))))))*(IKcos(j[4]))))+(((((((-0.0184041468203086)*(IKcos(j[0]))))+(((-0.146709895809228)*(IKsin(j[0]))))))*(IKsin(j[4]))))))*(IKcos(j[5]))))+(((((((((((0.147859751618005)*(((((-0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.147859751618005)*(((((0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-0.0184041468203086)*(IKcos(j[0]))))+(((-0.146709895809228)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((0.981317151726531)*(IKsin(j[0]))))+(((0.123102159115064)*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((-0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.989008338615738)*(((((0.894933549691229)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((0.894933549691229)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5])))));
eetrans[0]=((((((((-0.00818629550820753)*(IKcos(j[0]))))+(((-0.065257605951469)*(IKsin(j[0]))))))*(IKsin(j[4]))))+(((((((-0.0128505439165601)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0128505439165601)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((-0.00590062034402397)*(IKsin(j[0]))))+(((0.0470371924509051)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((0.069083995927494)*(IKcos(j[0]))))+(((-0.00866630023128424)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.00122386537244705)*(IKcos(j[0]))))+(((0.00975612523793258)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((((((0.0320412755726455)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0320412755726455)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0320412755726455)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.0320412755726455)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0420604199615968)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0420604199615968)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0420604199615968)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.0420604199615968)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.0133099688143466)*(IKsin(j[0]))))+(((-0.106101312766213)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((((((0.00590062034402397)*(IKsin(j[0]))))+(((-0.0470371924509051)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((((((0.069083995927494)*(IKcos(j[0]))))+(((-0.00866630023128424)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0257740862311074)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0257740862311074)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((-0.0843598563275924)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0843598563275924)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((0.0642646318398423)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0642646318398423)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0843598563275924)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.0843598563275924)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0642646318398423)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0642646318398423)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((((((0.0642646318398423)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.0642646318398423)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((0.0843598563275924)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.0843598563275924)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((0.0642646318398423)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0642646318398423)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((0.0843598563275924)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0843598563275924)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((((((-0.0293461223050804)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.0588589472749909)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((0.0588589472749909)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.0293461223050804)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((-0.0617456696851792)*(IKcos(j[0]))))+(((0.00774573769639905)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((((((-0.0113762425772326)*(IKsin(j[0]))))+(((0.0906864838398583)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0257740862311074)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0257740862311074)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((-0.0420604199615968)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0420604199615968)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0320412755726455)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0320412755726455)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0420604199615968)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0420604199615968)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0320412755726455)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.0320412755726455)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.0128505439165601)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0128505439165601)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.0195483186406414)*(IKsin(j[0]))))+(((-0.155830738529503)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((((((((((-0.00438729616696284)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00438729616696284)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.00438729616696284)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00438729616696284)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((-0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.00879951467135848)*(((((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.00879951467135848)*(((((0.605986270014491)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((0.00879951467135848)*(((((0.795475103666937)*(((((0.82016399068128)*(IKcos(j[0]))))+(((-0.102886164685553)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.00879951467135848)*(((((-0.605986270014491)*(((((0.558424725626277)*(IKcos(j[0]))))+(((-0.0700520614633965)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((0.795475103666937)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((-0.605986270014491)*(((((0.102886164685553)*(IKsin(j[0]))))+(((-0.82016399068128)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.605986270014491)*(((((0.0700520614633965)*(IKsin(j[0]))))+(((-0.558424725626277)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((((((-0.0617456696851792)*(IKcos(j[0]))))+(((0.00774573769639905)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((((((-0.0906864838398583)*(IKcos(j[0]))))+(((0.0113762425772326)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2])))));
eerot[3]=((((((((((((((((0.0659749385992653)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.132324652371965)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((((((0.885096743151607)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.441294968375892)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.885096743151607)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((-0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((((((((((((((0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.441294968375892)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))+(((((((((((0.0659749385992653)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.132324652371965)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))))*(IKcos(j[5])))));
eerot[4]=((((-0.446199441547226)*x15*x5))+(((0.894933549691229)*x15*x4))+(((-0.894933549691229)*x16*x5))+(((-0.446199441547226)*x16*x4)));
eerot[5]=((((((((((((-1.0)*(((((0.885096743151607)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-1.0)*(((((0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.885096743151607)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.885096743151607)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-1.0)*(((((-0.441294968375892)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-1.0)*(((((-0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.441294968375892)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.441294968375892)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-1.0)*(((((0.0659749385992653)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-1.0)*(((((-0.132324652371965)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-1.0)*(((((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-1.0)*(((((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((((((((((((((0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.441294968375892)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.441294968375892)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.441294968375892)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.441294968375892)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.885096743151607)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.885096743151607)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.885096743151607)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))+(((((((((((0.0659749385992653)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.0659749385992653)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0659749385992653)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0659749385992653)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.132324652371965)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.132324652371965)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.132324652371965)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[5])))));
eetrans[1]=((0.2265)+(((((((0.0913972496654737)*(IKsin(j[1]))))+(((0.0622296085262689)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0696254497508545)*(IKcos(j[1]))))+(((0.04740585189729)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0913972496654737)*(IKcos(j[1]))))+(((-0.0622296085262689)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0257740862311074)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0257740862311074)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0257740862311074)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((((((-0.0264850659350352)*(IKsin(j[1]))))+(((-0.0180328761638028)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0347668117460714)*(IKcos(j[1]))))+(((0.0236716650947737)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0180328761638028)*(IKsin(j[1]))))+(((-0.0264850659350352)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((0.0236716650947737)*(IKcos(j[1]))))+(((0.0347668117460714)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.0128505439165601)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0128505439165601)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((0.0474778489671119)*(IKsin(j[1]))))+(((-0.0697311925688077)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0361682276054459)*(IKcos(j[1]))))+(((-0.053120638337572)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0361682276054459)*(IKsin(j[1]))))+(((0.053120638337572)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0474778489671119)*(IKcos(j[1]))))+(((-0.0697311925688077)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.10693289409977)*(IKsin(j[1]))))+(((((((((((0.00879951467135848)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.00879951467135848)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.00879951467135848)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00879951467135848)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.00879951467135848)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.00879951467135848)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.00438729616696284)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.00438729616696284)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00438729616696284)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.00438729616696284)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00438729616696284)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.00438729616696284)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((((((-0.0347668117460714)*(IKsin(j[1]))))+(((-0.0236716650947737)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0180328761638028)*(IKsin(j[1]))))+(((0.0264850659350352)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0264850659350352)*(IKsin(j[1]))))+(((-0.0180328761638028)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0347668117460714)*(IKcos(j[1]))))+(((0.0236716650947737)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((((((-0.0361682276054459)*(IKsin(j[1]))))+(((0.053120638337572)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0474778489671119)*(IKcos(j[1]))))+(((-0.0697311925688077)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0474778489671119)*(IKsin(j[1]))))+(((0.0697311925688077)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((0.0361682276054459)*(IKcos(j[1]))))+(((0.053120638337572)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.15705208)*(IKcos(j[1]))))+(((((((-0.0128505439165601)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0128505439165601)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0128505439165601)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((0.0588589472749909)*(((((-0.447694537107024)*(IKcos(j[1]))))+(((-0.657533453140182)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((-0.341049947882392)*(IKsin(j[1]))))+(((0.500903476226202)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.0293461223050804)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.0293461223050804)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0293461223050804)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0293461223050804)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.0588589472749909)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0588589472749909)*(((((-0.447694537107024)*(IKsin(j[1]))))+(((0.657533453140182)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0588589472749909)*(((((0.341049947882392)*(IKcos(j[1]))))+(((0.500903476226202)*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((0.0696254497508545)*(IKsin(j[1]))))+(((0.04740585189729)*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0257740862311074)*(((((-0.500903476226202)*(IKsin(j[1]))))+(((-0.341049947882392)*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((-0.500903476226202)*(IKcos(j[1]))))+(((0.341049947882392)*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0257740862311074)*(((((-0.657533453140182)*(IKcos(j[1]))))+(((0.447694537107024)*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0257740862311074)*(((((0.657533453140182)*(IKsin(j[1]))))+(((0.447694537107024)*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3])))));
eerot[6]=((((((((((((-0.147859751618005)*(((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.147859751618005)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((0.981317151726531)*(IKcos(j[0]))))+(((-0.123102159115064)*(IKsin(j[0]))))))*(IKsin(j[4]))))+(((((((0.0184041468203086)*(IKsin(j[0]))))+(((-0.146709895809228)*(IKcos(j[0]))))))*(IKcos(j[4]))))+(((((((0.989008338615738)*(((((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((((((((((0.981317151726531)*(IKcos(j[0]))))+(((-0.123102159115064)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.147859751618005)*(((((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.147859751618005)*(((((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))+(((((((0.989008338615738)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.0184041468203086)*(IKsin(j[0]))))+(((0.146709895809228)*(IKcos(j[0]))))))*(IKsin(j[4]))))))*(IKsin(j[5])))));
eerot[7]=((((((((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.894933549691229)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3])))));
eerot[8]=((((((((((((-0.147859751618005)*(((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.147859751618005)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((0.981317151726531)*(IKcos(j[0]))))+(((-0.123102159115064)*(IKsin(j[0]))))))*(IKsin(j[4]))))+(((((((0.0184041468203086)*(IKsin(j[0]))))+(((-0.146709895809228)*(IKcos(j[0]))))))*(IKcos(j[4]))))+(((((((0.989008338615738)*(((((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((0.989008338615738)*(((((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.989008338615738)*(((((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5]))))+(((((((((((-0.989008338615738)*(((((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((-0.989008338615738)*(((((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.989008338615738)*(((((0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.981317151726531)*(IKcos(j[0]))))+(((0.123102159115064)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((-0.147859751618005)*(((((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.147859751618005)*(((((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.446199441547226)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.147859751618005)*(((((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.894933549691229)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.894933549691229)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))+(((((((0.0184041468203086)*(IKsin(j[0]))))+(((-0.146709895809228)*(IKcos(j[0]))))))*(IKsin(j[4]))))))*(IKcos(j[5])))));
eetrans[2]=((((((((0.00975612523793258)*(IKcos(j[0]))))+(((-0.00122386537244705)*(IKsin(j[0]))))))*(IKcos(j[4]))))+(((((((0.0128505439165601)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0128505439165601)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0128505439165601)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0128505439165601)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((0.0257740862311074)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0257740862311074)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0257740862311074)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0257740862311074)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((((((-0.069083995927494)*(IKsin(j[0]))))+(((-0.00866630023128424)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((0.00590062034402397)*(IKcos(j[0]))))+(((0.0470371924509051)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((0.00818629550820753)*(IKsin(j[0]))))+(((-0.065257605951469)*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((0.0128505439165601)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0128505439165601)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0128505439165601)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0128505439165601)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((((((0.0906864838398583)*(IKsin(j[0]))))+(((0.0113762425772326)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((((((0.00774573769639905)*(IKcos(j[0]))))+(((0.0617456696851792)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((0.106101312766213)*(IKsin(j[0]))))+(((0.0133099688143466)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((((((0.00774573769639905)*(IKcos(j[0]))))+(((0.0617456696851792)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((((((-0.0906864838398583)*(IKsin(j[0]))))+(((-0.0113762425772326)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((((((-0.0642646318398423)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0642646318398423)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0843598563275924)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.0843598563275924)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0642646318398423)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.0642646318398423)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((0.0843598563275924)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0843598563275924)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((-0.0843598563275924)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.0843598563275924)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0843598563275924)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.0843598563275924)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((-0.0642646318398423)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.0642646318398423)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0642646318398423)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.0642646318398423)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.0195483186406414)*(IKcos(j[0]))))+(((0.155830738529503)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((((((((((-0.0588589472749909)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0588589472749909)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.0588589472749909)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0588589472749909)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((0.0293461223050804)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((0.0293461223050804)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0293461223050804)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0293461223050804)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((-0.0588589472749909)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.0588589472749909)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.0588589472749909)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.0588589472749909)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.0293461223050804)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0293461223050804)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0293461223050804)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.0293461223050804)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKcos(j[4]))))+(((((((((((-0.00879951467135848)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((-0.00879951467135848)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.00879951467135848)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((-0.00879951467135848)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((0.00438729616696284)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00438729616696284)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00438729616696284)*(((((-0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.00438729616696284)*(((((-0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((0.00438729616696284)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.00438729616696284)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.00438729616696284)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((0.00438729616696284)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((((((-0.00879951467135848)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00879951467135848)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((0.605986270014491)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((-0.00879951467135848)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((-0.00879951467135848)*(((((0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((((((0.0320412755726455)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.0320412755726455)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((0.0420604199615968)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.0420604199615968)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((0.0320412755726455)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0320412755726455)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0420604199615968)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((0.0420604199615968)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((-0.0470371924509051)*(IKsin(j[0]))))+(((-0.00590062034402397)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((-0.069083995927494)*(IKsin(j[0]))))+(((-0.00866630023128424)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0257740862311074)*(((((0.795475103666937)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0257740862311074)*(((((-0.605986270014491)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((0.0257740862311074)*(((((0.795475103666937)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.795475103666937)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((0.0257740862311074)*(((((-0.605986270014491)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((-0.605986270014491)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((-0.0320412755726455)*(((((0.558424725626277)*(IKsin(j[0]))))+(((0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((-0.0320412755726455)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((0.0420604199615968)*(((((0.82016399068128)*(IKsin(j[0]))))+(((0.102886164685553)*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((0.0420604199615968)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((0.0420604199615968)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((0.0420604199615968)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((-0.0320412755726455)*(((((-0.102886164685553)*(IKcos(j[0]))))+(((-0.82016399068128)*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((-0.0320412755726455)*(((((-0.558424725626277)*(IKsin(j[0]))))+(((-0.0700520614633965)*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3])))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=((-1.0)*r02);
new_r02=r01;
new_px=(px+(((-0.0288)*r01)));
new_r10=((-1.0)*r20);
new_r11=r22;
new_r12=((-1.0)*r21);
new_py=((((0.0288)*r21))+(((-1.0)*pz)));
new_r20=r10;
new_r21=((-1.0)*r12);
new_r22=r11;
new_pz=((-0.2265)+py+(((-0.0288)*r11)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x17=((1.0)*px);
IkReal x18=((1.0)*pz);
IkReal x19=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x19))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x18)));
rxp0_2=(((py*r00))+(((-1.0)*r10*x17)));
rxp1_0=((((-1.0)*r21*x19))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x18)));
rxp1_2=((((-1.0)*r11*x17))+((py*r01)));
rxp2_0=((((-1.0)*r22*x19))+((pz*r12)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x18)));
rxp2_2=(((py*r02))+(((-1.0)*r12*x17)));
{
IkReal j1eval[3];
if((r22*r22) < -0.00001)
continue;
j1eval[0]=((138813692996068.0)*(IKsqrt(r22*r22)));
j1eval[1]=0.26398497409977;
j1eval[2]=r22;
if( IKabs(j1eval[0]) < 0.0000010000000000  || IKabs(j1eval[1]) < 0.0000010000000000  || IKabs(j1eval[2]) < 0.0000010000000000  )
{
{
IkReal j1eval[3];
if((r22*r22) < -0.00001)
continue;
j1eval[0]=((3.67970702968289e+34)*(IKsqrt(r22*r22)));
j1eval[1]=0.00349270916246993;
j1eval[2]=r22;
if( IKabs(j1eval[0]) < 0.0000010000000000  || IKabs(j1eval[1]) < 0.0000010000000000  || IKabs(j1eval[2]) < 0.0000010000000000  )
{
{
IkReal j1eval[3];
if((r22*r22) < -0.00001)
continue;
j1eval[0]=((138813692996068.0)*(IKsqrt(r22*r22)));
j1eval[1]=0.00886674496473853;
j1eval[2]=r22;
if( IKabs(j1eval[0]) < 0.0000010000000000  || IKabs(j1eval[1]) < 0.0000010000000000  || IKabs(j1eval[2]) < 0.0000010000000000  )
{
continue; // no branches [j0, j1, j5]

} else
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
CheckValue<IkReal> x22 = IKatan2WithCheck(IkReal(((-0.00527507576630259)*r22)),IkReal(((0.00359166919843594)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x22.valid){
continue;
}
IkReal x20=((1.0)*(x22.value));
if((r22*r22) < -0.00001)
continue;
CheckValue<IkReal> x23=IKPowWithIntegerCheck(IKabs(((138813692996068.0)*(IKsqrt(r22*r22)))),-1);
if(!x23.valid){
continue;
}
if( (((730598387500000.0)*npz*(x23.value))) < -1-IKFAST_SINCOS_THRESH || (((730598387500000.0)*npz*(x23.value))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x21=IKasin(((730598387500000.0)*npz*(x23.value)));
j1array[0]=((((-1.0)*x20))+(((-1.0)*x21)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((3.14159265358979)+(((-1.0)*x20))+x21);
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[3];
IkReal x24=IKcos(j1);
IkReal x25=IKsin(j1);
IkReal x26=(r22*x25);
IkReal x27=(r22*x24);
evalcond[0]=(npz+(((-0.15705208)*x27))+(((0.10693289409977)*x26)));
evalcond[1]=((((0.00207791083818902)*x27))+(((-0.0132307119917738)*npz))+(((-0.0014147983242809)*x26)));
evalcond[2]=((-0.00701239344578676)+(((0.0335880668775771)*x24*x25))+(((-0.213865788199539)*pz*x25))+(((-1.0)*pp))+(((-0.0132307119917738)*(x24*x24)))+(((0.31410416)*pz*x24)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x28=((1.60801337333718)*sj1);
IkReal x29=((2.36168530812227)*cj1);
if( IKabs((((r21*x28))+(((-1.0)*r21*x29))+(((15.0375933137738)*npy)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-15.0375933137738)*npx))+((r20*x29))+(((-1.0)*r20*x28)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r21*x28))+(((-1.0)*r21*x29))+(((15.0375933137738)*npy))))+IKsqr(((((-15.0375933137738)*npx))+((r20*x29))+(((-1.0)*r20*x28))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((r21*x28))+(((-1.0)*r21*x29))+(((15.0375933137738)*npy))), ((((-15.0375933137738)*npx))+((r20*x29))+(((-1.0)*r20*x28))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x30=IKcos(j5);
IkReal x31=IKsin(j5);
IkReal x32=r01*r01;
IkReal x33=py*py;
IkReal x34=r11*r11;
IkReal x35=r21*r21;
IkReal x36=px*px;
IkReal x37=r00*r00;
IkReal x38=r10*r10;
IkReal x39=pz*pz;
IkReal x40=r20*r20;
IkReal x41=r02*r02;
IkReal x42=r22*r22;
IkReal x43=r12*r12;
IkReal x44=((0.10693289409977)*sj1);
IkReal x45=((0.15705208)*cj1);
IkReal x46=x30*x30;
IkReal x47=((0.0044222503947658)*x34);
IkReal x48=((1.0)*x42);
IkReal x49=((0.0665000029681638)*x31);
IkReal x50=((0.0665000029681638)*x30);
IkReal x51=(x36*x37);
IkReal x52=(x36*x41);
IkReal x53=(x39*x40);
IkReal x54=((0.0044222503947658)*x46);
IkReal x55=(x35*x39);
IkReal x56=(x33*x43);
IkReal x57=(x33*x38);
IkReal x58=(x33*x34);
IkReal x59=(x32*x36);
evalcond[0]=(((r20*x44))+(((-1.0)*r20*x45))+npx+x50);
evalcond[1]=((((-1.0)*r21*x45))+(((-1.0)*x49))+npy+((r21*x44)));
evalcond[2]=((((-1.0)*r21*x49))+(((-1.0)*x45))+pz+x44+((r20*x50)));
evalcond[3]=((-0.0114346438405526)+(((-0.0132307119917738)*(cj1*cj1)))+(((0.0044222503947658)*x35))+(((0.0044222503947658)*x32))+(((-1.0)*x35*x54))+((x38*x51))+((x38*x54))+((x38*x53))+((x37*x57))+((x37*x54))+((x37*x53))+(((0.0335880668775771)*cj1*sj1))+(((-1.0)*x48*x56))+(((-1.0)*x48*x52))+(((-1.0)*x32*x54))+((x35*x59))+((x35*x58))+((x34*x59))+((x34*x55))+((x39*x42))+(((-2.0)*x35*x53))+(((-0.133000005936328)*npy*x31))+(((-2.0)*x34*x57))+(((-1.0)*x39*x43*x48))+(((-1.0)*x41*x56))+((x32*x58))+((x32*x55))+x47+x59+x58+x55+x57+x56+x51+x53+x52+(((-2.0)*x32*x51))+(((-1.0)*x39*x41*x48))+((x40*x57))+((x40*x51))+((x40*x54))+(((-1.0)*x43*x52))+(((0.133000005936328)*npx*x30))+(((-1.0)*x46*x47)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x60=((0.0665000029681638)*cj5);
IkReal x61=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs((((r10*x60))+(((-1.0)*r11*x61))+py)))+(IKabs((((r00*x60))+(((-1.0)*r01*x61))+px))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x62=((0.0665000029681638)*cj5);
IkReal x63=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs(((((-1.0)*px))+((r01*x63))+(((-1.0)*r00*x62)))))+(IKabs((((r10*x62))+(((-1.0)*r11*x63))+py))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x64=((0.0665000029681638)*cj5);
IkReal x65=((0.0665000029681638)*sj5);
CheckValue<IkReal> x67 = IKatan2WithCheck(IkReal((((r10*x64))+(((-1.0)*r11*x65))+py)),IkReal(((((-1.0)*px))+((r01*x65))+(((-1.0)*r00*x64)))),IKFAST_ATAN2_MAGTHRESH);
if(!x67.valid){
continue;
}
IkReal x66=x67.value;
j0array[0]=((-1.0)*x66);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x66)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x68=IKsin(j0);
IkReal x69=IKcos(j0);
IkReal x70=((0.0665000029681638)*sj5);
IkReal x71=((0.0665000029681638)*cj5);
evalcond[0]=(((r00*x69*x71))+((px*x69))+(((-1.0)*r01*x69*x70))+((r10*x68*x71))+(((-1.0)*r11*x68*x70))+((py*x68)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x114=((0.0665000029681638)*cj5);
IkReal x115=((0.0665000029681638)*sj5);
CheckValue<IkReal> x117 = IKatan2WithCheck(IkReal(((((-1.0)*r01*x115))+((r00*x114))+px)),IkReal((((r10*x114))+(((-1.0)*r11*x115))+py)),IKFAST_ATAN2_MAGTHRESH);
if(!x117.valid){
continue;
}
IkReal x116=x117.value;
j0array[0]=((-1.0)*x116);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x116)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x118=IKcos(j0);
IkReal x119=IKsin(j0);
IkReal x120=((0.0665000029681638)*sj5);
IkReal x121=((0.0665000029681638)*cj5);
evalcond[0]=((((-1.0)*r00*x119*x121))+(((-1.0)*px*x119))+((py*x118))+((r10*x118*x121))+(((-1.0)*r11*x118*x120))+((r01*x119*x120)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}

}

}

} else
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
CheckValue<IkReal> x124 = IKatan2WithCheck(IkReal(((0.00207791083818902)*r22)),IkReal(((-0.0014147983242809)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x124.valid){
continue;
}
IkReal x122=((1.0)*(x124.value));
if((r22*r22) < -0.00001)
continue;
CheckValue<IkReal> x125=IKPowWithIntegerCheck(IKabs(((3.67970702968289e+34)*(IKsqrt(r22*r22)))),-1);
if(!x125.valid){
continue;
}
if( (((1.93668791913409e+35)*npz*(x125.value))) < -1-IKFAST_SINCOS_THRESH || (((1.93668791913409e+35)*npz*(x125.value))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x123=IKasin(((1.93668791913409e+35)*npz*(x125.value)));
j1array[0]=((((-1.0)*x122))+x123);
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((3.14159265358979)+(((-1.0)*x122))+(((-1.0)*x123)));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[3];
IkReal x126=IKsin(j1);
IkReal x127=IKcos(j1);
IkReal x128=(r22*x126);
IkReal x129=(r22*x127);
evalcond[0]=(npz+(((-0.15705208)*x129))+(((0.10693289409977)*x128)));
evalcond[1]=((((0.00359166919843594)*x128))+(((0.0335880668775771)*npz))+(((-0.00527507576630259)*x129)));
evalcond[2]=((-0.00701239344578676)+(((0.31410416)*pz*x127))+(((0.0335880668775771)*x126*x127))+(((-0.213865788199539)*pz*x126))+(((-1.0)*pp))+(((-0.0132307119917738)*(x127*x127))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x130=((1.60801337333718)*sj1);
IkReal x131=((2.36168530812227)*cj1);
if( IKabs(((((-1.0)*r21*x131))+((r21*x130))+(((15.0375933137738)*npy)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-15.0375933137738)*npx))+((r20*x131))+(((-1.0)*r20*x130)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x131))+((r21*x130))+(((15.0375933137738)*npy))))+IKsqr(((((-15.0375933137738)*npx))+((r20*x131))+(((-1.0)*r20*x130))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((-1.0)*r21*x131))+((r21*x130))+(((15.0375933137738)*npy))), ((((-15.0375933137738)*npx))+((r20*x131))+(((-1.0)*r20*x130))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x132=IKcos(j5);
IkReal x133=IKsin(j5);
IkReal x134=r01*r01;
IkReal x135=py*py;
IkReal x136=r11*r11;
IkReal x137=r21*r21;
IkReal x138=px*px;
IkReal x139=r00*r00;
IkReal x140=r10*r10;
IkReal x141=pz*pz;
IkReal x142=r20*r20;
IkReal x143=r02*r02;
IkReal x144=r22*r22;
IkReal x145=r12*r12;
IkReal x146=((0.10693289409977)*sj1);
IkReal x147=((0.15705208)*cj1);
IkReal x148=x132*x132;
IkReal x149=((0.0044222503947658)*x136);
IkReal x150=((1.0)*x144);
IkReal x151=((0.0665000029681638)*x133);
IkReal x152=((0.0665000029681638)*x132);
IkReal x153=(x138*x139);
IkReal x154=(x138*x143);
IkReal x155=(x141*x142);
IkReal x156=((0.0044222503947658)*x148);
IkReal x157=(x137*x141);
IkReal x158=(x135*x145);
IkReal x159=(x135*x140);
IkReal x160=(x135*x136);
IkReal x161=(x134*x138);
evalcond[0]=(((r20*x146))+npx+x152+(((-1.0)*r20*x147)));
evalcond[1]=((((-1.0)*x151))+npy+((r21*x146))+(((-1.0)*r21*x147)));
evalcond[2]=((((-1.0)*x147))+((r20*x152))+x146+pz+(((-1.0)*r21*x151)));
evalcond[3]=((-0.0114346438405526)+(((-0.0132307119917738)*(cj1*cj1)))+((x139*x156))+((x139*x155))+((x139*x159))+(((-1.0)*x134*x156))+((x136*x161))+((x140*x153))+((x140*x155))+((x140*x156))+((x142*x156))+((x142*x153))+((x142*x159))+(((-1.0)*x137*x156))+((x137*x161))+((x137*x160))+(((-1.0)*x143*x158))+(((-1.0)*x141*x145*x150))+(((0.0335880668775771)*cj1*sj1))+((x136*x157))+(((-2.0)*x134*x153))+(((0.0044222503947658)*x137))+(((0.0044222503947658)*x134))+(((-1.0)*x141*x143*x150))+(((-0.133000005936328)*npy*x133))+(((0.133000005936328)*npx*x132))+(((-1.0)*x150*x154))+(((-1.0)*x150*x158))+(((-2.0)*x137*x155))+x160+x161+x157+x155+x154+x153+x159+x158+x149+((x141*x144))+(((-1.0)*x148*x149))+(((-1.0)*x145*x154))+((x134*x157))+(((-2.0)*x136*x159))+((x134*x160)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x162=((0.0665000029681638)*cj5);
IkReal x163=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs((((r00*x162))+(((-1.0)*r01*x163))+px)))+(IKabs((py+((r10*x162))+(((-1.0)*r11*x163))))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x164=((0.0665000029681638)*cj5);
IkReal x165=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs((py+((r10*x164))+(((-1.0)*r11*x165)))))+(IKabs((((r01*x165))+(((-1.0)*r00*x164))+(((-1.0)*px))))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x166=((0.0665000029681638)*cj5);
IkReal x167=((0.0665000029681638)*sj5);
CheckValue<IkReal> x169 = IKatan2WithCheck(IkReal((py+((r10*x166))+(((-1.0)*r11*x167)))),IkReal((((r01*x167))+(((-1.0)*r00*x166))+(((-1.0)*px)))),IKFAST_ATAN2_MAGTHRESH);
if(!x169.valid){
continue;
}
IkReal x168=x169.value;
j0array[0]=((-1.0)*x168);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x168)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x170=IKsin(j0);
IkReal x171=IKcos(j0);
IkReal x172=((0.0665000029681638)*sj5);
IkReal x173=((0.0665000029681638)*cj5);
evalcond[0]=((((-1.0)*r01*x171*x172))+(((-1.0)*r11*x170*x172))+((py*x170))+((px*x171))+((r10*x170*x173))+((r00*x171*x173)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x174=((0.0665000029681638)*cj5);
IkReal x175=((0.0665000029681638)*sj5);
CheckValue<IkReal> x177 = IKatan2WithCheck(IkReal((((r00*x174))+(((-1.0)*r01*x175))+px)),IkReal(((((-1.0)*r11*x175))+py+((r10*x174)))),IKFAST_ATAN2_MAGTHRESH);
if(!x177.valid){
continue;
}
IkReal x176=x177.value;
j0array[0]=((-1.0)*x176);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x176)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x178=IKcos(j0);
IkReal x179=IKsin(j0);
IkReal x180=((0.0665000029681638)*sj5);
IkReal x181=((0.0665000029681638)*cj5);
evalcond[0]=(((py*x178))+(((-1.0)*r00*x179*x181))+(((-1.0)*px*x179))+((r01*x179*x180))+((r10*x178*x181))+(((-1.0)*r11*x178*x180)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}

}

}

} else
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
CheckValue<IkReal> x184 = IKatan2WithCheck(IkReal(((-0.15705208)*r22)),IkReal(((0.10693289409977)*r22)),IKFAST_ATAN2_MAGTHRESH);
if(!x184.valid){
continue;
}
IkReal x182=((1.0)*(x184.value));
if((r22*r22) < -0.00001)
continue;
CheckValue<IkReal> x185=IKPowWithIntegerCheck(IKabs(((138813692996068.0)*(IKsqrt(r22*r22)))),-1);
if(!x185.valid){
continue;
}
if( (((730598387500000.0)*npz*(x185.value))) < -1-IKFAST_SINCOS_THRESH || (((730598387500000.0)*npz*(x185.value))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x183=IKasin(((730598387500000.0)*npz*(x185.value)));
j1array[0]=((((-1.0)*x182))+(((-1.0)*x183)));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((3.14159265358979)+(((-1.0)*x182))+x183);
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[1];
IkReal x186=IKcos(j1);
IkReal x187=IKsin(j1);
evalcond[0]=((-0.00701239344578676)+(((-0.0132307119917738)*(x186*x186)))+(((-1.0)*pp))+(((0.0335880668775771)*x186*x187))+(((-0.213865788199539)*pz*x187))+(((0.31410416)*pz*x186)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x188=((1.60801337333718)*sj1);
IkReal x189=((2.36168530812227)*cj1);
if( IKabs((((r21*x188))+(((15.0375933137738)*npy))+(((-1.0)*r21*x189)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x189))+(((-15.0375933137738)*npx))+(((-1.0)*r20*x188)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r21*x188))+(((15.0375933137738)*npy))+(((-1.0)*r21*x189))))+IKsqr((((r20*x189))+(((-15.0375933137738)*npx))+(((-1.0)*r20*x188))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((r21*x188))+(((15.0375933137738)*npy))+(((-1.0)*r21*x189))), (((r20*x189))+(((-15.0375933137738)*npx))+(((-1.0)*r20*x188))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x190=IKcos(j5);
IkReal x191=IKsin(j5);
IkReal x192=r01*r01;
IkReal x193=py*py;
IkReal x194=r11*r11;
IkReal x195=r21*r21;
IkReal x196=px*px;
IkReal x197=r00*r00;
IkReal x198=r10*r10;
IkReal x199=pz*pz;
IkReal x200=r20*r20;
IkReal x201=r02*r02;
IkReal x202=r22*r22;
IkReal x203=r12*r12;
IkReal x204=((0.10693289409977)*sj1);
IkReal x205=((0.15705208)*cj1);
IkReal x206=x190*x190;
IkReal x207=((0.0044222503947658)*x194);
IkReal x208=((1.0)*x202);
IkReal x209=((0.0665000029681638)*x191);
IkReal x210=((0.0665000029681638)*x190);
IkReal x211=(x196*x197);
IkReal x212=(x196*x201);
IkReal x213=(x199*x200);
IkReal x214=((0.0044222503947658)*x206);
IkReal x215=(x195*x199);
IkReal x216=(x193*x203);
IkReal x217=(x193*x198);
IkReal x218=(x193*x194);
IkReal x219=(x192*x196);
evalcond[0]=(npx+x210+(((-1.0)*r20*x205))+((r20*x204)));
evalcond[1]=(npy+(((-1.0)*x209))+(((-1.0)*r21*x205))+((r21*x204)));
evalcond[2]=((((-1.0)*x205))+x204+(((-1.0)*r21*x209))+pz+((r20*x210)));
evalcond[3]=((-0.0114346438405526)+(((-0.0132307119917738)*(cj1*cj1)))+((x197*x214))+((x197*x213))+((x197*x217))+(((0.0335880668775771)*cj1*sj1))+(((-2.0)*x195*x213))+((x198*x214))+((x198*x213))+((x198*x211))+(((-1.0)*x206*x207))+(((-0.133000005936328)*npy*x191))+(((0.0044222503947658)*x195))+(((0.0044222503947658)*x192))+x211+x212+x213+x215+x216+x217+x218+x219+x207+(((-1.0)*x201*x216))+(((-2.0)*x194*x217))+(((-2.0)*x192*x211))+(((-1.0)*x199*x201*x208))+(((-1.0)*x192*x214))+(((-1.0)*x195*x214))+(((0.133000005936328)*npx*x190))+(((-1.0)*x208*x216))+(((-1.0)*x208*x212))+((x192*x215))+((x192*x218))+((x194*x219))+((x194*x215))+(((-1.0)*x199*x203*x208))+((x199*x202))+(((-1.0)*x203*x212))+((x200*x214))+((x200*x217))+((x200*x211))+((x195*x218))+((x195*x219)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x220=((0.0665000029681638)*cj5);
IkReal x221=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs((((r00*x220))+(((-1.0)*r01*x221))+px)))+(IKabs((((r10*x220))+py+(((-1.0)*r11*x221))))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x222=((0.0665000029681638)*cj5);
IkReal x223=((0.0665000029681638)*sj5);
j0eval[0]=((IKabs((((r01*x223))+(((-1.0)*px))+(((-1.0)*r00*x222)))))+(IKabs((((r10*x222))+py+(((-1.0)*r11*x223))))));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x224=((0.0665000029681638)*cj5);
IkReal x225=((0.0665000029681638)*sj5);
CheckValue<IkReal> x227 = IKatan2WithCheck(IkReal((((r10*x224))+py+(((-1.0)*r11*x225)))),IkReal((((r01*x225))+(((-1.0)*px))+(((-1.0)*r00*x224)))),IKFAST_ATAN2_MAGTHRESH);
if(!x227.valid){
continue;
}
IkReal x226=x227.value;
j0array[0]=((-1.0)*x226);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x226)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x228=IKsin(j0);
IkReal x229=IKcos(j0);
IkReal x230=((0.0665000029681638)*sj5);
IkReal x231=((0.0665000029681638)*cj5);
evalcond[0]=((((-1.0)*r11*x228*x230))+((r00*x229*x231))+(((-1.0)*r01*x229*x230))+((py*x228))+((px*x229))+((r10*x228*x231)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
IkReal x232=((0.0665000029681638)*cj5);
IkReal x233=((0.0665000029681638)*sj5);
CheckValue<IkReal> x235 = IKatan2WithCheck(IkReal((((r00*x232))+px+(((-1.0)*r01*x233)))),IkReal(((((-1.0)*r11*x233))+((r10*x232))+py)),IKFAST_ATAN2_MAGTHRESH);
if(!x235.valid){
continue;
}
IkReal x234=x235.value;
j0array[0]=((-1.0)*x234);
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=((3.14159265358979)+(((-1.0)*x234)));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
for(int ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[1];
IkReal x236=IKcos(j0);
IkReal x237=IKsin(j0);
IkReal x238=((0.0665000029681638)*sj5);
IkReal x239=((0.0665000029681638)*cj5);
evalcond[0]=((((-1.0)*r11*x236*x238))+((r01*x237*x238))+((r10*x236*x239))+(((-1.0)*px*x237))+((py*x236))+(((-1.0)*r00*x237*x239)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}

}

}
}
return solutions.GetNumSolutions()>0;
}
inline void rotationfunction0(IkSolutionListBase<IkReal>& solutions) {
for(int rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x72=((0.147859751618005)*cj5);
IkReal x73=((0.989008338615738)*sj5);
IkReal x74=((0.99222333463844)*sj0);
IkReal x75=((0.562801444122218)*sj1);
IkReal x76=((0.124470294443992)*cj0);
IkReal x77=((0.826592120996774)*sj1);
IkReal x78=((0.562801444122218)*cj1);
IkReal x79=((0.99222333463844)*cj0);
IkReal x80=((0.124470294443992)*sj0);
IkReal x81=((0.826592120996774)*cj1);
IkReal x82=((((-1.0)*x72))+x73);
IkReal x83=((((-1.0)*x73))+x72);
IkReal x84=((((-0.147859751618005)*sj5))+(((-0.989008338615738)*cj5)));
IkReal x85=(((r21*x82))+((r20*x84)));
IkReal x86=(((r10*x84))+((r11*x82)));
IkReal x87=(((r00*x84))+((r01*x82)));
IkReal x88=(((r21*x84))+((r20*x83)));
IkReal x89=(((r10*x83))+((r11*x84)));
IkReal x90=(((r00*x83))+((r01*x84)));
IkReal x91=(x74*x86);
IkReal x92=(x79*x87);
IkReal x93=(x76*x86);
IkReal x94=((((-1.0)*r02*x80))+((r02*x79))+((r12*x76))+((r12*x74)));
IkReal x95=(x91+x93+x92);
IkReal x96=((((-1.0)*x80*x87))+x95);
IkReal x97=(((x79*x90))+(((-1.0)*x80*x90))+((x74*x89))+((x76*x89)));
IkReal x98=((((-0.124470294443992)*sj0*x87))+x95);
new_r00=(((x77*x85))+((x81*x96))+((x78*x85))+(((-1.0)*x75*x96)));
new_r01=(((x81*x85))+(((-1.0)*x77*x98))+(((-1.0)*x78*x98))+(((-1.0)*x75*x85)));
new_r02=(((x74*x87))+(((-1.0)*x79*x86))+((x76*x87))+((x80*x86)));
new_r10=(((x77*x88))+((x81*x97))+((x78*x88))+(((-1.0)*x75*x97)));
new_r11=(((x81*x88))+(((-1.0)*x77*x97))+(((-1.0)*x78*x97))+(((-1.0)*x75*x88)));
new_r12=(((x74*x90))+(((-1.0)*x79*x89))+((x76*x90))+((x80*x89)));
new_r20=(((x81*x94))+((r22*x78))+((r22*x77))+(((-1.0)*x75*x94)));
new_r21=((((-1.0)*r22*x75))+(((-1.0)*x77*x94))+(((-1.0)*x78*x94))+((r22*x81)));
new_r22=(((r12*x80))+((r02*x74))+((r02*x76))+(((-1.0)*r12*x79)));
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((-1.0)*new_r02)) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.0)*new_r12)) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((-1.0)*new_r02))+IKsqr(((-1.0)*new_r12))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((-1.0)*new_r02), ((-1.0)*new_r12));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x99=IKcos(j4);
IkReal x100=IKsin(j4);
evalcond[0]=(x100+new_r02);
evalcond[1]=(x99+new_r12);
evalcond[2]=(((new_r00*x100))+((new_r10*x99)));
evalcond[3]=(((new_r01*x100))+((new_r11*x99)));
evalcond[4]=((((-1.0)*new_r12*x100))+((new_r02*x99)));
evalcond[5]=((1.0)+((new_r02*x100))+((new_r12*x99)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[1];
j3eval[0]=((new_r22*new_r22)+(((new_r12*new_r12)*(sj4*sj4)))+(((-2.0)*cj4*new_r02*new_r12*sj4))+(((cj4*cj4)*(new_r02*new_r02))));
if( IKabs(j3eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j2, j3]

} else
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IkReal x101=(cj4*new_r02);
IkReal x102=(new_r12*sj4);
CheckValue<IkReal> x104 = IKatan2WithCheck(IkReal(((((-0.446199441547226)*x101))+(((0.446199441547226)*x102))+(((-0.894933549691229)*new_r22)))),IkReal(((((0.894933549691229)*x102))+(((0.446199441547226)*new_r22))+(((-0.894933549691229)*x101)))),IKFAST_ATAN2_MAGTHRESH);
if(!x104.valid){
continue;
}
IkReal x103=x104.value;
j3array[0]=((-1.0)*x103);
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=((3.14159265358979)+(((-1.0)*x103)));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[1];
IkReal x105=(cj4*new_r02);
IkReal x106=(new_r12*sj4);
evalcond[0]=((((((((0.894933549691229)*x105))+(((-0.446199441547226)*new_r22))+(((-0.894933549691229)*x106))))*(IKcos(j3))))+(((((((-0.446199441547226)*x105))+(((0.446199441547226)*x106))+(((-0.894933549691229)*new_r22))))*(IKsin(j3)))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[1];
j2eval[0]=((IKabs(((((2.0)*sj3))+(((10.484623354879)*cj3)))))+(IKabs((cj3+(((-5.24231167743952)*sj3))+(((5.33683723973467)*new_r20))))));
if( IKabs(j2eval[0]) < 0.0000000100000000  )
{
{
IkReal j2eval[1];
j2eval[0]=((IKabs(((((-2.0)*cj3))+(((10.484623354879)*sj3)))))+(IKabs((sj3+(((5.33683723973467)*new_r21))+(((5.24231167743952)*cj3))))));
if( IKabs(j2eval[0]) < 0.0000000100000000  )
{
{
IkReal j2eval[1];
j2eval[0]=((IKabs(((((-2.0)*cj3))+(((10.484623354879)*sj3)))))+(IKabs((sj3+(((-5.33683723973467)*new_r10*sj4))+(((5.33683723973467)*cj4*new_r00))+(((5.24231167743952)*cj3))))));
if( IKabs(j2eval[0]) < 0.0000000100000000  )
{
continue; // no branches [j2]

} else
{
IkReal op[2+1], zeror[2];
int numroots;
IkReal x107=((5.24231167743952)*cj3);
IkReal x108=((5.33683723973467)*cj4*new_r00);
IkReal x109=((5.33683723973467)*new_r10*sj4);
op[0]=(sj3+(((-1.0)*x109))+x108+x107);
op[1]=((((-2.0)*cj3))+(((10.484623354879)*sj3)));
op[2]=((((-1.0)*sj3))+(((-1.0)*x109))+(((-1.0)*x107))+x108);
polyroots2(op,zeror,numroots);
IkReal j2array[2], cj2array[2], sj2array[2], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((2.0)*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[2]={true,true};
_nj2 = 2;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
    }

}

}

} else
{
IkReal op[2+1], zeror[2];
int numroots;
IkReal x110=((5.33683723973467)*new_r21);
IkReal x111=((5.24231167743952)*cj3);
op[0]=(sj3+x111+x110);
op[1]=((((-2.0)*cj3))+(((10.484623354879)*sj3)));
op[2]=((((-1.0)*sj3))+(((-1.0)*x111))+x110);
polyroots2(op,zeror,numroots);
IkReal j2array[2], cj2array[2], sj2array[2], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((2.0)*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[2]={true,true};
_nj2 = 2;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
    }

}

}

} else
{
IkReal op[2+1], zeror[2];
int numroots;
IkReal x112=((5.24231167743952)*sj3);
IkReal x113=((5.33683723973467)*new_r20);
op[0]=(cj3+(((-1.0)*x112))+x113);
op[1]=((((2.0)*sj3))+(((10.484623354879)*cj3)));
op[2]=(x113+x112+(((-1.0)*cj3)));
polyroots2(op,zeror,numroots);
IkReal j2array[2], cj2array[2], sj2array[2], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((2.0)*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[2]={true,true};
_nj2 = 2;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
    }

}

}
}
}

}

}
}
}
}
}static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int& numroots) {
    IkReal det = rawcoeffs[1]*rawcoeffs[1]-4*rawcoeffs[0]*rawcoeffs[2];
    if( det < 0 ) {
        numroots=0;
    }
    else if( det == 0 ) {
        rawroots[0] = -0.5*rawcoeffs[1]/rawcoeffs[0];
        numroots = 1;
    }
    else {
        det = IKsqrt(det);
        rawroots[0] = (-rawcoeffs[1]+det)/(2*rawcoeffs[0]);
        rawroots[1] = (-rawcoeffs[1]-det)/(2*rawcoeffs[0]);//rawcoeffs[2]/(rawcoeffs[0]*rawroots[0]);
        numroots = 2;
    }
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - IprHd6ms90 (5a513f695572b9c18c237c67dffd4caf)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
