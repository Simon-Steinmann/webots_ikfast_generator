/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x10000049 generated on 2020-09-11 19:07:37.134140
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x10000049);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((1.0)*x8);
x13=((0.433012903784321)*x3);
x14=((0.866025201892125)*x7);
x15=((0.161858921054852)*x2);
x16=((0.749999650312296)*x2);
x17=((1.0)*x9);
x18=((0.343510078378994)*x2);
x19=((0.749999650312296)*x3);
x20=((0.500000349687582)*x5);
x21=((0.343510078378994)*x3);
x22=((0.866025201892125)*x3);
x23=((0.17559403230274)*x7);
x24=((1.0)*x7);
x25=((1.0)*x5);
x26=((0.161858921054852)*x3);
x27=((0.0877970775544225)*x5);
x28=((0.250000349687704)*x3);
x29=((1.0)*x3);
x30=((0.866025201892125)*x5);
x31=((0.152068857276033)*x3);
x32=((0.500000349687582)*x3);
x33=((0.433012903784321)*x2);
x34=((0.500000349687582)*x2);
x35=((0.500000349687582)*x7);
x36=((0.17559403230274)*x5);
x37=((1.0)*x2);
x38=(x0*x4);
x39=(x1*x6);
x40=(x1*x2);
x41=(x5*x9);
x42=((-0.500000349687582)*x7);
x43=(x0*x1);
x44=(x4*x6);
x45=(x3*x4);
x46=(x2*x4);
x47=((-1.0)*x7);
x48=((-0.433012903784321)*x3);
x49=(x5*x6);
x50=(x0*x5);
x51=((0.433012903784321)*x49);
x52=((0.433012903784321)*x50);
x53=(x32*x4);
x54=(x1*x34);
x55=(x33*x4);
x56=(x1*x13);
x57=(x1*x22);
x58=((0.866025201892125)*x46);
x59=((0.749999650312296)*x43);
x60=(x13*x38);
x61=(x33*x39);
x62=((((-1.0)*x1*x37))+x45);
x63=(x53+(((-1.0)*x54)));
x64=(x55+x56);
x65=(x58+x57);
x66=(x5*x62);
x67=(x7*((((x1*x16))+(((-1.0)*x19*x4)))));
x68=(x63*x7);
x69=(x41*((x54+(((-1.0)*x53)))));
x70=((((-1.0)*x37*x38))+(((-1.0)*x29*x43)));
x71=(((x34*x38))+((x32*x43)));
x72=((((-1.0)*x29*x39))+(((-1.0)*x37*x44)));
x73=(((x34*x44))+((x32*x39)));
x74=(x5*x70);
x75=((((-1.0)*x25*x72))+((x0*x24)));
x76=((((-1.0)*x25*x70))+(((-1.0)*x24*x6)));
x77=(x67+x69);
x78=((((-1.0)*x22*x38))+(((0.866025201892125)*x0*x40))+(((-1.0)*x20*x6))+(((-1.0)*x24*x71)));
x79=(((x0*x20))+(((0.866025201892125)*x2*x39))+(((-1.0)*x22*x44))+(((-1.0)*x24*x73)));
x80=(((x9*((((x35*x6))+((x20*x70))))))+x60+(((-0.433012903784321)*x0*x40))+((x7*(((((-1.0)*x16*x38))+(((-1.0)*x19*x43))))))+(((-0.749999650312296)*x49))+((x8*(((((-1.0)*x35*x71))+(((-0.250000349687704)*x49))+((x33*x43))+(((-1.0)*x60)))))));
IkReal x82=((1.0)*x44);
x81=((((-0.749999650312296)*x50))+((x47*(((((-1.0)*x16*x82))+(((-1.0)*x19*x39))))))+((x8*((((x13*x82))+(((-0.250000349687704)*x50))+(((1.0)*x35*x73))+(((-1.0)*x61))))))+((x9*(((((-1.0)*x20*x72))+(((-1.0)*x0*x42))))))+x61+((x44*x48)));
eerot[0]=(((x11*x80))+((x10*(((((-1.0)*x12*x76))+(((-1.0)*x17*x78)))))));
eerot[1]=(((x10*x80))+((x11*((((x78*x9))+((x76*x8)))))));
IkReal x83=((1.0)*x38);
eerot[2]=(((x9*((((x30*x70))+((x14*x6))))))+(((-1.0)*x28*x83))+x51+(((0.250000349687704)*x0*x40))+((x8*((((x16*x43))+(((-1.0)*x19*x83))+(((-1.0)*x14*x71))+(((-1.0)*x51))))))+((x7*((((x13*x43))+((x33*x38)))))));
IkReal x84=((1.0)*x38);
eetrans[0]=(((x7*((((x26*x43))+((x15*x38))))))+((x18*x43))+((x9*((((x23*x6))+((x36*x70))))))+(((-0.0098)*x6))+(((0.41)*x38))+(((0.161858921054852)*x49))+((x8*(((((-1.0)*x23*x71))+(((0.152068857276033)*x0*x40))+(((-1.0)*x31*x84))+(((-1.0)*x27*x6))))))+(((-1.0)*x21*x84)));
eerot[3]=(((x10*((((x79*x9))+((x75*x8))))))+((x11*x81)));
eerot[4]=(((x10*x81))+((x11*(((((-1.0)*x12*x75))+(((-1.0)*x17*x79)))))));
IkReal x85=((1.0)*x39);
eerot[5]=(((x8*((((x14*x73))+(((-1.0)*x16*x85))+((x19*x44))+(((-1.0)*x52))))))+((x28*x44))+(((-0.250000349687704)*x2*x39))+x52+((x9*((((x0*x14))+(((-1.0)*x30*x72))))))+((x7*(((((-1.0)*x13*x85))+(((-1.0)*x33*x44)))))));
IkReal x86=((1.0)*x39);
eetrans[1]=(((x9*(((((-1.0)*x36*x72))+((x0*x23))))))+(((-0.41)*x44))+(((-0.0098)*x0))+((x8*((((x23*x73))+(((-1.0)*x0*x27))+(((-0.152068857276033)*x2*x39))+((x31*x44))))))+((x21*x44))+((x7*(((((-1.0)*x15*x44))+(((-1.0)*x26*x86))))))+(((0.161858921054852)*x50))+(((-1.0)*x18*x86)));
eerot[6]=((((-1.0)*x10*((((x12*x66))+((x17*((x65+(((-1.0)*x24*x63))))))))))+((x11*(((((-0.433012903784321)*x46))+((x8*((x64+((x42*x63))))))+x77+((x1*x48)))))));
eerot[7]=(((x11*((((x9*((x65+((x47*x63))))))+((x66*x8))))))+((x10*((((x8*((x64+(((-1.0)*x35*x63))))))+x77+(((-1.0)*x64)))))));
eerot[8]=(((x8*((((x1*x19))+((x16*x4))+(((-1.0)*x14*x63))))))+((x41*(((((0.866025201892125)*x40))+(((-1.0)*x22*x4))))))+((x1*x28))+(((0.250000349687704)*x46))+((x7*(((((-1.0)*x1*x33))+((x13*x4)))))));
eetrans[2]=((0.2755)+((x18*x4))+((x1*x21))+((x41*(((((-0.17559403230274)*x45))+(((0.17559403230274)*x40))))))+(((-0.41)*x1))+((x8*(((((0.152068857276033)*x46))+(((-1.0)*x23*x63))+((x1*x31))))))+((x7*(((((-1.0)*x1*x15))+((x26*x4)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r01;
new_r01=r00;
new_r02=r02;
new_px=((((0.224138935655027)*r02))+(((-1.0)*px)));
new_r10=((-1.0)*r11);
new_r11=((-1.0)*r10);
new_r12=((-1.0)*r12);
new_py=(py+(((-0.224138935655027)*r12)));
new_r20=r21;
new_r21=r20;
new_r22=r22;
new_pz=((0.2755)+(((0.224138935655027)*r22))+(((-1.0)*pz)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x87=((1.0)*px);
IkReal x88=((1.0)*pz);
IkReal x89=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x89))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x88)));
rxp0_2=((((-1.0)*r10*x87))+((py*r00)));
rxp1_0=((((-1.0)*r21*x89))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x88)));
rxp1_2=((((-1.0)*r11*x87))+((py*r01)));
rxp2_0=((((-1.0)*r22*x89))+((pz*r12)));
rxp2_1=((((-1.0)*r02*x88))+((px*r22)));
rxp2_2=((((-1.0)*r12*x87))+((py*r02)));
IkReal op[72], zeror[48];
int numroots;;
IkReal x90=((0.121461423340705)*npx);
IkReal x91=((0.2225808)*npz);
IkReal x92=((0.41)*pp);
IkReal x93=((0.0607307116703524)*npy);
IkReal x94=((0.0740618435004298)*r20);
IkReal x95=((0.0098)*r02);
IkReal x96=((1.0)*rxp2_2);
IkReal x97=((0.14812368700086)*r21);
IkReal x98=((0.710313086556749)*npy);
IkReal x99=((0.355156543278374)*npx);
IkReal x100=((0.0169740939570857)*r00);
IkReal x101=((1.73205040378425)*rxp0_2);
IkReal x102=((0.128278845939925)*r22);
IkReal x103=((0.0370300258978623)*r21);
IkReal x104=((0.0339481879141713)*r11);
IkReal x105=((3.4641008075685)*rxp1_2);
IkReal x106=((0.0740600517957246)*r20);
IkReal x107=((0.0339481879141713)*r01);
IkReal x108=((0.0169740939570857)*r10);
IkReal x109=((0.476618215006745)*npx);
IkReal x110=((0.0849937170959635)*npz);
IkReal x111=((0.238309107503372)*npy);
IkReal x112=((0.499999300624592)*rxp2_2);
IkReal x113=((0.00489999314612101)*r02);
IkReal x114=((0.00848705291417269)*r01);
IkReal x115=((0.0555458958510542)*r20);
IkReal x116=((0.866025807568642)*rxp1_2);
IkReal x117=((0.00489999314612101)*r12);
IkReal x118=((0.00848705291417269)*r11);
IkReal x119=((0.0169741058283454)*r10);
IkReal x120=((1.73205161513728)*rxp0_2);
IkReal x121=((0.111091791702108)*r21);
IkReal x122=((0.0169741058283454)*r00);
IkReal x123=((-0.0098)*r12);
IkReal x124=((-0.355156543278374)*npx);
IkReal x125=((-0.0169740939570857)*r10);
IkReal x126=((((-1.0)*x118))+x117);
IkReal x127=((0.0299267406287546)+x110);
IkReal x128=(x117+x118);
IkReal x129=(x105+x106);
IkReal x130=(x116+x115);
IkReal x131=(x100+x101);
IkReal x132=(x95+x96);
IkReal x133=(x100+x103);
IkReal x134=(x112+x114);
IkReal x135=(x91+x92);
IkReal x136=((0.0365027959923003)+(((-1.0)*x135))+x93);
IkReal x137=((0.0365027959923003)+(((-1.0)*x135))+(((-1.0)*x93)));
IkReal x138=(x127+x111+(((-1.0)*x92)));
IkReal x139=((((-1.0)*x111))+x127+(((-1.0)*x92)));
op[0]=x136;
op[1]=x136;
op[2]=x90;
op[3]=x90;
op[4]=x137;
op[5]=x137;
op[6]=((((-1.0)*x132))+(((-1.0)*x94)));
op[7]=x123;
op[8]=x97;
op[9]=0;
op[10]=((((-1.0)*x132))+x94);
op[11]=x123;
op[12]=x123;
op[13]=(x95+(((-1.0)*x96))+(((-1.0)*x94)));
op[14]=0;
op[15]=x97;
op[16]=x123;
op[17]=(x95+x94+(((-1.0)*x96)));
op[18]=0;
op[19]=x136;
op[20]=0;
op[21]=x90;
op[22]=0;
op[23]=x137;
op[24]=x124;
op[25]=x124;
op[26]=x98;
op[27]=x98;
op[28]=x99;
op[29]=x99;
op[30]=(x102+x103+(((-1.0)*x131)));
op[31]=x125;
op[32]=(x129+x107);
op[33]=x104;
op[34]=((((-1.0)*x103))+x131+x102);
op[35]=x108;
op[36]=x125;
op[37]=((((-1.0)*x101))+x133+x102);
op[38]=x104;
op[39]=((((-1.0)*x107))+x129);
op[40]=x108;
op[41]=(x101+x102+(((-1.0)*x133)));
op[42]=0;
op[43]=x124;
op[44]=0;
op[45]=x98;
op[46]=0;
op[47]=x99;
op[48]=x138;
op[49]=x138;
op[50]=x109;
op[51]=x109;
op[52]=x139;
op[53]=x139;
op[54]=(x134+x130+x113);
op[55]=x128;
op[56]=((((-1.0)*x121))+x122+x120);
op[57]=x119;
op[58]=((((-1.0)*x114))+x113+x112+(((-1.0)*x130)));
op[59]=x126;
op[60]=x128;
op[61]=((((-1.0)*x113))+(((-1.0)*x114))+x130+x112);
op[62]=x119;
op[63]=((((-1.0)*x121))+(((-1.0)*x122))+x120);
op[64]=x126;
op[65]=((((-1.0)*x113))+x134+(((-1.0)*x130)));
op[66]=0;
op[67]=x138;
op[68]=0;
op[69]=x109;
op[70]=0;
op[71]=x139;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j0array[16], cj0array[16], sj0array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj0 = zeror[ij4+2];
if(isnan(htj4)||isnan(htj5)||isnan(htj0)){
continue;
}
j4array[numsolutions]=((2.0)*(atan(htj4)));
j5array[numsolutions]=((2.0)*(atan(htj5)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x140=htj4*htj4;
CheckValue<IkReal> x141=IKPowWithIntegerCheck(((1.0)+x140),-1);
if(!x141.valid){
continue;
}
cj4array[numsolutions]=((x141.value)*(((1.0)+(((-1.0)*x140)))));
CheckValue<IkReal> x142=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x142.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x142.value));
}
if(isinf(htj5)){
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
}
else{
IkReal x143=htj5*htj5;
CheckValue<IkReal> x144=IKPowWithIntegerCheck(((1.0)+x143),-1);
if(!x144.valid){
continue;
}
cj5array[numsolutions]=((x144.value)*(((1.0)+(((-1.0)*x143)))));
CheckValue<IkReal> x145=IKPowWithIntegerCheck(((1.0)+(htj5*htj5)),-1);
if(!x145.valid){
continue;
}
sj5array[numsolutions]=((2.0)*htj5*(x145.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x146=htj0*htj0;
CheckValue<IkReal> x147=IKPowWithIntegerCheck(((1.0)+x146),-1);
if(!x147.valid){
continue;
}
cj0array[numsolutions]=((x147.value)*(((1.0)+(((-1.0)*x146)))));
CheckValue<IkReal> x148=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x148.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x148.value));
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj0 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij4]-cj0array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij4]-sj0array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij0[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j0 = j0array[ij4]; cj0 = cj0array[ij4]; sj0 = sj0array[ij4];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j3eval[4];
IkReal x149=(sj4*sj5);
IkReal x150=(cj5*r01);
IkReal x151=(cj4*r02);
IkReal x152=(r00*sj5);
IkReal x153=(cj0*r21);
IkReal x154=((1.99999860125065)*cj4);
IkReal x155=((0.433012903784321)*cj4);
IkReal x156=((1.73204919243206)*cj4);
IkReal x157=(cj0*r20);
IkReal x158=(cj5*sj4);
j3eval[0]=((((-2.99999440500457)*x151))+(((-1.0)*r02))+(((-1.0)*x150*x156))+(((-1.0)*x152*x156))+(((1.73204919243206)*x152))+(((1.73204919243206)*x150))+(((3.46409596216145)*r01*x149))+(((-3.46409596216145)*r00*x158)));
j3eval[1]=1.87500043710948e-9;
j3eval[2]=((((-1.0)*sj5*x153*x154))+(((-1.0)*x149*x157))+((cj5*x154*x157))+(((-1.0)*x153*x158))+(((-1.73204919243206)*cj0*r22*sj4)));
j3eval[3]=IKsign(((((-0.866025201892125)*r00*x158))+(((-0.250000349687704)*r02))+(((-1.0)*x150*x155))+(((0.433012903784321)*x152))+(((0.433012903784321)*x150))+(((-1.0)*x152*x155))+(((-0.749999650312296)*x151))+(((0.866025201892125)*r01*x149))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[4];
IkReal x159=(cj4*cj5);
IkReal x160=(r20*sj0);
IkReal x161=(cj4*r12);
IkReal x162=(r10*sj5);
IkReal x163=((0.433012903784321)*r11);
IkReal x164=(sj0*sj4);
IkReal x165=(sj4*sj5);
IkReal x166=((1.73204919243206)*r11);
IkReal x167=(cj5*r10*sj4);
j3eval[0]=((((-1.73204919243206)*cj4*x162))+(((-1.0)*x159*x166))+((cj5*x166))+(((-2.99999440500457)*x161))+(((-1.0)*r12))+(((3.46409596216145)*r11*x165))+(((1.73204919243206)*x162))+(((-3.46409596216145)*x167)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((-1.0)*x159*x163))+(((0.866025201892125)*r11*x165))+((cj5*x163))+(((-0.866025201892125)*x167))+(((0.433012903784321)*x162))+(((-0.749999650312296)*x161))+(((-0.433012903784321)*cj4*x162))));
j3eval[2]=1.87500043710948e-9;
j3eval[3]=((((-1.99999860125065)*cj4*r21*sj0*sj5))+(((1.99999860125065)*x159*x160))+(((-1.0)*cj5*r21*x164))+(((-1.73204919243206)*r22*x164))+(((-1.0)*x160*x165)));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x168=(cj4*r22);
IkReal x169=(cj5*r21);
IkReal x170=((0.866025201892125)*sj4);
IkReal x171=(cj5*r20);
IkReal x172=(r21*sj5);
IkReal x173=((3.46409596216145)*sj4);
IkReal x174=(r20*sj5);
IkReal x175=(cj4*x174);
j3eval[0]=((((2.99999440500457)*x168))+(((-1.73204919243206)*x174))+((x171*x173))+r22+(((1.73204919243206)*cj4*x169))+(((1.73204919243206)*x175))+(((-1.0)*x172*x173))+(((-1.73204919243206)*x169)));
j3eval[1]=IKsign(((((-0.433012903784321)*x169))+(((-0.433012903784321)*x174))+(((0.749999650312296)*x168))+(((0.433012903784321)*x175))+(((-1.0)*x170*x172))+(((0.250000349687704)*r22))+((x170*x171))+(((0.433012903784321)*cj4*x169))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x176=(cj5*r01);
IkReal x177=(cj4*r02);
IkReal x178=(r00*sj5);
IkReal x179=((0.433012903784321)*cj4);
IkReal x180=((1.73204919243206)*cj4);
IkReal x181=(r01*sj4*sj5);
IkReal x182=(cj5*r00*sj4);
j3eval[0]=((((-1.0)*x178*x180))+(((3.46409596216145)*x181))+(((-2.99999440500457)*x177))+(((-1.0)*r02))+(((-1.0)*x176*x180))+(((-3.46409596216145)*x182))+(((1.73204919243206)*x176))+(((1.73204919243206)*x178)));
j3eval[1]=IKsign(((((-0.250000349687704)*r02))+(((0.866025201892125)*x181))+(((0.433012903784321)*x178))+(((0.433012903784321)*x176))+(((-0.866025201892125)*x182))+(((-1.0)*x176*x179))+(((-1.0)*x178*x179))+(((-0.749999650312296)*x177))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x183=(cj4*r22);
IkReal x184=(cj5*r21);
IkReal x185=((0.866025201892125)*sj4);
IkReal x186=(cj5*r20);
IkReal x187=(r21*sj5);
IkReal x188=((3.46409596216145)*sj4);
IkReal x189=(r20*sj5);
IkReal x190=(cj4*x189);
j3eval[0]=(((x186*x188))+(((-1.73204919243206)*x184))+(((-1.73204919243206)*x189))+(((2.99999440500457)*x183))+(((-1.0)*x187*x188))+r22+(((1.73204919243206)*x190))+(((1.73204919243206)*cj4*x184)));
j3eval[1]=IKsign(((((-0.433012903784321)*x189))+(((-0.433012903784321)*x184))+((x185*x186))+(((0.749999650312296)*x183))+(((0.250000349687704)*r22))+(((0.433012903784321)*x190))+(((0.433012903784321)*cj4*x184))+(((-1.0)*x185*x187))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x191=cj4*cj4;
IkReal x192=r11*r11;
IkReal x193=cj5*cj5;
IkReal x194=r10*r10;
IkReal x195=r12*r12;
IkReal x196=(r12*sj5);
IkReal x197=(cj5*r11);
IkReal x198=(r11*sj4);
IkReal x199=(r10*sj5);
IkReal x200=(cj4*r10);
IkReal x201=(cj5*sj4);
IkReal x202=((3.9999972025013)*sj5);
IkReal x203=((0.375000349687459)*cj4);
IkReal x204=((2.0)*cj4);
IkReal x205=(cj4*r12);
IkReal x206=((0.750000174843424)*sj5);
IkReal x207=(r10*r12);
IkReal x208=((3.46409838486413)*x191);
IkReal x209=((4.99999440500457)*x193);
IkReal x210=(r10*x193);
IkReal x211=(cj4*x194);
IkReal x212=((0.649519052837905)*x191);
IkReal x213=(x191*x192);
IkReal x214=(x192*x193);
IkReal x215=(x193*x194);
IkReal x216=(x191*x194);
IkReal x217=(x191*x195);
IkReal x218=(cj4*sj5*x192*x201);
j3eval[0]=(((x201*x202*x211))+(((2.30940161513813)*x201*x207))+((x204*x215))+(((-1.0)*x194*x204))+(((3.9999972025013)*r10*x198))+(((-4.99999440500457)*x195))+(((-5.99998881000913)*x197*x199))+(((-2.30940161513813)*x196*x198))+((x195*x204))+(((-2.309396769726)*x197*x205))+(((-1.0)*x204*x214))+(((-2.99999440500457)*x214))+(((-1.33333395500065)*x192))+((x209*x213))+x216+(((-1.15470161513813)*r10*x196))+(((-1.0)*x194*x201*x202))+(((-7.99999440500261)*x198*x210))+(((-3.99999440500457)*x213))+(((-1.15470161513813)*r12*x197))+(((-2.309396769726)*x196*x200))+(((9.99998881000913)*x191*x197*x199))+((x192*x201*x202))+(((-4.33332836000522)*x194))+(((7.99999440500261)*x193*x198*x200))+(((-4.0)*cj4*x197*x199))+(((6.9281919243229)*r12*x200*x201))+((r10*x196*x208))+(((-3.9999972025013)*x198*x200))+((r12*x197*x208))+(((-6.9281919243229)*cj4*x196*x198))+(((-1.0)*x209*x216))+(((2.99999440500457)*x215))+(((2.99999440500457)*x217))+(((-1.0)*cj4*x192*x201*x202)));
j3eval[1]=IKsign(((((-0.433012298107169)*x197*x205))+((r10*x196*x212))+(((0.18750017484373)*x216))+(((0.937499825156026)*x193*x213))+(((-0.81249982515627)*x194))+(((1.29903719716146)*r12*x200*x201))+(((-0.562499475468567)*x214))+((x201*x206*x211))+(((-0.937499825156026)*x195))+(((-1.0)*x194*x203))+(((-0.749999650312296)*x213))+(((0.562499475468567)*x217))+(((0.562499475468567)*x215))+((x195*x203))+((x203*x215))+(((0.750000174843424)*r10*x198))+((r12*x197*x212))+(((-0.216506754730737)*r10*x196))+(((-0.750000174843424)*x198*x200))+(((0.433013206622791)*x201*x207))+(((1.87499965031205)*x191*x197*x199))+(((1.50000034968685)*x193*x198*x200))+(((-1.50000034968685)*x198*x210))+(((-1.0)*x194*x201*x206))+(((-0.250000349687704)*x192))+(((-1.0)*x203*x214))+(((-1.29903719716146)*cj4*x196*x198))+((x192*x201*x206))+(((-0.433013206622791)*x196*x198))+(((-0.937499825156026)*x191*x215))+(((-0.750000699374918)*cj4*x197*x199))+(((-1.12499895093713)*x197*x199))+(((-0.216506754730737)*r12*x197))+(((-1.0)*cj4*x192*x201*x206))+(((-0.433012298107169)*x196*x200))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x219=cj4*cj4;
IkReal x220=cj5*cj5;
IkReal x221=r10*r10;
IkReal x222=r12*r12;
IkReal x223=r11*r11;
IkReal x224=(r12*sj5);
IkReal x225=(r11*sj4);
IkReal x226=(r12*sj4);
IkReal x227=((0.750000174843424)*cj4);
IkReal x228=(cj5*sj5);
IkReal x229=((0.433012903784321)*r12);
IkReal x230=(r10*sj5);
IkReal x231=((1.50000034968685)*r10);
IkReal x232=((0.433012298107169)*cj4);
IkReal x233=(r10*r11);
IkReal x234=(cj5*r11);
IkReal x235=(cj5*r10);
IkReal x236=((0.375000349687459)*cj4);
IkReal x237=((1.29903719716146)*cj4);
IkReal x238=((0.250000349687704)*cj4);
IkReal x239=((0.500000349687582)*sj4);
IkReal x240=((0.562499475468567)*x220);
IkReal x241=(r12*x234);
IkReal x242=(sj4*x223);
IkReal x243=(cj4*x220);
IkReal x244=((0.937499825156026)*x220);
IkReal x245=(r10*x219);
IkReal x246=(sj4*x221);
IkReal x247=(x219*x223);
IkReal x248=(x219*x221);
CheckValue<IkReal> x249 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x235))+((x230*x239))+(((0.500000349687582)*cj5*x225))+((cj4*r11*sj5))+(((0.866025201892125)*x226)))),IkReal(((((-1.0)*x230*x238))+(((-1.0)*cj4*x229))+(((-1.0)*x235*x239))+x229+(((0.500000349687582)*sj5*x225))+(((-1.0)*x234*x238))+(((-0.749999650312296)*x234))+(((-0.749999650312296)*x230)))),IKFAST_ATAN2_MAGTHRESH);
if(!x249.valid){
continue;
}
CheckValue<IkReal> x250=IKPowWithIntegerCheck(IKsign((((x221*x240))+(((-0.216506754730737)*r10*x224))+(((1.87499965031205)*x219*x228*x233))+(((-1.0)*x227*x228*x242))+(((-1.0)*r10*x225*x227))+((x227*x228*x246))+(((0.433013206622791)*x226*x235))+(((-0.750000174843424)*x228*x246))+(((-1.0)*x220*x223*x236))+(((-0.937499825156026)*x222))+(((-0.433013206622791)*x224*x225))+(((-0.250000349687704)*x223))+((x226*x235*x237))+(((-0.216506754730737)*x241))+((x244*x247))+(((-1.0)*x224*x225*x237))+(((0.18750017484373)*x248))+(((-1.0)*x221*x236))+(((-1.0)*x223*x240))+(((-1.0)*x232*x241))+((x225*x231*x243))+((x222*x236))+(((0.649519052837905)*x219*x241))+(((-0.749999650312296)*x247))+(((0.750000174843424)*x228*x242))+(((0.750000174843424)*r10*x225))+(((-1.0)*r10*x224*x232))+(((0.562499475468567)*x219*x222))+(((0.649519052837905)*x224*x245))+(((-1.0)*x220*x225*x231))+(((-0.81249982515627)*x221))+(((-0.750000699374918)*cj4*x228*x233))+((x220*x221*x236))+(((-1.0)*x244*x248))+(((-1.12499895093713)*x228*x233)))),-1);
if(!x250.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x249.value)+(((1.5707963267949)*(x250.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x251=IKsin(j3);
IkReal x252=IKcos(j3);
IkReal x253=(r11*sj5);
IkReal x254=(r10*sj5);
IkReal x255=(cj5*r20);
IkReal x256=(cj5*r11);
IkReal x257=(r00*sj5);
IkReal x258=(cj4*cj5);
IkReal x259=((0.500000349687582)*cj5);
IkReal x260=(r21*sj5);
IkReal x261=(r20*sj5);
IkReal x262=(r01*sj5);
IkReal x263=(sj4*x251);
IkReal x264=((1.0)*x251);
IkReal x265=((0.250000349687704)*x252);
IkReal x266=((0.749999650312296)*x252);
IkReal x267=((0.433012903784321)*cj4*r12);
IkReal x268=((0.749999650312296)*x251);
IkReal x269=(r12*x252);
IkReal x270=(cj4*x251);
IkReal x271=((0.500000349687582)*sj4*x252);
IkReal x272=((0.250000349687704)*x270);
IkReal x273=((0.433012903784321)*r02*x252);
IkReal x274=((0.433012903784321)*r22*x252);
evalcond[0]=((((0.866025201892125)*r22*x263))+(((-1.0)*x255*x271))+(((-1.0)*cj4*x274))+(((-1.0)*cj5*r21*x266))+((x260*x270))+((x260*x271))+(((-1.0)*cj4*x261*x265))+(((-1.0)*cj4*x255*x264))+x274+(((-1.0)*x261*x266))+(((0.500000349687582)*x261*x263))+((r21*x259*x263))+(((-1.0)*r21*x258*x265)));
evalcond[1]=((((-1.0)*r01*x258*x265))+(((-1.0)*cj4*x273))+((r01*x259*x263))+(((-1.0)*r00*x258*x264))+(((-1.0)*cj5*r01*x266))+((x262*x271))+((x262*x270))+(((-1.0)*r00*sj4*x252*x259))+x273+(((0.866025201892125)*r02*x263))+(((0.500000349687582)*x257*x263))+(((-1.0)*x257*x266))+(((-1.0)*cj4*x257*x265)));
evalcond[2]=((((-0.500000349687582)*x253*x263))+((r10*x259*x263))+((cj4*x252*x253))+(((0.866025201892125)*sj4*x269))+((x254*x268))+((x254*x271))+((x254*x272))+((x256*x268))+(((-1.0)*r10*x252*x258))+((x256*x271))+((x256*x272))+(((-0.433012903784321)*r12*x251))+((x251*x267)));
evalcond[3]=((1.0)+(((-1.0)*r10*sj4*x252*x259))+((x253*x270))+((x253*x271))+(((0.433012903784321)*x269))+(((-1.0)*cj4*x254*x265))+(((0.866025201892125)*r12*x263))+(((0.500000349687582)*x256*x263))+(((-1.0)*x252*x267))+(((-1.0)*x256*x266))+(((0.500000349687582)*x254*x263))+(((-1.0)*x254*x266))+(((-1.0)*cj4*x256*x265))+(((-1.0)*r10*x258*x264)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x275=((0.26409636501044)*cj4);
IkReal x276=(r20*sj5);
IkReal x277=(cj5*r21);
IkReal x278=((0.457427895740576)*cj4);
IkReal x279=(r00*sj5);
IkReal x280=((0.528192360616262)*sj4);
IkReal x281=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x280))+((r01*sj5*x280))+(((-1.0)*r02*x278))+(((0.444735007694415)*x279))+(((0.444735007694415)*x281))+(((-1.0)*x275*x279))+(((-1.0)*x275*x281)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x275*x277))+((x275*x276))+(((0.204620884747229)*r22))+((r22*x278))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x276))+((cj5*r20*x280))+(((-1.0)*r21*sj5*x280))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x280))+((r01*sj5*x280))+(((-1.0)*r02*x278))+(((0.444735007694415)*x279))+(((0.444735007694415)*x281))+(((-1.0)*x275*x279))+(((-1.0)*x275*x281))))+IKsqr((((x275*x277))+((x275*x276))+(((0.204620884747229)*r22))+((r22*x278))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x276))+((cj5*r20*x280))+(((-1.0)*r21*sj5*x280))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x280))+((r01*sj5*x280))+(((-1.0)*r02*x278))+(((0.444735007694415)*x279))+(((0.444735007694415)*x281))+(((-1.0)*x275*x279))+(((-1.0)*x275*x281))), (((x275*x277))+((x275*x276))+(((0.204620884747229)*r22))+((r22*x278))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x276))+((cj5*r20*x280))+(((-1.0)*r21*sj5*x280))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x282=((1.0)*px);
IkReal x283=((0.187545437253636)*cj4);
IkReal x284=(r20*sj5);
IkReal x285=(r01*sj3);
IkReal x286=(cj5*r21);
IkReal x287=(cj3*r00);
IkReal x288=((0.0185150129489311)*sj4);
IkReal x289=(r21*sj5);
IkReal x290=((0.20357990508077)*sj3);
IkReal x291=(cj5*sj4);
IkReal x292=((0.135720094919197)*sj3);
IkReal x293=(cj4*cj5);
IkReal x294=(r00*sj5);
IkReal x295=((0.00925751294893567)*cj4);
IkReal x296=((0.10827950965428)*cj4);
IkReal x297=(cj4*r22);
IkReal x298=((0.117537022603216)*sj3);
IkReal x299=(cj5*r01);
IkReal x300=((0.135720094919197)*cj3);
IkReal x301=(r01*sj5);
IkReal x302=((0.216558867852667)*sj4);
IkReal x303=(cj4*r02);
IkReal x304=((0.27144)*cj3);
IkReal x305=((0.41)*(IKsin(j1)));
IkReal x306=((0.41)*(IKcos(j1)));
IkReal x307=((0.135720094919197)*sj4*sj5);
IkReal x308=((0.0678600949192303)*cj4*sj3);
IkReal x309=((0.235073880801598)*cj3*sj4);
IkReal x310=(x305+x282);
evalcond[0]=(((r22*x283))+((x284*x296))+(((-0.18234135315471)*x286))+(((-0.18234135315471)*x284))+((x286*x296))+pz+(((0.216558867852667)*r20*x291))+(((-1.0)*x289*x302))+(((0.0838945627463637)*r22))+(((-1.0)*x306)));
evalcond[1]=(((x301*x302))+(((-1.0)*r02*x283))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x291))+(((-1.0)*x310))+(((0.18234135315471)*x294))+(((0.18234135315471)*x299))+(((-1.0)*x294*x296))+(((-0.10827950965428)*r01*x293)));
evalcond[2]=((((-1.0)*x284*x290))+(((-1.0)*r22*x309))+(((-1.0)*sj4*x284*x300))+(((0.0160344678271334)*x303))+(((-0.0160344678271334)*r02))+(((-1.0)*x286*x308))+(((-1.0)*x286*x290))+(((-1.0)*x297*x298))+(((0.00925751294893567)*r01*x293))+(((-1.0)*x284*x308))+((cj5*r00*x288))+((r20*x293*x304))+(((-1.0)*x288*x301))+(((-1.0)*cj4*x289*x304))+(((-1.0)*x310))+((x294*x295))+(((-1.0)*sj4*x286*x300))+(((-1.0)*r20*x291*x292))+(((0.0648043305514941)*x299))+(((0.0648043305514941)*x294))+((r22*x298))+((sj4*x289*x292)));
evalcond[3]=(((x290*x294))+(((0.0160344678271334)*x297))+(((-1.0)*x288*x289))+((cj4*x301*x304))+((x287*x307))+(((-0.0160344678271334)*r22))+((r02*x309))+(((0.0648043305514941)*x286))+(((0.0648043305514941)*x284))+(((-1.0)*x285*x307))+(((-0.27144)*x287*x293))+((x284*x295))+(((-1.0)*r02*x298))+((x294*x308))+x306+(((-1.0)*pz))+((cj5*r20*x288))+((x286*x295))+((x298*x303))+((r00*x291*x292))+(((0.20357990508077)*cj5*x285))+(((0.0678600949192303)*x285*x293))+((r01*x291*x300)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x311=((0.250000349687704)*sj1);
IkReal x312=(cj1*cj4);
IkReal x313=((0.749999650312296)*r22);
IkReal x314=(cj4*sj1);
IkReal x315=((0.749999650312296)*r02);
IkReal x316=((0.250000349687704)*cj1);
IkReal x317=((0.433012903784321)*r00*sj5);
IkReal x318=((0.433012903784321)*r20*sj5);
IkReal x319=((0.433012903784321)*cj5*r01);
IkReal x320=((0.433012903784321)*cj5*r21);
IkReal x321=((0.866025201892125)*cj5*sj1*sj4);
IkReal x322=((0.866025201892125)*cj1*cj5*sj4);
IkReal x323=((0.866025201892125)*r01*sj4*sj5);
IkReal x324=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x320))+(((-1.0)*sj1*x324))+((r20*x321))+((x312*x317))+((x312*x319))+((x312*x315))+((r02*x316))+((r00*x322))+(((-1.0)*sj1*x318))+(((-1.0)*cj1*x323))+((x314*x320))+(((-1.0)*cj1*x319))+(((-1.0)*cj1*x317))+((x314*x318))+((r22*x311))+((x313*x314)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r02*x311))+((r20*x322))+((x312*x313))+((x312*x318))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((sj1*x317))+((sj1*x319))+((x312*x320))+((sj1*x323))+(((-1.0)*r00*x321))+(((-1.0)*cj1*x318))+(((-1.0)*x314*x317))+(((-1.0)*x314*x315))+(((-1.0)*x314*x319))+((r22*x316)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x320))+(((-1.0)*sj1*x324))+((r20*x321))+((x312*x317))+((x312*x319))+((x312*x315))+((r02*x316))+((r00*x322))+(((-1.0)*sj1*x318))+(((-1.0)*cj1*x323))+((x314*x320))+(((-1.0)*cj1*x319))+(((-1.0)*cj1*x317))+((x314*x318))+((r22*x311))+((x313*x314))))+IKsqr(((((-1.0)*r02*x311))+((r20*x322))+((x312*x313))+((x312*x318))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((sj1*x317))+((sj1*x319))+((x312*x320))+((sj1*x323))+(((-1.0)*r00*x321))+(((-1.0)*cj1*x318))+(((-1.0)*x314*x317))+(((-1.0)*x314*x315))+(((-1.0)*x314*x319))+((r22*x316))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x320))+(((-1.0)*sj1*x324))+((r20*x321))+((x312*x317))+((x312*x319))+((x312*x315))+((r02*x316))+((r00*x322))+(((-1.0)*sj1*x318))+(((-1.0)*cj1*x323))+((x314*x320))+(((-1.0)*cj1*x319))+(((-1.0)*cj1*x317))+((x314*x318))+((r22*x311))+((x313*x314))), ((((-1.0)*r02*x311))+((r20*x322))+((x312*x313))+((x312*x318))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((sj1*x317))+((sj1*x319))+((x312*x320))+((sj1*x323))+(((-1.0)*r00*x321))+(((-1.0)*cj1*x318))+(((-1.0)*x314*x317))+(((-1.0)*x314*x315))+(((-1.0)*x314*x319))+((r22*x316))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x325=IKsin(j2);
IkReal x326=IKcos(j2);
IkReal x327=((0.749999650312296)*sj3);
IkReal x328=(cj5*r01);
IkReal x329=(r00*sj5);
IkReal x330=(cj4*cj5);
IkReal x331=((1.0)*cj3);
IkReal x332=(r21*sj3);
IkReal x333=(cj4*sj5);
IkReal x334=(cj3*r21);
IkReal x335=((0.500000349687582)*sj4);
IkReal x336=((0.433012903784321)*r20);
IkReal x337=(cj4*r22);
IkReal x338=((0.433012903784321)*sj3);
IkReal x339=((0.433012903784321)*cj4);
IkReal x340=(r01*sj5);
IkReal x341=(r20*sj5);
IkReal x342=((0.0160344678271334)*r02);
IkReal x343=(cj4*r02);
IkReal x344=((0.00925751294893567)*cj4);
IkReal x345=((0.0185150129489311)*sj4);
IkReal x346=(r21*sj5);
IkReal x347=(cj5*r21);
IkReal x348=((0.866025201892125)*sj4);
IkReal x349=(cj5*r20);
IkReal x350=(cj5*r00);
IkReal x351=((0.250000349687704)*sj3);
IkReal x352=(cj1*x326);
IkReal x353=(sj1*x325);
IkReal x354=(cj1*x325);
IkReal x355=(sj1*x326);
IkReal x356=(x353+x352);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x347))+((sj5*x336))+(((-1.0)*x333*x336))+(((-1.0)*x348*x349))+x356+((x346*x348))+(((-0.433012903784321)*r21*x330))+(((-0.749999650312296)*x337)));
evalcond[1]=((((0.433012903784321)*x328))+(((0.433012903784321)*x329))+(((-0.250000349687704)*r02))+(((-1.0)*x348*x350))+(((-1.0)*x329*x339))+(((-1.0)*x328*x339))+(((-1.0)*x355))+x354+(((-0.749999650312296)*x343))+((x340*x348)));
evalcond[2]=((((-0.27144)*x353))+(((-0.27144)*x352))+(((0.00925751294893567)*r21*x330))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x345*x349))+(((-1.0)*pz))+(((-1.0)*x345*x346))+(((0.0648043305514941)*x341))+(((0.0648043305514941)*x347))+(((0.00925751294893567)*r20*x333))+(((0.0160344678271334)*x337)));
evalcond[3]=((((-0.27144)*x354))+((x345*x350))+((x329*x344))+(((-0.41)*sj1))+(((-1.0)*px))+((cj4*x342))+(((0.27144)*x355))+(((-1.0)*x340*x345))+(((0.0648043305514941)*x328))+(((0.0648043305514941)*x329))+((x328*x344))+(((-1.0)*x342)));
evalcond[4]=(((sj3*x335*x350))+((cj3*r02*x348))+((x327*x328))+((x327*x329))+((cj3*x329*x335))+((cj3*x328*x335))+x356+(((-1.0)*r02*x338))+((x338*x343))+((cj3*r01*x333))+((cj4*x329*x351))+(((-1.0)*sj3*x335*x340))+(((-1.0)*r00*x330*x331))+((cj4*x328*x351)));
evalcond[5]=(((r20*x333*x351))+((x327*x341))+((x327*x347))+((sj3*x335*x349))+(((-1.0)*sj5*x332*x335))+((cj3*r22*x348))+((x337*x338))+((cj3*x335*x341))+((cj5*x334*x335))+(((-1.0)*x354))+x355+((x333*x334))+(((0.250000349687704)*x330*x332))+(((-1.0)*r22*x338))+(((-1.0)*r20*x330*x331)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x357=((0.433012903784321)*cj5);
IkReal x358=((0.433012903784321)*cj4);
IkReal x359=(cj5*r01);
IkReal x360=((0.866025201892125)*sj4);
IkReal x361=((0.250000349687704)*cj4);
IkReal x362=(cj5*r00);
IkReal x363=((0.500000349687582)*sj4);
IkReal x364=(r00*sj5);
IkReal x365=(r01*sj5);
CheckValue<IkReal> x366 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x359))+(((-1.0)*x362*x363))+(((-1.0)*x361*x364))+(((-0.749999650312296)*x364))+(((0.433012903784321)*r02))+(((-1.0)*x359*x361))+(((-1.0)*r02*x358))+((x363*x365)))),IkReal(((((-1.0)*x363*x364))+(((-1.0)*r02*x360))+((cj4*x362))+(((-1.0)*cj4*x365))+(((-1.0)*x359*x363)))),IKFAST_ATAN2_MAGTHRESH);
if(!x366.valid){
continue;
}
CheckValue<IkReal> x367=IKPowWithIntegerCheck(IKsign((((r20*((((sj5*x358))+((cj5*x360))+(((-0.433012903784321)*sj5))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r21*(((((-1.0)*sj5*x360))+(((-1.0)*x357))+((cj4*x357)))))))),-1);
if(!x367.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x366.value)+(((1.5707963267949)*(x367.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x368=IKsin(j3);
IkReal x369=IKcos(j3);
IkReal x370=(r11*sj5);
IkReal x371=(r10*sj5);
IkReal x372=(cj5*r20);
IkReal x373=(cj5*r11);
IkReal x374=(r00*sj5);
IkReal x375=(cj4*cj5);
IkReal x376=((0.500000349687582)*cj5);
IkReal x377=(r21*sj5);
IkReal x378=(r20*sj5);
IkReal x379=(r01*sj5);
IkReal x380=(sj4*x368);
IkReal x381=((1.0)*x368);
IkReal x382=((0.250000349687704)*x369);
IkReal x383=((0.749999650312296)*x369);
IkReal x384=((0.433012903784321)*cj4*r12);
IkReal x385=((0.749999650312296)*x368);
IkReal x386=(r12*x369);
IkReal x387=(cj4*x368);
IkReal x388=((0.500000349687582)*sj4*x369);
IkReal x389=((0.250000349687704)*x387);
IkReal x390=((0.433012903784321)*r02*x369);
IkReal x391=((0.433012903784321)*r22*x369);
evalcond[0]=((((0.866025201892125)*r22*x380))+((x377*x387))+((x377*x388))+(((-1.0)*cj4*x391))+(((0.500000349687582)*x378*x380))+(((-1.0)*r21*x375*x382))+x391+(((-1.0)*cj5*r21*x383))+((r21*x376*x380))+(((-1.0)*x378*x383))+(((-1.0)*cj4*x378*x382))+(((-1.0)*x372*x388))+(((-1.0)*cj4*x372*x381)));
evalcond[1]=((((-1.0)*r01*x375*x382))+((r01*x376*x380))+(((-1.0)*cj4*x390))+(((-1.0)*r00*x375*x381))+(((-1.0)*cj4*x374*x382))+(((-1.0)*x374*x383))+(((0.500000349687582)*x374*x380))+(((-1.0)*cj5*r01*x383))+(((-1.0)*r00*sj4*x369*x376))+x390+((x379*x387))+((x379*x388))+(((0.866025201892125)*r02*x380)));
evalcond[2]=((((-1.0)*r10*x369*x375))+((x373*x389))+((x373*x388))+((x373*x385))+(((-0.500000349687582)*x370*x380))+((cj4*x369*x370))+((x368*x384))+((x371*x385))+((x371*x388))+((x371*x389))+(((0.866025201892125)*sj4*x386))+((r10*x376*x380))+(((-0.433012903784321)*r12*x368)));
evalcond[3]=((1.0)+(((-1.0)*x373*x383))+(((-1.0)*cj4*x373*x382))+(((-1.0)*r10*x375*x381))+(((-1.0)*x369*x384))+(((0.433012903784321)*x386))+((x370*x387))+((x370*x388))+(((-1.0)*cj4*x371*x382))+(((0.500000349687582)*x373*x380))+(((0.866025201892125)*r12*x380))+(((0.500000349687582)*x371*x380))+(((-1.0)*r10*sj4*x369*x376))+(((-1.0)*x371*x383)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x392=((0.26409636501044)*cj4);
IkReal x393=(r20*sj5);
IkReal x394=(cj5*r21);
IkReal x395=((0.457427895740576)*cj4);
IkReal x396=(r00*sj5);
IkReal x397=((0.528192360616262)*sj4);
IkReal x398=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x395))+(((0.444735007694415)*x398))+(((0.444735007694415)*x396))+((r01*sj5*x397))+(((-1.0)*cj5*r00*x397))+(((-1.0)*x392*x398))+(((-1.0)*x392*x396)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x397))+((r22*x395))+(((-0.444735007694415)*x394))+(((-0.444735007694415)*x393))+((cj5*r20*x397))+(((2.4390243902439)*pz))+((x392*x393))+((x392*x394)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x395))+(((0.444735007694415)*x398))+(((0.444735007694415)*x396))+((r01*sj5*x397))+(((-1.0)*cj5*r00*x397))+(((-1.0)*x392*x398))+(((-1.0)*x392*x396))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x397))+((r22*x395))+(((-0.444735007694415)*x394))+(((-0.444735007694415)*x393))+((cj5*r20*x397))+(((2.4390243902439)*pz))+((x392*x393))+((x392*x394))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x395))+(((0.444735007694415)*x398))+(((0.444735007694415)*x396))+((r01*sj5*x397))+(((-1.0)*cj5*r00*x397))+(((-1.0)*x392*x398))+(((-1.0)*x392*x396))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x397))+((r22*x395))+(((-0.444735007694415)*x394))+(((-0.444735007694415)*x393))+((cj5*r20*x397))+(((2.4390243902439)*pz))+((x392*x393))+((x392*x394))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x399=((1.0)*px);
IkReal x400=((0.187545437253636)*cj4);
IkReal x401=(r20*sj5);
IkReal x402=(r01*sj3);
IkReal x403=(cj5*r21);
IkReal x404=(cj3*r00);
IkReal x405=((0.0185150129489311)*sj4);
IkReal x406=(r21*sj5);
IkReal x407=((0.20357990508077)*sj3);
IkReal x408=(cj5*sj4);
IkReal x409=((0.135720094919197)*sj3);
IkReal x410=(cj4*cj5);
IkReal x411=(r00*sj5);
IkReal x412=((0.00925751294893567)*cj4);
IkReal x413=((0.10827950965428)*cj4);
IkReal x414=(cj4*r22);
IkReal x415=((0.117537022603216)*sj3);
IkReal x416=(cj5*r01);
IkReal x417=((0.135720094919197)*cj3);
IkReal x418=(r01*sj5);
IkReal x419=((0.216558867852667)*sj4);
IkReal x420=(cj4*r02);
IkReal x421=((0.27144)*cj3);
IkReal x422=((0.41)*(IKsin(j1)));
IkReal x423=((0.41)*(IKcos(j1)));
IkReal x424=((0.135720094919197)*sj4*sj5);
IkReal x425=((0.0678600949192303)*cj4*sj3);
IkReal x426=((0.235073880801598)*cj3*sj4);
IkReal x427=(x399+x422);
evalcond[0]=((((-1.0)*x406*x419))+((r22*x400))+(((-1.0)*x423))+(((-0.18234135315471)*x401))+(((-0.18234135315471)*x403))+(((0.216558867852667)*r20*x408))+pz+((x403*x413))+((x401*x413))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x427))+(((-1.0)*r02*x400))+(((-0.0838945627463637)*r02))+(((0.18234135315471)*x411))+(((0.18234135315471)*x416))+(((-0.10827950965428)*r01*x410))+(((-0.216558867852667)*r00*x408))+(((-1.0)*x411*x413))+((x418*x419)));
evalcond[2]=((((-1.0)*r20*x408*x409))+((sj4*x406*x409))+((x411*x412))+(((-0.0160344678271334)*r02))+(((-1.0)*x427))+((r22*x415))+((cj5*r00*x405))+(((-1.0)*x403*x407))+((r20*x410*x421))+(((-1.0)*x401*x407))+(((0.0160344678271334)*x420))+(((0.0648043305514941)*x411))+(((0.0648043305514941)*x416))+(((-1.0)*sj4*x403*x417))+(((0.00925751294893567)*r01*x410))+(((-1.0)*x401*x425))+(((-1.0)*x405*x418))+(((-1.0)*sj4*x401*x417))+(((-1.0)*x414*x415))+(((-1.0)*cj4*x406*x421))+(((-1.0)*x403*x425))+(((-1.0)*r22*x426)));
evalcond[3]=(((r00*x408*x409))+((x407*x411))+(((-0.27144)*x404*x410))+((r01*x408*x417))+(((-1.0)*r02*x415))+(((0.0160344678271334)*x414))+((x411*x425))+((x415*x420))+((r02*x426))+(((-0.0160344678271334)*r22))+(((0.20357990508077)*cj5*x402))+((x404*x424))+(((-1.0)*pz))+(((0.0648043305514941)*x401))+(((0.0648043305514941)*x403))+(((0.0678600949192303)*x402*x410))+x423+(((-1.0)*x405*x406))+((x403*x412))+((cj5*r20*x405))+((x401*x412))+((cj4*x418*x421))+(((-1.0)*x402*x424)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x428=((0.250000349687704)*sj1);
IkReal x429=(cj1*cj4);
IkReal x430=((0.749999650312296)*r22);
IkReal x431=(cj4*sj1);
IkReal x432=((0.749999650312296)*r02);
IkReal x433=((0.250000349687704)*cj1);
IkReal x434=((0.433012903784321)*r00*sj5);
IkReal x435=((0.433012903784321)*r20*sj5);
IkReal x436=((0.433012903784321)*cj5*r01);
IkReal x437=((0.433012903784321)*cj5*r21);
IkReal x438=((0.866025201892125)*cj5*sj1*sj4);
IkReal x439=((0.866025201892125)*cj1*cj5*sj4);
IkReal x440=((0.866025201892125)*r01*sj4*sj5);
IkReal x441=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x429*x434))+((x429*x436))+((x429*x432))+(((-1.0)*sj1*x437))+(((-1.0)*sj1*x435))+((r02*x433))+(((-1.0)*cj1*x434))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x440))+((r00*x439))+((r22*x428))+((x430*x431))+((x431*x437))+((x431*x435))+((r20*x438))+(((-1.0)*sj1*x441)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x429*x435))+((x429*x437))+((x429*x430))+((sj1*x440))+(((-1.0)*x431*x432))+(((-1.0)*x431*x436))+(((-1.0)*x431*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+(((-1.0)*r02*x428))+((r22*x433))+(((-1.0)*r00*x438))+((r20*x439))+((sj1*x436))+((sj1*x434)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x429*x434))+((x429*x436))+((x429*x432))+(((-1.0)*sj1*x437))+(((-1.0)*sj1*x435))+((r02*x433))+(((-1.0)*cj1*x434))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x440))+((r00*x439))+((r22*x428))+((x430*x431))+((x431*x437))+((x431*x435))+((r20*x438))+(((-1.0)*sj1*x441))))+IKsqr((((x429*x435))+((x429*x437))+((x429*x430))+((sj1*x440))+(((-1.0)*x431*x432))+(((-1.0)*x431*x436))+(((-1.0)*x431*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+(((-1.0)*r02*x428))+((r22*x433))+(((-1.0)*r00*x438))+((r20*x439))+((sj1*x436))+((sj1*x434))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x429*x434))+((x429*x436))+((x429*x432))+(((-1.0)*sj1*x437))+(((-1.0)*sj1*x435))+((r02*x433))+(((-1.0)*cj1*x434))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x440))+((r00*x439))+((r22*x428))+((x430*x431))+((x431*x437))+((x431*x435))+((r20*x438))+(((-1.0)*sj1*x441))), (((x429*x435))+((x429*x437))+((x429*x430))+((sj1*x440))+(((-1.0)*x431*x432))+(((-1.0)*x431*x436))+(((-1.0)*x431*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+(((-1.0)*r02*x428))+((r22*x433))+(((-1.0)*r00*x438))+((r20*x439))+((sj1*x436))+((sj1*x434))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x442=IKsin(j2);
IkReal x443=IKcos(j2);
IkReal x444=((0.749999650312296)*sj3);
IkReal x445=(cj5*r01);
IkReal x446=(r00*sj5);
IkReal x447=(cj4*cj5);
IkReal x448=((1.0)*cj3);
IkReal x449=(r21*sj3);
IkReal x450=(cj4*sj5);
IkReal x451=(cj3*r21);
IkReal x452=((0.500000349687582)*sj4);
IkReal x453=((0.433012903784321)*r20);
IkReal x454=(cj4*r22);
IkReal x455=((0.433012903784321)*sj3);
IkReal x456=((0.433012903784321)*cj4);
IkReal x457=(r01*sj5);
IkReal x458=(r20*sj5);
IkReal x459=((0.0160344678271334)*r02);
IkReal x460=(cj4*r02);
IkReal x461=((0.00925751294893567)*cj4);
IkReal x462=((0.0185150129489311)*sj4);
IkReal x463=(r21*sj5);
IkReal x464=(cj5*r21);
IkReal x465=((0.866025201892125)*sj4);
IkReal x466=(cj5*r20);
IkReal x467=(cj5*r00);
IkReal x468=((0.250000349687704)*sj3);
IkReal x469=(cj1*x443);
IkReal x470=(sj1*x442);
IkReal x471=(cj1*x442);
IkReal x472=(sj1*x443);
IkReal x473=(x469+x470);
evalcond[0]=((((-1.0)*x465*x466))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x447))+((x463*x465))+x473+(((-0.749999650312296)*x454))+(((-1.0)*x450*x453))+(((0.433012903784321)*x464))+((sj5*x453)));
evalcond[1]=((((-1.0)*x446*x456))+(((-1.0)*x465*x467))+(((-0.250000349687704)*r02))+(((-1.0)*x472))+(((-0.749999650312296)*x460))+x471+(((-1.0)*x445*x456))+(((0.433012903784321)*x446))+(((0.433012903784321)*x445))+((x457*x465)));
evalcond[2]=((((-1.0)*x462*x463))+(((0.0648043305514941)*x458))+(((0.41)*cj1))+(((0.0648043305514941)*x464))+(((-0.0160344678271334)*r22))+(((-0.27144)*x469))+(((0.00925751294893567)*r20*x450))+(((-0.27144)*x470))+(((-1.0)*pz))+(((0.0160344678271334)*x454))+((x462*x466))+(((0.00925751294893567)*r21*x447)));
evalcond[3]=(((cj4*x459))+(((0.0648043305514941)*x446))+(((0.0648043305514941)*x445))+(((-0.27144)*x471))+(((0.27144)*x472))+(((-0.41)*sj1))+((x446*x461))+(((-1.0)*x459))+(((-1.0)*px))+((x445*x461))+((x462*x467))+(((-1.0)*x457*x462)));
evalcond[4]=(((x455*x460))+((cj3*x445*x452))+((cj4*x445*x468))+(((-1.0)*sj3*x452*x457))+((cj3*x446*x452))+x473+((x444*x446))+((x444*x445))+((cj4*x446*x468))+((cj3*r01*x450))+((sj3*x452*x467))+(((-1.0)*r02*x455))+(((-1.0)*r00*x447*x448))+((cj3*r02*x465)));
evalcond[5]=(((cj3*x452*x458))+(((0.250000349687704)*x447*x449))+((x454*x455))+(((-1.0)*x471))+((cj5*x451*x452))+x472+(((-1.0)*r20*x447*x448))+((sj3*x452*x466))+(((-1.0)*r22*x455))+((x450*x451))+((x444*x464))+(((-1.0)*sj5*x449*x452))+((x444*x458))+((cj3*r22*x465))+((r20*x450*x468)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x474=((0.433012903784321)*cj5);
IkReal x475=((0.866025201892125)*sj4);
IkReal x476=((0.433012903784321)*r22);
IkReal x477=(cj4*sj5);
IkReal x478=(cj5*r21);
IkReal x479=(r20*sj5);
IkReal x480=((0.500000349687582)*sj4);
IkReal x481=(cj5*x480);
CheckValue<IkReal> x482 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*cj4*x478))+(((-1.0)*cj4*x476))+(((-0.749999650312296)*x479))+(((-0.749999650312296)*x478))+x476+(((-0.250000349687704)*r20*x477))+(((-1.0)*r20*x481))+((r21*sj5*x480)))),IkReal(((((-1.0)*r21*x477))+(((-1.0)*r22*x475))+((cj4*cj5*r20))+(((-1.0)*x479*x480))+(((-1.0)*x478*x480)))),IKFAST_ATAN2_MAGTHRESH);
if(!x482.valid){
continue;
}
CheckValue<IkReal> x483=IKPowWithIntegerCheck(IKsign((((r01*((((sj5*x475))+(((-1.0)*cj4*x474))+x474))))+((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r00*(((((-1.0)*cj5*x475))+(((-0.433012903784321)*x477))+(((0.433012903784321)*sj5)))))))),-1);
if(!x483.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x482.value)+(((1.5707963267949)*(x483.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x484=IKsin(j3);
IkReal x485=IKcos(j3);
IkReal x486=(r11*sj5);
IkReal x487=(r10*sj5);
IkReal x488=(cj5*r20);
IkReal x489=(cj5*r11);
IkReal x490=(r00*sj5);
IkReal x491=(cj4*cj5);
IkReal x492=((0.500000349687582)*cj5);
IkReal x493=(r21*sj5);
IkReal x494=(r20*sj5);
IkReal x495=(r01*sj5);
IkReal x496=(sj4*x484);
IkReal x497=((1.0)*x484);
IkReal x498=((0.250000349687704)*x485);
IkReal x499=((0.749999650312296)*x485);
IkReal x500=((0.433012903784321)*cj4*r12);
IkReal x501=((0.749999650312296)*x484);
IkReal x502=(r12*x485);
IkReal x503=(cj4*x484);
IkReal x504=((0.500000349687582)*sj4*x485);
IkReal x505=((0.250000349687704)*x503);
IkReal x506=((0.433012903784321)*r02*x485);
IkReal x507=((0.433012903784321)*r22*x485);
evalcond[0]=((((-1.0)*x488*x504))+(((-1.0)*x494*x499))+(((-1.0)*cj4*x507))+(((-1.0)*cj4*x494*x498))+((r21*x492*x496))+((x493*x504))+((x493*x503))+(((-1.0)*cj5*r21*x499))+x507+(((0.866025201892125)*r22*x496))+(((0.500000349687582)*x494*x496))+(((-1.0)*r21*x491*x498))+(((-1.0)*cj4*x488*x497)));
evalcond[1]=((((-1.0)*cj4*x490*x498))+(((-1.0)*cj4*x506))+(((-1.0)*r00*x491*x497))+(((-1.0)*cj5*r01*x499))+((x495*x504))+((x495*x503))+(((-1.0)*x490*x499))+((r01*x492*x496))+(((-1.0)*r00*sj4*x485*x492))+(((0.500000349687582)*x490*x496))+(((0.866025201892125)*r02*x496))+x506+(((-1.0)*r01*x491*x498)));
evalcond[2]=(((x489*x504))+((x489*x501))+((x489*x505))+(((0.866025201892125)*sj4*x502))+((x487*x501))+((x487*x504))+((x487*x505))+((x484*x500))+((cj4*x485*x486))+(((-1.0)*r10*x485*x491))+(((-0.500000349687582)*x486*x496))+(((-0.433012903784321)*r12*x484))+((r10*x492*x496)));
evalcond[3]=((1.0)+(((-1.0)*cj4*x489*x498))+(((-1.0)*r10*sj4*x485*x492))+(((0.433012903784321)*x502))+(((-1.0)*x489*x499))+(((-1.0)*x485*x500))+(((0.500000349687582)*x487*x496))+(((-1.0)*r10*x491*x497))+(((-1.0)*x487*x499))+(((0.500000349687582)*x489*x496))+((x486*x504))+((x486*x503))+(((0.866025201892125)*r12*x496))+(((-1.0)*cj4*x487*x498)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x508=((0.26409636501044)*cj4);
IkReal x509=(r20*sj5);
IkReal x510=(cj5*r21);
IkReal x511=((0.457427895740576)*cj4);
IkReal x512=(r00*sj5);
IkReal x513=((0.528192360616262)*sj4);
IkReal x514=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x513))+(((-1.0)*cj5*r00*x513))+(((0.444735007694415)*x514))+(((0.444735007694415)*x512))+(((-1.0)*r02*x511))+(((-1.0)*x508*x512))+(((-1.0)*x508*x514)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.444735007694415)*x509))+(((0.204620884747229)*r22))+((x508*x509))+((cj5*r20*x513))+(((-1.0)*r21*sj5*x513))+(((-0.444735007694415)*x510))+((x508*x510))+((r22*x511))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x513))+(((-1.0)*cj5*r00*x513))+(((0.444735007694415)*x514))+(((0.444735007694415)*x512))+(((-1.0)*r02*x511))+(((-1.0)*x508*x512))+(((-1.0)*x508*x514))))+IKsqr(((((-0.444735007694415)*x509))+(((0.204620884747229)*r22))+((x508*x509))+((cj5*r20*x513))+(((-1.0)*r21*sj5*x513))+(((-0.444735007694415)*x510))+((x508*x510))+((r22*x511))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x513))+(((-1.0)*cj5*r00*x513))+(((0.444735007694415)*x514))+(((0.444735007694415)*x512))+(((-1.0)*r02*x511))+(((-1.0)*x508*x512))+(((-1.0)*x508*x514))), ((((-0.444735007694415)*x509))+(((0.204620884747229)*r22))+((x508*x509))+((cj5*r20*x513))+(((-1.0)*r21*sj5*x513))+(((-0.444735007694415)*x510))+((x508*x510))+((r22*x511))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x515=((1.0)*px);
IkReal x516=((0.187545437253636)*cj4);
IkReal x517=(r20*sj5);
IkReal x518=(r01*sj3);
IkReal x519=(cj5*r21);
IkReal x520=(cj3*r00);
IkReal x521=((0.0185150129489311)*sj4);
IkReal x522=(r21*sj5);
IkReal x523=((0.20357990508077)*sj3);
IkReal x524=(cj5*sj4);
IkReal x525=((0.135720094919197)*sj3);
IkReal x526=(cj4*cj5);
IkReal x527=(r00*sj5);
IkReal x528=((0.00925751294893567)*cj4);
IkReal x529=((0.10827950965428)*cj4);
IkReal x530=(cj4*r22);
IkReal x531=((0.117537022603216)*sj3);
IkReal x532=(cj5*r01);
IkReal x533=((0.135720094919197)*cj3);
IkReal x534=(r01*sj5);
IkReal x535=((0.216558867852667)*sj4);
IkReal x536=(cj4*r02);
IkReal x537=((0.27144)*cj3);
IkReal x538=((0.41)*(IKsin(j1)));
IkReal x539=((0.41)*(IKcos(j1)));
IkReal x540=((0.135720094919197)*sj4*sj5);
IkReal x541=((0.0678600949192303)*cj4*sj3);
IkReal x542=((0.235073880801598)*cj3*sj4);
IkReal x543=(x538+x515);
evalcond[0]=(((x519*x529))+(((-0.18234135315471)*x519))+(((-0.18234135315471)*x517))+(((-1.0)*x539))+((x517*x529))+pz+(((-1.0)*x522*x535))+((r22*x516))+(((0.216558867852667)*r20*x524))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*r00*x524))+(((-1.0)*x527*x529))+(((-0.10827950965428)*r01*x526))+(((-0.0838945627463637)*r02))+(((-1.0)*x543))+((x534*x535))+(((-1.0)*r02*x516))+(((0.18234135315471)*x532))+(((0.18234135315471)*x527)));
evalcond[2]=((((-1.0)*r22*x542))+(((-1.0)*r20*x524*x525))+(((-0.0160344678271334)*r02))+(((-1.0)*x521*x534))+(((-1.0)*x530*x531))+(((-1.0)*x543))+(((0.0160344678271334)*x536))+(((0.0648043305514941)*x527))+(((0.0648043305514941)*x532))+((r20*x526*x537))+((r22*x531))+(((-1.0)*x517*x541))+(((-1.0)*sj4*x517*x533))+(((-1.0)*x517*x523))+(((-1.0)*sj4*x519*x533))+((sj4*x522*x525))+((x527*x528))+(((-1.0)*cj4*x522*x537))+(((0.00925751294893567)*r01*x526))+(((-1.0)*x519*x541))+((cj5*r00*x521))+(((-1.0)*x519*x523)));
evalcond[3]=(((r01*x524*x533))+((x519*x528))+((r02*x542))+(((0.0678600949192303)*x518*x526))+(((-1.0)*x521*x522))+((cj5*r20*x521))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x517))+(((0.0648043305514941)*x519))+((x531*x536))+(((-1.0)*r02*x531))+((x517*x528))+(((0.0160344678271334)*x530))+(((-1.0)*pz))+(((-1.0)*x518*x540))+(((-0.27144)*x520*x526))+((r00*x524*x525))+x539+(((0.20357990508077)*cj5*x518))+((cj4*x534*x537))+((x523*x527))+((x520*x540))+((x527*x541)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x544=((0.250000349687704)*sj1);
IkReal x545=(cj1*cj4);
IkReal x546=((0.749999650312296)*r22);
IkReal x547=(cj4*sj1);
IkReal x548=((0.749999650312296)*r02);
IkReal x549=((0.250000349687704)*cj1);
IkReal x550=((0.433012903784321)*r00*sj5);
IkReal x551=((0.433012903784321)*r20*sj5);
IkReal x552=((0.433012903784321)*cj5*r01);
IkReal x553=((0.433012903784321)*cj5*r21);
IkReal x554=((0.866025201892125)*cj5*sj1*sj4);
IkReal x555=((0.866025201892125)*cj1*cj5*sj4);
IkReal x556=((0.866025201892125)*r01*sj4*sj5);
IkReal x557=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r02*x549))+(((-1.0)*cj1*x550))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x556))+((r20*x554))+(((-1.0)*sj1*x557))+(((-1.0)*sj1*x551))+(((-1.0)*sj1*x553))+((r22*x544))+((x547*x551))+((x547*x553))+((r00*x555))+((x545*x552))+((x545*x550))+((x545*x548))+((x546*x547)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x556))+((sj1*x550))+((sj1*x552))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r20*x555))+(((-1.0)*r00*x554))+(((-1.0)*x547*x550))+(((-1.0)*x547*x552))+((r22*x549))+(((-1.0)*r02*x544))+(((-1.0)*x547*x548))+((x545*x553))+((x545*x551))+((x545*x546)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r02*x549))+(((-1.0)*cj1*x550))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x556))+((r20*x554))+(((-1.0)*sj1*x557))+(((-1.0)*sj1*x551))+(((-1.0)*sj1*x553))+((r22*x544))+((x547*x551))+((x547*x553))+((r00*x555))+((x545*x552))+((x545*x550))+((x545*x548))+((x546*x547))))+IKsqr((((sj1*x556))+((sj1*x550))+((sj1*x552))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r20*x555))+(((-1.0)*r00*x554))+(((-1.0)*x547*x550))+(((-1.0)*x547*x552))+((r22*x549))+(((-1.0)*r02*x544))+(((-1.0)*x547*x548))+((x545*x553))+((x545*x551))+((x545*x546))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r02*x549))+(((-1.0)*cj1*x550))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x556))+((r20*x554))+(((-1.0)*sj1*x557))+(((-1.0)*sj1*x551))+(((-1.0)*sj1*x553))+((r22*x544))+((x547*x551))+((x547*x553))+((r00*x555))+((x545*x552))+((x545*x550))+((x545*x548))+((x546*x547))), (((sj1*x556))+((sj1*x550))+((sj1*x552))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r20*x555))+(((-1.0)*r00*x554))+(((-1.0)*x547*x550))+(((-1.0)*x547*x552))+((r22*x549))+(((-1.0)*r02*x544))+(((-1.0)*x547*x548))+((x545*x553))+((x545*x551))+((x545*x546))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x558=IKsin(j2);
IkReal x559=IKcos(j2);
IkReal x560=((0.749999650312296)*sj3);
IkReal x561=(cj5*r01);
IkReal x562=(r00*sj5);
IkReal x563=(cj4*cj5);
IkReal x564=((1.0)*cj3);
IkReal x565=(r21*sj3);
IkReal x566=(cj4*sj5);
IkReal x567=(cj3*r21);
IkReal x568=((0.500000349687582)*sj4);
IkReal x569=((0.433012903784321)*r20);
IkReal x570=(cj4*r22);
IkReal x571=((0.433012903784321)*sj3);
IkReal x572=((0.433012903784321)*cj4);
IkReal x573=(r01*sj5);
IkReal x574=(r20*sj5);
IkReal x575=((0.0160344678271334)*r02);
IkReal x576=(cj4*r02);
IkReal x577=((0.00925751294893567)*cj4);
IkReal x578=((0.0185150129489311)*sj4);
IkReal x579=(r21*sj5);
IkReal x580=(cj5*r21);
IkReal x581=((0.866025201892125)*sj4);
IkReal x582=(cj5*r20);
IkReal x583=(cj5*r00);
IkReal x584=((0.250000349687704)*sj3);
IkReal x585=(cj1*x559);
IkReal x586=(sj1*x558);
IkReal x587=(cj1*x558);
IkReal x588=(sj1*x559);
IkReal x589=(x585+x586);
evalcond[0]=(((x579*x581))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x570))+(((-1.0)*x566*x569))+(((0.433012903784321)*x580))+x589+(((-0.433012903784321)*r21*x563))+((sj5*x569))+(((-1.0)*x581*x582)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x588))+(((-0.749999650312296)*x576))+(((0.433012903784321)*x562))+(((0.433012903784321)*x561))+(((-1.0)*x561*x572))+((x573*x581))+x587+(((-1.0)*x562*x572))+(((-1.0)*x581*x583)));
evalcond[2]=((((-1.0)*x578*x579))+((x578*x582))+(((0.00925751294893567)*r20*x566))+(((0.00925751294893567)*r21*x563))+(((0.0648043305514941)*x580))+(((0.0648043305514941)*x574))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x585))+(((-0.27144)*x586))+(((-1.0)*pz))+(((0.0160344678271334)*x570)));
evalcond[3]=((((0.27144)*x588))+((x561*x577))+((x578*x583))+(((-1.0)*x573*x578))+(((0.0648043305514941)*x561))+(((0.0648043305514941)*x562))+(((-0.27144)*x587))+(((-0.41)*sj1))+((x562*x577))+(((-1.0)*px))+(((-1.0)*x575))+((cj4*x575)));
evalcond[4]=(((cj3*r02*x581))+((x571*x576))+((cj4*x561*x584))+(((-1.0)*sj3*x568*x573))+(((-1.0)*r00*x563*x564))+((cj3*x562*x568))+((x560*x561))+((x560*x562))+((cj3*x561*x568))+x589+((sj3*x568*x583))+(((-1.0)*r02*x571))+((cj4*x562*x584))+((cj3*r01*x566)));
evalcond[5]=(((x566*x567))+(((-1.0)*x587))+((x560*x574))+((x560*x580))+(((-1.0)*sj5*x565*x568))+((r20*x566*x584))+((cj3*r22*x581))+x588+((sj3*x568*x582))+(((-1.0)*r20*x563*x564))+((cj3*x568*x574))+(((-1.0)*r22*x571))+((cj5*x567*x568))+(((0.250000349687704)*x563*x565))+((x570*x571)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x590=(cj5*r01);
IkReal x591=(cj4*r02);
IkReal x592=(r00*sj5);
IkReal x593=((0.433012903784321)*cj4);
IkReal x594=((1.73204919243206)*cj4);
IkReal x595=(r01*sj4*sj5);
IkReal x596=(cj5*r00*sj4);
j3eval[0]=((((-1.73204919243206)*x592))+(((-1.73204919243206)*x590))+(((2.99999440500457)*x591))+r02+((x590*x594))+(((3.46409596216145)*x596))+(((-3.46409596216145)*x595))+((x592*x594)));
j3eval[1]=IKsign(((((0.250000349687704)*r02))+(((-0.433012903784321)*x592))+(((-0.433012903784321)*x590))+(((-0.866025201892125)*x595))+(((0.749999650312296)*x591))+(((0.866025201892125)*x596))+((x590*x593))+((x592*x593))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x597=(cj4*r22);
IkReal x598=(cj5*r21);
IkReal x599=((0.866025201892125)*sj4);
IkReal x600=(cj5*r20);
IkReal x601=(r21*sj5);
IkReal x602=((3.46409596216145)*sj4);
IkReal x603=(r20*sj5);
IkReal x604=(cj4*x603);
j3eval[0]=((((-2.99999440500457)*x597))+(((-1.73204919243206)*x604))+((x601*x602))+(((-1.73204919243206)*cj4*x598))+(((1.73204919243206)*x603))+(((1.73204919243206)*x598))+(((-1.0)*r22))+(((-1.0)*x600*x602)));
j3eval[1]=IKsign(((((-0.250000349687704)*r22))+(((-0.749999650312296)*x597))+(((0.433012903784321)*x598))+(((-1.0)*x599*x600))+((x599*x601))+(((-0.433012903784321)*cj4*x598))+(((0.433012903784321)*x603))+(((-0.433012903784321)*x604))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x605=cj5*cj5;
IkReal x606=r11*r11;
IkReal x607=cj4*cj4;
IkReal x608=r10*r10;
IkReal x609=r12*r12;
IkReal x610=(r10*sj5);
IkReal x611=((0.216506754730737)*r12);
IkReal x612=(cj5*r11);
IkReal x613=((1.15470161513813)*r12);
IkReal x614=(r11*sj4);
IkReal x615=(cj4*r12);
IkReal x616=(cj5*sj4);
IkReal x617=((3.9999972025013)*sj5);
IkReal x618=((0.375000349687459)*cj4);
IkReal x619=((2.0)*cj4);
IkReal x620=(cj4*r10);
IkReal x621=((0.433013206622791)*r12);
IkReal x622=((0.750000174843424)*sj5);
IkReal x623=((2.30940161513813)*r12);
IkReal x624=((4.99999440500457)*x605);
IkReal x625=(r10*x605);
IkReal x626=(cj4*x608);
IkReal x627=(x606*x607);
IkReal x628=(x605*x606);
IkReal x629=((3.46409838486413)*r12*x607);
IkReal x630=(x605*x608);
IkReal x631=(x607*x608);
IkReal x632=((0.649519052837905)*r12*x607);
IkReal x633=(x607*x609);
IkReal x634=(cj4*sj5*x606*x616);
j3eval[0]=((((5.99998881000913)*x610*x612))+(((4.0)*cj4*x610*x612))+(((6.9281919243229)*sj5*x614*x615))+((x608*x619))+(((-1.0)*x609*x619))+(((2.99999440500457)*x628))+(((2.309396769726)*x612*x615))+((x619*x628))+(((-2.99999440500457)*x633))+(((-2.99999440500457)*x630))+(((4.99999440500457)*x609))+((cj4*x606*x616*x617))+((x612*x613))+(((-1.0)*x624*x627))+(((3.99999440500457)*x627))+(((-1.0)*x610*x629))+((x608*x616*x617))+(((-1.0)*r10*x616*x623))+(((-1.0)*x619*x630))+(((-1.0)*x612*x629))+((x624*x631))+(((3.9999972025013)*x614*x620))+(((-7.99999440500261)*x605*x614*x620))+(((2.309396769726)*x610*x615))+(((4.33332836000522)*x608))+(((1.33333395500065)*x606))+(((-1.0)*x631))+(((-3.9999972025013)*r10*x614))+((x610*x613))+(((-1.0)*x606*x616*x617))+(((-1.0)*x616*x617*x626))+((sj5*x614*x623))+(((-9.99998881000913)*x607*x610*x612))+(((7.99999440500261)*x614*x625))+(((-6.9281919243229)*r10*x615*x616)));
j3eval[1]=IKsign(((((1.29903719716146)*sj5*x614*x615))+((x608*x616*x622))+(((0.433012298107169)*x610*x615))+((cj4*x606*x616*x622))+(((-0.18750017484373)*x631))+(((0.562499475468567)*x628))+(((-1.0)*x616*x622*x626))+((x608*x618))+(((-1.0)*x609*x618))+(((-0.750000174843424)*r10*x614))+(((1.12499895093713)*x610*x612))+(((-1.87499965031205)*x607*x610*x612))+(((0.433012298107169)*x612*x615))+(((-1.50000034968685)*x605*x614*x620))+((x618*x628))+((x611*x612))+(((0.749999650312296)*x627))+(((-1.0)*x606*x616*x622))+(((-0.937499825156026)*x605*x627))+(((-1.0)*x610*x632))+(((1.50000034968685)*x614*x625))+(((0.937499825156026)*x609))+(((0.250000349687704)*x606))+(((-1.0)*r10*x616*x621))+(((0.937499825156026)*x607*x630))+(((-1.0)*x612*x632))+(((0.81249982515627)*x608))+(((-1.0)*x618*x630))+(((-0.562499475468567)*x633))+(((-0.562499475468567)*x630))+(((-1.29903719716146)*r10*x615*x616))+(((0.750000174843424)*x614*x620))+((x610*x611))+((sj5*x614*x621))+(((0.750000699374918)*cj4*x610*x612))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x635=r11*r11;
IkReal x636=cj5*cj5;
IkReal x637=r10*r10;
IkReal x638=cj4*cj4;
IkReal x639=r12*r12;
IkReal x640=(r10*sj5);
IkReal x641=((0.216506754730737)*r12);
IkReal x642=(cj5*r11);
IkReal x643=(r12*sj4);
IkReal x644=(r11*sj4);
IkReal x645=((0.375000349687459)*cj4);
IkReal x646=(cj4*r10);
IkReal x647=((0.433012903784321)*r12);
IkReal x648=(r11*sj5);
IkReal x649=(cj5*r10);
IkReal x650=((0.250000349687704)*cj4);
IkReal x651=((0.500000349687582)*sj4);
IkReal x652=((0.562499475468567)*x636);
IkReal x653=((1.50000034968685)*x636);
IkReal x654=((0.433012298107169)*cj4*r12);
IkReal x655=((0.937499825156026)*x636);
IkReal x656=(x635*x638);
IkReal x657=((0.649519052837905)*r12*x638);
IkReal x658=((0.750000174843424)*cj5*sj4*sj5);
IkReal x659=(x637*x638);
IkReal x660=(cj4*x658);
CheckValue<IkReal> x661 = IKatan2WithCheck(IkReal((((cj4*x648))+(((0.866025201892125)*x643))+(((-1.0)*cj5*x646))+((x640*x651))+((x642*x651)))),IkReal(((((-0.749999650312296)*x640))+(((-0.749999650312296)*x642))+(((-1.0)*x640*x650))+(((0.500000349687582)*sj5*x644))+(((-1.0)*x642*x650))+x647+(((-1.0)*x649*x651))+(((-1.0)*cj4*x647)))),IKFAST_ATAN2_MAGTHRESH);
if(!x661.valid){
continue;
}
CheckValue<IkReal> x662=IKPowWithIntegerCheck(IKsign((((x635*x636*x645))+(((-1.0)*x637*x660))+((x635*x660))+(((0.937499825156026)*x639))+(((-1.29903719716146)*cj5*x643*x646))+(((-1.0)*x640*x657))+(((-1.0)*x636*x637*x645))+((x635*x652))+(((0.81249982515627)*x637))+(((-1.0)*x642*x657))+(((-1.0)*x639*x645))+((x637*x645))+((r10*x644*x653))+(((-1.0)*x655*x656))+(((0.750000174843424)*x644*x646))+(((-1.0)*x644*x646*x653))+((x637*x658))+((x640*x641))+(((0.749999650312296)*x656))+((x641*x642))+(((1.12499895093713)*x640*x642))+(((-1.0)*x635*x658))+(((-0.18750017484373)*x659))+((x640*x654))+(((-0.750000174843424)*r10*x644))+((x655*x659))+((x642*x654))+(((0.750000699374918)*cj4*x640*x642))+(((-0.433013206622791)*x643*x649))+(((-0.562499475468567)*x638*x639))+(((0.433013206622791)*x643*x648))+(((1.29903719716146)*cj4*x643*x648))+(((-1.87499965031205)*x638*x640*x642))+(((0.250000349687704)*x635))+(((-1.0)*x637*x652)))),-1);
if(!x662.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x661.value)+(((1.5707963267949)*(x662.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x663=IKsin(j3);
IkReal x664=IKcos(j3);
IkReal x665=(r11*sj5);
IkReal x666=(r10*sj5);
IkReal x667=(cj5*r20);
IkReal x668=(cj5*r11);
IkReal x669=(r00*sj5);
IkReal x670=(cj4*cj5);
IkReal x671=((0.500000349687582)*cj5);
IkReal x672=(r21*sj5);
IkReal x673=(r20*sj5);
IkReal x674=(r01*sj5);
IkReal x675=(sj4*x663);
IkReal x676=((1.0)*x663);
IkReal x677=((0.250000349687704)*x664);
IkReal x678=((0.749999650312296)*x664);
IkReal x679=((0.433012903784321)*cj4*r12);
IkReal x680=((0.749999650312296)*x663);
IkReal x681=(r12*x664);
IkReal x682=(cj4*x663);
IkReal x683=((0.500000349687582)*sj4*x664);
IkReal x684=((0.250000349687704)*x682);
IkReal x685=((0.433012903784321)*r02*x664);
IkReal x686=((0.433012903784321)*r22*x664);
evalcond[0]=((((-1.0)*cj5*r21*x678))+(((-1.0)*x667*x683))+(((-1.0)*cj4*x673*x677))+(((-1.0)*r21*x670*x677))+(((-1.0)*cj4*x686))+((r21*x671*x675))+((x672*x682))+((x672*x683))+x686+(((0.866025201892125)*r22*x675))+(((-1.0)*x673*x678))+(((-1.0)*cj4*x667*x676))+(((0.500000349687582)*x673*x675)));
evalcond[1]=((((-1.0)*cj4*x669*x677))+(((-1.0)*cj4*x685))+((x674*x683))+((x674*x682))+((r01*x671*x675))+(((0.866025201892125)*r02*x675))+(((-1.0)*cj5*r01*x678))+(((0.500000349687582)*x669*x675))+(((-1.0)*r00*sj4*x664*x671))+(((-1.0)*x669*x678))+x685+(((-1.0)*r01*x670*x677))+(((-1.0)*r00*x670*x676)));
evalcond[2]=((((-1.0)*r10*x664*x670))+((cj4*x664*x665))+((r10*x671*x675))+((x666*x684))+((x666*x680))+((x666*x683))+(((-0.433012903784321)*r12*x663))+(((-0.500000349687582)*x665*x675))+(((0.866025201892125)*sj4*x681))+((x668*x683))+((x668*x680))+((x668*x684))+((x663*x679)));
evalcond[3]=((-1.0)+(((0.500000349687582)*x668*x675))+(((-1.0)*cj4*x666*x677))+(((-1.0)*x668*x678))+(((0.433012903784321)*x681))+(((-1.0)*cj4*x668*x677))+(((0.500000349687582)*x666*x675))+(((-1.0)*x664*x679))+(((-1.0)*x666*x678))+(((-1.0)*r10*sj4*x664*x671))+(((0.866025201892125)*r12*x675))+(((-1.0)*r10*x670*x676))+((x665*x682))+((x665*x683)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x687=(cj5*r21);
IkReal x688=((0.26409636501044)*cj4);
IkReal x689=((0.457427895740576)*cj4);
IkReal x690=((0.528192360616262)*sj4);
IkReal x691=(cj5*r01);
IkReal x692=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x688))+(((-1.0)*r00*x692))+(((-1.0)*r01*sj5*x690))+((x688*x691))+(((-0.444735007694415)*x691))+(((0.204620884747229)*r02))+((cj5*r00*x690))+(((2.4390243902439)*px))+((r02*x689)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x687*x688))+(((0.204620884747229)*r22))+((r22*x689))+(((-1.0)*r20*x692))+((r20*sj5*x688))+(((-1.0)*r21*sj5*x690))+(((-0.444735007694415)*x687))+((cj5*r20*x690))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x688))+(((-1.0)*r00*x692))+(((-1.0)*r01*sj5*x690))+((x688*x691))+(((-0.444735007694415)*x691))+(((0.204620884747229)*r02))+((cj5*r00*x690))+(((2.4390243902439)*px))+((r02*x689))))+IKsqr((((x687*x688))+(((0.204620884747229)*r22))+((r22*x689))+(((-1.0)*r20*x692))+((r20*sj5*x688))+(((-1.0)*r21*sj5*x690))+(((-0.444735007694415)*x687))+((cj5*r20*x690))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x688))+(((-1.0)*r00*x692))+(((-1.0)*r01*sj5*x690))+((x688*x691))+(((-0.444735007694415)*x691))+(((0.204620884747229)*r02))+((cj5*r00*x690))+(((2.4390243902439)*px))+((r02*x689))), (((x687*x688))+(((0.204620884747229)*r22))+((r22*x689))+(((-1.0)*r20*x692))+((r20*sj5*x688))+(((-1.0)*r21*sj5*x690))+(((-0.444735007694415)*x687))+((cj5*r20*x690))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x693=((0.187545437253636)*cj4);
IkReal x694=(cj5*r20);
IkReal x695=(r01*sj5);
IkReal x696=(cj5*r21);
IkReal x697=(cj3*r00);
IkReal x698=(sj4*sj5);
IkReal x699=((0.20357990508077)*sj3);
IkReal x700=(r20*sj5);
IkReal x701=(cj4*cj5);
IkReal x702=((0.00925751294893567)*cj4);
IkReal x703=((0.117537022603216)*sj3);
IkReal x704=((0.10827950965428)*cj4);
IkReal x705=(r00*sj5);
IkReal x706=(cj4*r22);
IkReal x707=(r21*sj5);
IkReal x708=((0.216558867852667)*sj4);
IkReal x709=((0.0185150129489311)*sj4);
IkReal x710=(cj3*sj4);
IkReal x711=(cj4*r02);
IkReal x712=(cj5*r01);
IkReal x713=((0.41)*(IKcos(j1)));
IkReal x714=((0.41)*(IKsin(j1)));
IkReal x715=((0.135720094919197)*sj3*sj4);
IkReal x716=((0.0678600949192303)*cj4*sj3);
IkReal x717=(cj5*r00*sj4);
IkReal x718=((0.27144)*cj3*cj4);
evalcond[0]=((((-1.0)*x695*x708))+((r02*x693))+(((-0.18234135315471)*x712))+(((-1.0)*x714))+px+(((-0.18234135315471)*x705))+((x704*x705))+(((0.10827950965428)*r01*x701))+((cj5*r00*x708))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x700*x704))+((x694*x708))+(((-0.216558867852667)*r21*x698))+((r22*x693))+(((-0.18234135315471)*x696))+(((-1.0)*x713))+pz+(((-0.18234135315471)*x700))+((x696*x704))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.135720094919197)*x710*x712))+(((-1.0)*r02*x703))+(((0.0678600949192303)*r01*sj3*x701))+(((-0.0648043305514941)*x696))+(((0.135720094919197)*x697*x698))+(((-0.0648043305514941)*x700))+(((0.0185150129489311)*r21*x698))+((x703*x711))+(((-1.0)*x694*x709))+(((-1.0)*x695*x715))+((x695*x718))+(((-0.27144)*x697*x701))+(((-0.0160344678271334)*x706))+(((-1.0)*x713))+pz+(((-1.0)*x696*x702))+(((0.0160344678271334)*r22))+(((0.235073880801598)*r02*x710))+((cj5*r00*x715))+((x699*x705))+((x699*x712))+(((-1.0)*x700*x702))+((x705*x716)));
evalcond[3]=((((0.135720094919197)*x696*x710))+(((0.0648043305514941)*x705))+(((0.0648043305514941)*x712))+(((0.235073880801598)*r22*x710))+((x700*x716))+((x702*x705))+(((-0.0160344678271334)*r02))+((x696*x699))+((x707*x718))+(((0.0160344678271334)*x711))+((x703*x706))+(((-1.0)*x695*x709))+(((-1.0)*x694*x718))+((x694*x715))+(((-1.0)*px))+((x696*x716))+(((0.00925751294893567)*r01*x701))+x714+(((0.135720094919197)*cj3*r20*x698))+((cj5*r00*x709))+((x699*x700))+(((-1.0)*r22*x703))+(((-0.135720094919197)*r21*sj3*x698)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x719=(r02*sj1);
IkReal x720=(cj1*cj4);
IkReal x721=((0.749999650312296)*r22);
IkReal x722=(cj4*sj1);
IkReal x723=((0.250000349687704)*r22);
IkReal x724=((0.433012903784321)*r00*sj5);
IkReal x725=((0.433012903784321)*r20*sj5);
IkReal x726=((0.433012903784321)*cj5*r01);
IkReal x727=((0.433012903784321)*cj5*r21);
IkReal x728=((0.866025201892125)*cj5*sj1*sj4);
IkReal x729=((0.866025201892125)*cj1*cj5*sj4);
IkReal x730=((0.866025201892125)*r01*sj4*sj5);
IkReal x731=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x721*x722))+((cj1*x726))+((cj1*x724))+(((-1.0)*r00*x729))+(((-0.749999650312296)*r02*x720))+((r20*x728))+((x722*x725))+((x722*x727))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*x720*x724))+(((-1.0)*x720*x726))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+((sj1*x723))+((cj1*x730)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x723))+((x720*x725))+((x720*x727))+((x720*x721))+((r20*x729))+((x722*x724))+((x722*x726))+((r00*x728))+(((-1.0)*cj1*x731))+(((-1.0)*cj1*x727))+(((-1.0)*cj1*x725))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x724))+(((-1.0)*sj1*x730))+(((0.749999650312296)*cj4*x719))+(((0.250000349687704)*x719)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x721*x722))+((cj1*x726))+((cj1*x724))+(((-1.0)*r00*x729))+(((-0.749999650312296)*r02*x720))+((r20*x728))+((x722*x725))+((x722*x727))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*x720*x724))+(((-1.0)*x720*x726))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+((sj1*x723))+((cj1*x730))))+IKsqr((((cj1*x723))+((x720*x725))+((x720*x727))+((x720*x721))+((r20*x729))+((x722*x724))+((x722*x726))+((r00*x728))+(((-1.0)*cj1*x731))+(((-1.0)*cj1*x727))+(((-1.0)*cj1*x725))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x724))+(((-1.0)*sj1*x730))+(((0.749999650312296)*cj4*x719))+(((0.250000349687704)*x719))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x721*x722))+((cj1*x726))+((cj1*x724))+(((-1.0)*r00*x729))+(((-0.749999650312296)*r02*x720))+((r20*x728))+((x722*x725))+((x722*x727))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*x720*x724))+(((-1.0)*x720*x726))+(((-1.0)*sj1*x731))+(((-0.250000349687704)*cj1*r02))+((sj1*x723))+((cj1*x730))), (((cj1*x723))+((x720*x725))+((x720*x727))+((x720*x721))+((r20*x729))+((x722*x724))+((x722*x726))+((r00*x728))+(((-1.0)*cj1*x731))+(((-1.0)*cj1*x727))+(((-1.0)*cj1*x725))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x724))+(((-1.0)*sj1*x730))+(((0.749999650312296)*cj4*x719))+(((0.250000349687704)*x719))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x732=IKcos(j2);
IkReal x733=IKsin(j2);
IkReal x734=((0.433012903784321)*sj3);
IkReal x735=((0.749999650312296)*sj3);
IkReal x736=(r00*sj5);
IkReal x737=(cj4*cj5);
IkReal x738=((1.0)*cj3);
IkReal x739=(cj5*r01);
IkReal x740=(r21*sj3);
IkReal x741=(cj4*sj5);
IkReal x742=(cj3*r21);
IkReal x743=((0.500000349687582)*sj4);
IkReal x744=((0.433012903784321)*r20);
IkReal x745=(cj4*r22);
IkReal x746=(r20*sj5);
IkReal x747=((0.0160344678271334)*r02);
IkReal x748=(cj4*r02);
IkReal x749=(r01*sj5);
IkReal x750=(cj5*r00);
IkReal x751=((0.0185150129489311)*sj4);
IkReal x752=(r21*sj5);
IkReal x753=(cj5*r21);
IkReal x754=((0.866025201892125)*sj4);
IkReal x755=(cj5*r20);
IkReal x756=((0.250000349687704)*sj3);
IkReal x757=(sj1*x732);
IkReal x758=(cj1*x732);
IkReal x759=(sj1*x733);
IkReal x760=(cj1*x733);
IkReal x761=((1.0)*x760);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x737))+((x752*x754))+(((-1.0)*x754*x755))+(((0.433012903784321)*x753))+(((-0.749999650312296)*x745))+(((-1.0)*x741*x744))+x759+x758+((sj5*x744)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x750*x754))+(((-1.0)*x761))+(((0.433012903784321)*x739))+(((0.433012903784321)*x736))+(((-0.433012903784321)*r01*x737))+(((-0.749999650312296)*x748))+x757+(((-0.433012903784321)*cj4*x736))+((x749*x754)));
evalcond[2]=((((0.00925751294893567)*r21*x737))+((x751*x755))+(((0.41)*cj1))+(((0.0160344678271334)*x745))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x741))+(((0.0648043305514941)*x746))+(((-1.0)*x751*x752))+(((0.0648043305514941)*x753))+(((-0.27144)*x759))+(((-0.27144)*x758)));
evalcond[3]=((((0.41)*sj1))+(((0.00925751294893567)*cj4*x736))+(((-1.0)*px))+(((0.27144)*x760))+(((-1.0)*x749*x751))+(((0.00925751294893567)*r01*x737))+(((0.0648043305514941)*x736))+(((0.0648043305514941)*x739))+(((-1.0)*x747))+((x750*x751))+((cj4*x747))+(((-0.27144)*x757)));
evalcond[4]=(((x734*x745))+((cj3*r22*x754))+((x735*x753))+(((-1.0)*r20*x737*x738))+(((-1.0)*x761))+((x741*x742))+((cj5*x742*x743))+((sj3*x743*x755))+((r20*x741*x756))+x757+((cj3*x743*x746))+(((-1.0)*r22*x734))+(((0.250000349687704)*x737*x740))+(((-1.0)*sj5*x740*x743))+((x735*x746)));
evalcond[5]=((((-1.0)*sj3*x743*x749))+((x734*x748))+((cj3*r02*x754))+((x735*x736))+((x735*x739))+((cj4*x736*x756))+((cj3*x736*x743))+(((-1.0)*r02*x734))+((cj3*r01*x741))+(((-1.0)*r00*x737*x738))+(((-1.0)*x759))+(((-1.0)*x758))+((sj3*x743*x750))+((cj3*x739*x743))+((r01*x737*x756)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x762=((0.433012903784321)*cj5);
IkReal x763=((0.433012903784321)*cj4);
IkReal x764=(cj5*r01);
IkReal x765=((0.866025201892125)*sj4);
IkReal x766=((0.250000349687704)*cj4);
IkReal x767=(cj5*r00);
IkReal x768=((0.500000349687582)*sj4);
IkReal x769=(r00*sj5);
IkReal x770=(r01*sj5);
CheckValue<IkReal> x771 = IKatan2WithCheck(IkReal(((((-1.0)*x766*x769))+(((-1.0)*x764*x766))+(((0.433012903784321)*r02))+(((-1.0)*x767*x768))+(((-1.0)*r02*x763))+(((-0.749999650312296)*x764))+(((-0.749999650312296)*x769))+((x768*x770)))),IkReal(((((-1.0)*x764*x768))+(((-1.0)*cj4*x770))+((cj4*x767))+(((-1.0)*r02*x765))+(((-1.0)*x768*x769)))),IKFAST_ATAN2_MAGTHRESH);
if(!x771.valid){
continue;
}
CheckValue<IkReal> x772=IKPowWithIntegerCheck(IKsign((((r20*(((((-1.0)*cj5*x765))+(((-1.0)*sj5*x763))+(((0.433012903784321)*sj5))))))+((r21*((x762+(((-1.0)*cj4*x762))+((sj5*x765))))))+((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4)))))))),-1);
if(!x772.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x771.value)+(((1.5707963267949)*(x772.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x773=IKsin(j3);
IkReal x774=IKcos(j3);
IkReal x775=(r11*sj5);
IkReal x776=(r10*sj5);
IkReal x777=(cj5*r20);
IkReal x778=(cj5*r11);
IkReal x779=(r00*sj5);
IkReal x780=(cj4*cj5);
IkReal x781=((0.500000349687582)*cj5);
IkReal x782=(r21*sj5);
IkReal x783=(r20*sj5);
IkReal x784=(r01*sj5);
IkReal x785=(sj4*x773);
IkReal x786=((1.0)*x773);
IkReal x787=((0.250000349687704)*x774);
IkReal x788=((0.749999650312296)*x774);
IkReal x789=((0.433012903784321)*cj4*r12);
IkReal x790=((0.749999650312296)*x773);
IkReal x791=(r12*x774);
IkReal x792=(cj4*x773);
IkReal x793=((0.500000349687582)*sj4*x774);
IkReal x794=((0.250000349687704)*x792);
IkReal x795=((0.433012903784321)*r02*x774);
IkReal x796=((0.433012903784321)*r22*x774);
evalcond[0]=((((-1.0)*cj4*x777*x786))+((r21*x781*x785))+(((0.500000349687582)*x783*x785))+((x782*x793))+((x782*x792))+(((-1.0)*x777*x793))+x796+(((-1.0)*r21*x780*x787))+(((0.866025201892125)*r22*x785))+(((-1.0)*cj4*x796))+(((-1.0)*cj5*r21*x788))+(((-1.0)*cj4*x783*x787))+(((-1.0)*x783*x788)));
evalcond[1]=((((-1.0)*r01*x780*x787))+(((-1.0)*r00*x780*x786))+(((-1.0)*r00*sj4*x774*x781))+((r01*x781*x785))+(((-1.0)*cj4*x779*x787))+((x784*x792))+((x784*x793))+(((0.500000349687582)*x779*x785))+(((-1.0)*cj5*r01*x788))+x795+(((0.866025201892125)*r02*x785))+(((-1.0)*cj4*x795))+(((-1.0)*x779*x788)));
evalcond[2]=(((x773*x789))+(((-1.0)*r10*x774*x780))+(((0.866025201892125)*sj4*x791))+((cj4*x774*x775))+(((-0.500000349687582)*x775*x785))+((x778*x794))+((x778*x790))+((x778*x793))+((r10*x781*x785))+(((-0.433012903784321)*r12*x773))+((x776*x794))+((x776*x790))+((x776*x793)));
evalcond[3]=((-1.0)+(((-1.0)*cj4*x778*x787))+(((0.866025201892125)*r12*x785))+((x775*x792))+((x775*x793))+(((-1.0)*x776*x788))+(((-1.0)*r10*x780*x786))+(((-1.0)*cj4*x776*x787))+(((0.433012903784321)*x791))+(((-1.0)*r10*sj4*x774*x781))+(((0.500000349687582)*x776*x785))+(((-1.0)*x774*x789))+(((-1.0)*x778*x788))+(((0.500000349687582)*x778*x785)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x797=(cj5*r21);
IkReal x798=((0.26409636501044)*cj4);
IkReal x799=((0.457427895740576)*cj4);
IkReal x800=((0.528192360616262)*sj4);
IkReal x801=(cj5*r01);
IkReal x802=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x798))+((x798*x801))+(((-1.0)*r00*x802))+((r02*x799))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x801))+((cj5*r00*x800))+(((-1.0)*r01*sj5*x800))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*sj5*x798))+((cj5*r20*x800))+(((0.204620884747229)*r22))+(((-1.0)*r20*x802))+((r22*x799))+(((-1.0)*r21*sj5*x800))+(((-0.444735007694415)*x797))+((x797*x798))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x798))+((x798*x801))+(((-1.0)*r00*x802))+((r02*x799))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x801))+((cj5*r00*x800))+(((-1.0)*r01*sj5*x800))+(((2.4390243902439)*px))))+IKsqr((((r20*sj5*x798))+((cj5*r20*x800))+(((0.204620884747229)*r22))+(((-1.0)*r20*x802))+((r22*x799))+(((-1.0)*r21*sj5*x800))+(((-0.444735007694415)*x797))+((x797*x798))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x798))+((x798*x801))+(((-1.0)*r00*x802))+((r02*x799))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x801))+((cj5*r00*x800))+(((-1.0)*r01*sj5*x800))+(((2.4390243902439)*px))), (((r20*sj5*x798))+((cj5*r20*x800))+(((0.204620884747229)*r22))+(((-1.0)*r20*x802))+((r22*x799))+(((-1.0)*r21*sj5*x800))+(((-0.444735007694415)*x797))+((x797*x798))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x803=((0.187545437253636)*cj4);
IkReal x804=(cj5*r20);
IkReal x805=(r01*sj5);
IkReal x806=(cj5*r21);
IkReal x807=(cj3*r00);
IkReal x808=(sj4*sj5);
IkReal x809=((0.20357990508077)*sj3);
IkReal x810=(r20*sj5);
IkReal x811=(cj4*cj5);
IkReal x812=((0.00925751294893567)*cj4);
IkReal x813=((0.117537022603216)*sj3);
IkReal x814=((0.10827950965428)*cj4);
IkReal x815=(r00*sj5);
IkReal x816=(cj4*r22);
IkReal x817=(r21*sj5);
IkReal x818=((0.216558867852667)*sj4);
IkReal x819=((0.0185150129489311)*sj4);
IkReal x820=(cj3*sj4);
IkReal x821=(cj4*r02);
IkReal x822=(cj5*r01);
IkReal x823=((0.41)*(IKcos(j1)));
IkReal x824=((0.41)*(IKsin(j1)));
IkReal x825=((0.135720094919197)*sj3*sj4);
IkReal x826=((0.0678600949192303)*cj4*sj3);
IkReal x827=(cj5*r00*sj4);
IkReal x828=((0.27144)*cj3*cj4);
evalcond[0]=((((-0.18234135315471)*x822))+(((-1.0)*x824))+((cj5*r00*x818))+((x814*x815))+(((-0.18234135315471)*x815))+((r02*x803))+px+(((0.10827950965428)*r01*x811))+(((-1.0)*x805*x818))+(((0.0838945627463637)*r02)));
evalcond[1]=((((-0.216558867852667)*r21*x808))+(((-1.0)*x823))+((x810*x814))+((r22*x803))+(((-0.18234135315471)*x810))+pz+((x804*x818))+((x806*x814))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x806)));
evalcond[2]=(((x809*x822))+((x809*x815))+(((-0.0648043305514941)*x806))+((cj5*r00*x825))+(((-0.0160344678271334)*x816))+((x815*x826))+(((-1.0)*x823))+(((0.235073880801598)*r02*x820))+(((0.135720094919197)*x807*x808))+(((0.0185150129489311)*r21*x808))+((x813*x821))+(((-1.0)*x810*x812))+(((-0.27144)*x807*x811))+(((-0.0648043305514941)*x810))+pz+(((0.0160344678271334)*r22))+(((-1.0)*x804*x819))+((x805*x828))+(((-1.0)*r02*x813))+(((0.135720094919197)*x820*x822))+(((-1.0)*x806*x812))+(((-1.0)*x805*x825))+(((0.0678600949192303)*r01*sj3*x811)));
evalcond[3]=((((0.0160344678271334)*x821))+((x809*x810))+((x806*x809))+(((-0.0160344678271334)*r02))+((x812*x815))+((x817*x828))+((x813*x816))+((cj5*r00*x819))+(((0.00925751294893567)*r01*x811))+(((-1.0)*px))+(((0.0648043305514941)*x822))+((x810*x826))+((x806*x826))+((x804*x825))+(((-1.0)*r22*x813))+(((0.135720094919197)*cj3*r20*x808))+(((-0.135720094919197)*r21*sj3*x808))+(((0.0648043305514941)*x815))+(((0.235073880801598)*r22*x820))+x824+(((-1.0)*x805*x819))+(((0.135720094919197)*x806*x820))+(((-1.0)*x804*x828)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x829=(r02*sj1);
IkReal x830=(cj1*cj4);
IkReal x831=((0.749999650312296)*r22);
IkReal x832=(cj4*sj1);
IkReal x833=((0.250000349687704)*r22);
IkReal x834=((0.433012903784321)*r00*sj5);
IkReal x835=((0.433012903784321)*r20*sj5);
IkReal x836=((0.433012903784321)*cj5*r01);
IkReal x837=((0.433012903784321)*cj5*r21);
IkReal x838=((0.866025201892125)*cj5*sj1*sj4);
IkReal x839=((0.866025201892125)*cj1*cj5*sj4);
IkReal x840=((0.866025201892125)*r01*sj4*sj5);
IkReal x841=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x832))+((cj1*x840))+(((-0.749999650312296)*r02*x830))+((x832*x835))+((x832*x837))+((r20*x838))+(((-1.0)*x830*x834))+(((-1.0)*x830*x836))+(((-1.0)*r00*x839))+(((-0.250000349687704)*cj1*r02))+((sj1*x833))+(((-1.0)*sj1*x841))+((cj1*x836))+((cj1*x834)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x836))+(((-1.0)*sj1*x834))+(((0.749999650312296)*cj4*x829))+(((0.250000349687704)*x829))+((x832*x836))+((x832*x834))+((r00*x838))+((r20*x839))+((x830*x835))+((x830*x837))+((x830*x831))+(((-1.0)*cj1*x835))+(((-1.0)*cj1*x837))+(((-1.0)*sj1*x840))+(((-1.0)*cj1*x841))+((cj1*x833)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x832))+((cj1*x840))+(((-0.749999650312296)*r02*x830))+((x832*x835))+((x832*x837))+((r20*x838))+(((-1.0)*x830*x834))+(((-1.0)*x830*x836))+(((-1.0)*r00*x839))+(((-0.250000349687704)*cj1*r02))+((sj1*x833))+(((-1.0)*sj1*x841))+((cj1*x836))+((cj1*x834))))+IKsqr(((((-1.0)*sj1*x836))+(((-1.0)*sj1*x834))+(((0.749999650312296)*cj4*x829))+(((0.250000349687704)*x829))+((x832*x836))+((x832*x834))+((r00*x838))+((r20*x839))+((x830*x835))+((x830*x837))+((x830*x831))+(((-1.0)*cj1*x835))+(((-1.0)*cj1*x837))+(((-1.0)*sj1*x840))+(((-1.0)*cj1*x841))+((cj1*x833))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x832))+((cj1*x840))+(((-0.749999650312296)*r02*x830))+((x832*x835))+((x832*x837))+((r20*x838))+(((-1.0)*x830*x834))+(((-1.0)*x830*x836))+(((-1.0)*r00*x839))+(((-0.250000349687704)*cj1*r02))+((sj1*x833))+(((-1.0)*sj1*x841))+((cj1*x836))+((cj1*x834))), ((((-1.0)*sj1*x836))+(((-1.0)*sj1*x834))+(((0.749999650312296)*cj4*x829))+(((0.250000349687704)*x829))+((x832*x836))+((x832*x834))+((r00*x838))+((r20*x839))+((x830*x835))+((x830*x837))+((x830*x831))+(((-1.0)*cj1*x835))+(((-1.0)*cj1*x837))+(((-1.0)*sj1*x840))+(((-1.0)*cj1*x841))+((cj1*x833))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x842=IKcos(j2);
IkReal x843=IKsin(j2);
IkReal x844=((0.433012903784321)*sj3);
IkReal x845=((0.749999650312296)*sj3);
IkReal x846=(r00*sj5);
IkReal x847=(cj4*cj5);
IkReal x848=((1.0)*cj3);
IkReal x849=(cj5*r01);
IkReal x850=(r21*sj3);
IkReal x851=(cj4*sj5);
IkReal x852=(cj3*r21);
IkReal x853=((0.500000349687582)*sj4);
IkReal x854=((0.433012903784321)*r20);
IkReal x855=(cj4*r22);
IkReal x856=(r20*sj5);
IkReal x857=((0.0160344678271334)*r02);
IkReal x858=(cj4*r02);
IkReal x859=(r01*sj5);
IkReal x860=(cj5*r00);
IkReal x861=((0.0185150129489311)*sj4);
IkReal x862=(r21*sj5);
IkReal x863=(cj5*r21);
IkReal x864=((0.866025201892125)*sj4);
IkReal x865=(cj5*r20);
IkReal x866=((0.250000349687704)*sj3);
IkReal x867=(sj1*x842);
IkReal x868=(cj1*x842);
IkReal x869=(sj1*x843);
IkReal x870=(cj1*x843);
IkReal x871=((1.0)*x870);
evalcond[0]=(((sj5*x854))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x847))+(((0.433012903784321)*x863))+(((-1.0)*x864*x865))+(((-0.749999650312296)*x855))+((x862*x864))+x869+x868+(((-1.0)*x851*x854)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*r01*x847))+(((-1.0)*x860*x864))+(((-0.749999650312296)*x858))+((x859*x864))+x867+(((-0.433012903784321)*cj4*x846))+(((0.433012903784321)*x846))+(((0.433012903784321)*x849))+(((-1.0)*x871)));
evalcond[2]=((((0.0160344678271334)*x855))+(((0.0648043305514941)*x856))+(((0.00925751294893567)*r20*x851))+(((-0.27144)*x868))+(((-0.27144)*x869))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x861*x862))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x847))+((x861*x865))+(((0.0648043305514941)*x863)));
evalcond[3]=((((-1.0)*x857))+(((0.00925751294893567)*r01*x847))+(((-0.27144)*x867))+(((0.41)*sj1))+(((-1.0)*px))+(((0.0648043305514941)*x846))+(((0.0648043305514941)*x849))+(((0.27144)*x870))+((x860*x861))+(((-1.0)*x859*x861))+((cj4*x857))+(((0.00925751294893567)*cj4*x846)));
evalcond[4]=(((x845*x863))+((x845*x856))+(((-1.0)*sj5*x850*x853))+((sj3*x853*x865))+((x844*x855))+(((-1.0)*r20*x847*x848))+((x851*x852))+(((-1.0)*r22*x844))+((cj3*r22*x864))+((cj5*x852*x853))+((cj3*x853*x856))+x867+((r20*x851*x866))+(((0.250000349687704)*x847*x850))+(((-1.0)*x871)));
evalcond[5]=(((cj3*r02*x864))+(((-1.0)*r02*x844))+((r01*x847*x866))+(((-1.0)*r00*x847*x848))+(((-1.0)*x869))+(((-1.0)*x868))+((cj4*x846*x866))+((sj3*x853*x860))+((x844*x858))+((cj3*r01*x851))+(((-1.0)*sj3*x853*x859))+((cj3*x846*x853))+((x845*x849))+((x845*x846))+((cj3*x849*x853)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x872=((0.433012903784321)*cj5);
IkReal x873=((0.866025201892125)*sj4);
IkReal x874=((0.433012903784321)*r22);
IkReal x875=(cj4*sj5);
IkReal x876=(cj5*r21);
IkReal x877=(r20*sj5);
IkReal x878=((0.500000349687582)*sj4);
IkReal x879=(cj5*x878);
CheckValue<IkReal> x880 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x876))+(((-0.749999650312296)*x877))+(((-0.250000349687704)*r20*x875))+(((-1.0)*cj4*x874))+(((-0.250000349687704)*cj4*x876))+x874+((r21*sj5*x878))+(((-1.0)*r20*x879)))),IkReal(((((-1.0)*x877*x878))+(((-1.0)*x876*x878))+(((-1.0)*r21*x875))+((cj4*cj5*r20))+(((-1.0)*r22*x873)))),IKFAST_ATAN2_MAGTHRESH);
if(!x880.valid){
continue;
}
CheckValue<IkReal> x881=IKPowWithIntegerCheck(IKsign((((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r00*(((((0.433012903784321)*x875))+(((-0.433012903784321)*sj5))+((cj5*x873))))))+((r01*(((((-1.0)*sj5*x873))+((cj4*x872))+(((-1.0)*x872)))))))),-1);
if(!x881.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x880.value)+(((1.5707963267949)*(x881.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x882=IKsin(j3);
IkReal x883=IKcos(j3);
IkReal x884=(r11*sj5);
IkReal x885=(r10*sj5);
IkReal x886=(cj5*r20);
IkReal x887=(cj5*r11);
IkReal x888=(r00*sj5);
IkReal x889=(cj4*cj5);
IkReal x890=((0.500000349687582)*cj5);
IkReal x891=(r21*sj5);
IkReal x892=(r20*sj5);
IkReal x893=(r01*sj5);
IkReal x894=(sj4*x882);
IkReal x895=((1.0)*x882);
IkReal x896=((0.250000349687704)*x883);
IkReal x897=((0.749999650312296)*x883);
IkReal x898=((0.433012903784321)*cj4*r12);
IkReal x899=((0.749999650312296)*x882);
IkReal x900=(r12*x883);
IkReal x901=(cj4*x882);
IkReal x902=((0.500000349687582)*sj4*x883);
IkReal x903=((0.250000349687704)*x901);
IkReal x904=((0.433012903784321)*r02*x883);
IkReal x905=((0.433012903784321)*r22*x883);
evalcond[0]=((((-1.0)*x892*x897))+(((-1.0)*cj4*x892*x896))+((x891*x902))+((x891*x901))+(((-1.0)*x886*x902))+(((-1.0)*cj4*x905))+(((0.866025201892125)*r22*x894))+(((-1.0)*r21*x889*x896))+(((-1.0)*cj5*r21*x897))+(((-1.0)*cj4*x886*x895))+x905+((r21*x890*x894))+(((0.500000349687582)*x892*x894)));
evalcond[1]=((((0.500000349687582)*x888*x894))+((r01*x890*x894))+(((-1.0)*r00*x889*x895))+(((-1.0)*r01*x889*x896))+(((-1.0)*r00*sj4*x883*x890))+((x893*x901))+((x893*x902))+(((-1.0)*cj4*x904))+(((-1.0)*cj5*r01*x897))+(((-1.0)*x888*x897))+(((-1.0)*cj4*x888*x896))+(((0.866025201892125)*r02*x894))+x904);
evalcond[2]=(((cj4*x883*x884))+((x887*x902))+((x887*x903))+((x882*x898))+((x885*x902))+((x885*x903))+((r10*x890*x894))+(((0.866025201892125)*sj4*x900))+(((-1.0)*r10*x883*x889))+(((-0.433012903784321)*r12*x882))+((x885*x899))+(((-0.500000349687582)*x884*x894))+((x887*x899)));
evalcond[3]=((-1.0)+(((0.500000349687582)*x885*x894))+(((-1.0)*r10*sj4*x883*x890))+((x884*x902))+((x884*x901))+(((-1.0)*x883*x898))+(((0.866025201892125)*r12*x894))+(((-1.0)*cj4*x885*x896))+(((0.500000349687582)*x887*x894))+(((-1.0)*r10*x889*x895))+(((0.433012903784321)*x900))+(((-1.0)*cj4*x887*x896))+(((-1.0)*x885*x897))+(((-1.0)*x887*x897)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x906=(cj5*r21);
IkReal x907=((0.26409636501044)*cj4);
IkReal x908=((0.457427895740576)*cj4);
IkReal x909=((0.528192360616262)*sj4);
IkReal x910=(cj5*r01);
IkReal x911=((0.444735007694415)*sj5);
if( IKabs(((((-1.0)*r01*sj5*x909))+((r02*x908))+(((-1.0)*r00*x911))+((cj5*r00*x909))+((x907*x910))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x910))+(((2.4390243902439)*px))+((r00*sj5*x907)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.444735007694415)*x906))+(((0.204620884747229)*r22))+((r20*sj5*x907))+(((-1.0)*r20*x911))+(((-1.0)*r21*sj5*x909))+((x906*x907))+((r22*x908))+((cj5*r20*x909))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*sj5*x909))+((r02*x908))+(((-1.0)*r00*x911))+((cj5*r00*x909))+((x907*x910))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x910))+(((2.4390243902439)*px))+((r00*sj5*x907))))+IKsqr(((((-0.444735007694415)*x906))+(((0.204620884747229)*r22))+((r20*sj5*x907))+(((-1.0)*r20*x911))+(((-1.0)*r21*sj5*x909))+((x906*x907))+((r22*x908))+((cj5*r20*x909))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r01*sj5*x909))+((r02*x908))+(((-1.0)*r00*x911))+((cj5*r00*x909))+((x907*x910))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x910))+(((2.4390243902439)*px))+((r00*sj5*x907))), ((((-0.444735007694415)*x906))+(((0.204620884747229)*r22))+((r20*sj5*x907))+(((-1.0)*r20*x911))+(((-1.0)*r21*sj5*x909))+((x906*x907))+((r22*x908))+((cj5*r20*x909))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x912=((0.187545437253636)*cj4);
IkReal x913=(cj5*r20);
IkReal x914=(r01*sj5);
IkReal x915=(cj5*r21);
IkReal x916=(cj3*r00);
IkReal x917=(sj4*sj5);
IkReal x918=((0.20357990508077)*sj3);
IkReal x919=(r20*sj5);
IkReal x920=(cj4*cj5);
IkReal x921=((0.00925751294893567)*cj4);
IkReal x922=((0.117537022603216)*sj3);
IkReal x923=((0.10827950965428)*cj4);
IkReal x924=(r00*sj5);
IkReal x925=(cj4*r22);
IkReal x926=(r21*sj5);
IkReal x927=((0.216558867852667)*sj4);
IkReal x928=((0.0185150129489311)*sj4);
IkReal x929=(cj3*sj4);
IkReal x930=(cj4*r02);
IkReal x931=(cj5*r01);
IkReal x932=((0.41)*(IKcos(j1)));
IkReal x933=((0.41)*(IKsin(j1)));
IkReal x934=((0.135720094919197)*sj3*sj4);
IkReal x935=((0.0678600949192303)*cj4*sj3);
IkReal x936=(cj5*r00*sj4);
IkReal x937=((0.27144)*cj3*cj4);
evalcond[0]=((((-0.18234135315471)*x924))+(((-1.0)*x914*x927))+(((-0.18234135315471)*x931))+((cj5*r00*x927))+((r02*x912))+(((0.10827950965428)*r01*x920))+px+((x923*x924))+(((0.0838945627463637)*r02))+(((-1.0)*x933)));
evalcond[1]=(((x915*x923))+((x919*x923))+(((-0.216558867852667)*r21*x917))+(((-0.18234135315471)*x919))+(((-0.18234135315471)*x915))+pz+((r22*x912))+(((0.0838945627463637)*r22))+((x913*x927))+(((-1.0)*x932)));
evalcond[2]=(((x918*x924))+(((0.0678600949192303)*r01*sj3*x920))+(((-0.27144)*x916*x920))+((x924*x935))+(((-1.0)*x914*x934))+(((0.0185150129489311)*r21*x917))+((cj5*r00*x934))+(((-1.0)*r02*x922))+(((-0.0648043305514941)*x915))+(((-0.0648043305514941)*x919))+(((0.135720094919197)*x929*x931))+(((-0.0160344678271334)*x925))+((x914*x937))+(((0.235073880801598)*r02*x929))+pz+(((0.135720094919197)*x916*x917))+(((-1.0)*x913*x928))+(((0.0160344678271334)*r22))+(((-1.0)*x919*x921))+((x922*x930))+(((-1.0)*x915*x921))+((x918*x931))+(((-1.0)*x932)));
evalcond[3]=((((0.0648043305514941)*x924))+(((0.0648043305514941)*x931))+((x919*x935))+((x915*x935))+(((0.135720094919197)*cj3*r20*x917))+(((-1.0)*x914*x928))+(((-0.0160344678271334)*r02))+(((-1.0)*r22*x922))+((cj5*r00*x928))+(((0.235073880801598)*r22*x929))+(((-0.135720094919197)*r21*sj3*x917))+((x921*x924))+((x918*x919))+(((-1.0)*px))+(((-1.0)*x913*x937))+((x922*x925))+((x915*x918))+(((0.00925751294893567)*r01*x920))+((x926*x937))+x933+(((0.135720094919197)*x915*x929))+(((0.0160344678271334)*x930))+((x913*x934)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x938=(r02*sj1);
IkReal x939=(cj1*cj4);
IkReal x940=((0.749999650312296)*r22);
IkReal x941=(cj4*sj1);
IkReal x942=((0.250000349687704)*r22);
IkReal x943=((0.433012903784321)*r00*sj5);
IkReal x944=((0.433012903784321)*r20*sj5);
IkReal x945=((0.433012903784321)*cj5*r01);
IkReal x946=((0.433012903784321)*cj5*r21);
IkReal x947=((0.866025201892125)*cj5*sj1*sj4);
IkReal x948=((0.866025201892125)*cj1*cj5*sj4);
IkReal x949=((0.866025201892125)*r01*sj4*sj5);
IkReal x950=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*r00*x948))+((sj1*x942))+(((-1.0)*x939*x945))+(((-1.0)*x939*x943))+((x941*x944))+((x941*x946))+((cj1*x949))+((cj1*x945))+((cj1*x943))+(((-1.0)*sj1*x950))+(((-0.749999650312296)*r02*x939))+(((-0.250000349687704)*cj1*r02))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x947)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x950))+(((-1.0)*cj1*x946))+(((-1.0)*cj1*x944))+((x939*x940))+((x939*x946))+((x939*x944))+((x941*x943))+((x941*x945))+((cj1*x942))+((r00*x947))+(((0.250000349687704)*x938))+(((0.749999650312296)*cj4*x938))+(((-1.0)*sj1*x949))+(((-1.0)*sj1*x945))+(((-1.0)*sj1*x943))+((r20*x948)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x948))+((sj1*x942))+(((-1.0)*x939*x945))+(((-1.0)*x939*x943))+((x941*x944))+((x941*x946))+((cj1*x949))+((cj1*x945))+((cj1*x943))+(((-1.0)*sj1*x950))+(((-0.749999650312296)*r02*x939))+(((-0.250000349687704)*cj1*r02))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x947))))+IKsqr(((((-1.0)*cj1*x950))+(((-1.0)*cj1*x946))+(((-1.0)*cj1*x944))+((x939*x940))+((x939*x946))+((x939*x944))+((x941*x943))+((x941*x945))+((cj1*x942))+((r00*x947))+(((0.250000349687704)*x938))+(((0.749999650312296)*cj4*x938))+(((-1.0)*sj1*x949))+(((-1.0)*sj1*x945))+(((-1.0)*sj1*x943))+((r20*x948))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r00*x948))+((sj1*x942))+(((-1.0)*x939*x945))+(((-1.0)*x939*x943))+((x941*x944))+((x941*x946))+((cj1*x949))+((cj1*x945))+((cj1*x943))+(((-1.0)*sj1*x950))+(((-0.749999650312296)*r02*x939))+(((-0.250000349687704)*cj1*r02))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x947))), ((((-1.0)*cj1*x950))+(((-1.0)*cj1*x946))+(((-1.0)*cj1*x944))+((x939*x940))+((x939*x946))+((x939*x944))+((x941*x943))+((x941*x945))+((cj1*x942))+((r00*x947))+(((0.250000349687704)*x938))+(((0.749999650312296)*cj4*x938))+(((-1.0)*sj1*x949))+(((-1.0)*sj1*x945))+(((-1.0)*sj1*x943))+((r20*x948))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x951=IKcos(j2);
IkReal x952=IKsin(j2);
IkReal x953=((0.433012903784321)*sj3);
IkReal x954=((0.749999650312296)*sj3);
IkReal x955=(r00*sj5);
IkReal x956=(cj4*cj5);
IkReal x957=((1.0)*cj3);
IkReal x958=(cj5*r01);
IkReal x959=(r21*sj3);
IkReal x960=(cj4*sj5);
IkReal x961=(cj3*r21);
IkReal x962=((0.500000349687582)*sj4);
IkReal x963=((0.433012903784321)*r20);
IkReal x964=(cj4*r22);
IkReal x965=(r20*sj5);
IkReal x966=((0.0160344678271334)*r02);
IkReal x967=(cj4*r02);
IkReal x968=(r01*sj5);
IkReal x969=(cj5*r00);
IkReal x970=((0.0185150129489311)*sj4);
IkReal x971=(r21*sj5);
IkReal x972=(cj5*r21);
IkReal x973=((0.866025201892125)*sj4);
IkReal x974=(cj5*r20);
IkReal x975=((0.250000349687704)*sj3);
IkReal x976=(sj1*x951);
IkReal x977=(cj1*x951);
IkReal x978=(sj1*x952);
IkReal x979=(cj1*x952);
IkReal x980=((1.0)*x979);
evalcond[0]=((((-0.433012903784321)*r21*x956))+(((-1.0)*x960*x963))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x972))+(((-0.749999650312296)*x964))+((x971*x973))+x977+x978+((sj5*x963))+(((-1.0)*x973*x974)));
evalcond[1]=((((-1.0)*x980))+(((-0.250000349687704)*r02))+(((-1.0)*x969*x973))+(((0.433012903784321)*x955))+(((0.433012903784321)*x958))+(((-0.749999650312296)*x967))+((x968*x973))+(((-0.433012903784321)*r01*x956))+(((-0.433012903784321)*cj4*x955))+x976);
evalcond[2]=((((0.41)*cj1))+(((0.0648043305514941)*x965))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0648043305514941)*x972))+(((-1.0)*x970*x971))+(((0.0160344678271334)*x964))+(((0.00925751294893567)*r21*x956))+(((0.00925751294893567)*r20*x960))+((x970*x974))+(((-0.27144)*x978))+(((-0.27144)*x977)));
evalcond[3]=(((x969*x970))+(((0.00925751294893567)*cj4*x955))+(((0.41)*sj1))+(((0.0648043305514941)*x955))+(((0.0648043305514941)*x958))+(((-1.0)*px))+(((0.00925751294893567)*r01*x956))+(((0.27144)*x979))+(((-1.0)*x966))+(((-0.27144)*x976))+(((-1.0)*x968*x970))+((cj4*x966)));
evalcond[4]=((((-1.0)*x980))+((x954*x965))+(((-1.0)*sj5*x959*x962))+(((0.250000349687704)*x956*x959))+((r20*x960*x975))+((x960*x961))+(((-1.0)*r20*x956*x957))+((cj3*x962*x965))+((sj3*x962*x974))+(((-1.0)*r22*x953))+((cj5*x961*x962))+((x954*x972))+((cj3*r22*x973))+x976+((x953*x964)));
evalcond[5]=(((cj3*r02*x973))+(((-1.0)*x977))+(((-1.0)*x978))+(((-1.0)*sj3*x962*x968))+((cj3*r01*x960))+((sj3*x962*x969))+((cj4*x955*x975))+((r01*x956*x975))+((cj3*x958*x962))+(((-1.0)*r00*x956*x957))+(((-1.0)*r02*x953))+((x953*x967))+((cj3*x955*x962))+((x954*x958))+((x954*x955)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x981=(cj4*r12);
IkReal x982=(r10*sj5);
IkReal x983=((0.433012903784321)*cj5*r11);
IkReal x984=(cj5*r10*sj4);
IkReal x985=(r11*sj4*sj5);
IkReal x986=((1.73204919243206)*cj5*r11);
j3eval[0]=((((1.73204919243206)*x982))+(((-1.73204919243206)*cj4*x982))+(((-1.0)*r12))+(((-2.99999440500457)*x981))+(((3.46409596216145)*x985))+(((-3.46409596216145)*x984))+x986+(((-1.0)*cj4*x986)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((0.433012903784321)*x982))+(((-0.866025201892125)*x984))+(((-0.749999650312296)*x981))+x983+(((0.866025201892125)*x985))+(((-0.433012903784321)*cj4*x982))+(((-1.0)*cj4*x983))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x987=(cj4*r22);
IkReal x988=(cj5*r21);
IkReal x989=((0.866025201892125)*sj4);
IkReal x990=(cj5*r20);
IkReal x991=(r21*sj5);
IkReal x992=((3.46409596216145)*sj4);
IkReal x993=(r20*sj5);
IkReal x994=(cj4*x993);
j3eval[0]=((((-1.0)*x991*x992))+((x990*x992))+(((-1.73204919243206)*x993))+(((1.73204919243206)*x994))+r22+(((2.99999440500457)*x987))+(((-1.73204919243206)*x988))+(((1.73204919243206)*cj4*x988)));
j3eval[1]=IKsign(((((0.749999650312296)*x987))+(((-0.433012903784321)*x988))+((x989*x990))+(((-0.433012903784321)*x993))+(((0.433012903784321)*cj4*x988))+(((0.433012903784321)*x994))+(((0.250000349687704)*r22))+(((-1.0)*x989*x991))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x995=cj5*cj5;
IkReal x996=r01*r01;
IkReal x997=r00*r00;
IkReal x998=cj4*cj4;
IkReal x999=r02*r02;
IkReal x1000=((3.9999972025013)*sj4);
IkReal x1001=(r00*r01);
IkReal x1002=(cj5*sj4);
IkReal x1003=(r00*r02);
IkReal x1004=(cj4*sj4);
IkReal x1005=(r01*r02);
IkReal x1006=(cj5*sj5);
IkReal x1007=((0.375000349687459)*cj4);
IkReal x1008=((2.309396769726)*cj4);
IkReal x1009=((0.433012298107169)*cj4);
IkReal x1010=(sj4*sj5);
IkReal x1011=((2.0)*cj4);
IkReal x1012=(cj4*x1006);
IkReal x1013=((0.750000174843424)*x996);
IkReal x1014=((1.50000034968685)*x995);
IkReal x1015=((0.649519052837905)*x998);
IkReal x1016=((0.937499825156026)*x998);
IkReal x1017=((3.46409838486413)*x998);
IkReal x1018=((4.99999440500457)*x998);
IkReal x1019=((0.750000174843424)*x997);
IkReal x1020=((7.99999440500261)*x995);
IkReal x1021=(x998*x999);
IkReal x1022=(x995*x997);
IkReal x1023=(x995*x996);
IkReal x1024=(x997*x998);
IkReal x1025=(x996*x998);
j3eval[0]=(((x1011*x1023))+(((4.33332836000522)*x997))+(((-9.99998881000913)*x1001*x1006*x998))+(((1.33333395500065)*x996))+(((-1.0)*x1024))+((cj5*x1005*x1008))+((x1000*x1006*x997))+((x1011*x997))+(((-1.0)*x1018*x1023))+(((-1.0)*x1001*x1004*x1020))+((sj4*x1001*x1020))+((sj5*x1003*x1008))+(((6.9281919243229)*sj5*x1004*x1005))+(((-6.9281919243229)*cj4*x1002*x1003))+(((-1.0)*x1000*x1006*x996))+(((1.15470161513813)*cj5*x1005))+(((-2.30940161513813)*x1002*x1003))+(((5.99998881000913)*x1001*x1006))+(((-1.0)*x1011*x999))+((x1018*x1022))+((x1000*x1012*x996))+(((-1.0)*sj5*x1003*x1017))+((cj4*x1000*x1001))+(((1.15470161513813)*sj5*x1003))+(((-1.0)*x1000*x1012*x997))+(((-1.0)*cj5*x1005*x1017))+(((4.99999440500457)*x999))+(((3.99999440500457)*x1025))+(((-2.99999440500457)*x1022))+(((-2.99999440500457)*x1021))+(((-1.0)*x1000*x1001))+(((4.0)*x1001*x1012))+(((2.99999440500457)*x1023))+(((-1.0)*x1011*x1022))+(((2.30940161513813)*x1005*x1010)));
j3eval[1]=IKsign(((((-0.562499475468567)*x1022))+(((-0.562499475468567)*x1021))+(((0.750000699374918)*x1001*x1012))+(((1.29903719716146)*sj5*x1004*x1005))+((cj5*x1005*x1009))+((cj4*sj5*x1002*x1013))+(((0.433013206622791)*x1005*x1010))+(((-0.750000174843424)*sj4*x1001))+((sj4*x1001*x1014))+(((0.750000174843424)*x1001*x1004))+((sj5*x1003*x1009))+(((0.250000349687704)*x996))+(((-1.87499965031205)*x1001*x1006*x998))+(((-1.0)*x1007*x999))+((x1007*x997))+(((0.937499825156026)*x999))+(((-1.0)*cj4*sj5*x1002*x1019))+(((1.12499895093713)*x1001*x1006))+(((-0.433013206622791)*x1002*x1003))+(((0.749999650312296)*x1025))+(((-1.0)*sj5*x1003*x1015))+(((0.216506754730737)*sj5*x1003))+(((0.562499475468567)*x1023))+(((-1.0)*x1016*x1023))+(((0.81249982515627)*x997))+((x1007*x1023))+(((0.216506754730737)*cj5*x1005))+(((-1.0)*cj5*x1005*x1015))+((sj5*x1002*x1019))+(((-1.0)*sj5*x1002*x1013))+(((-1.0)*x1007*x1022))+(((-1.0)*x1001*x1004*x1014))+(((-1.29903719716146)*cj4*x1002*x1003))+((x1016*x1022))+(((-0.18750017484373)*x1024))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1026=r00*r00;
IkReal x1027=cj5*cj5;
IkReal x1028=r01*r01;
IkReal x1029=cj4*cj4;
IkReal x1030=r02*r02;
IkReal x1031=(sj4*sj5);
IkReal x1032=((0.500000349687582)*r01);
IkReal x1033=(r00*r02);
IkReal x1034=(cj4*r02);
IkReal x1035=(cj5*sj4);
IkReal x1036=(cj5*r01);
IkReal x1037=(cj4*r00);
IkReal x1038=(r00*sj5);
IkReal x1039=(r01*sj4);
IkReal x1040=((0.500000349687582)*r00);
IkReal x1041=((0.375000349687459)*cj4);
IkReal x1042=(cj4*sj5);
IkReal x1043=((0.937499825156026)*x1029);
IkReal x1044=((0.649519052837905)*x1029);
IkReal x1045=((1.50000034968685)*x1027);
IkReal x1046=((0.750000174843424)*cj5*x1028);
IkReal x1047=(x1026*x1027);
IkReal x1048=(x1027*x1028);
IkReal x1049=((0.750000174843424)*cj5*x1026);
CheckValue<IkReal> x1050=IKPowWithIntegerCheck(IKsign((((x1026*x1041))+((r00*x1039*x1045))+(((-0.562499475468567)*x1029*x1030))+(((0.433012298107169)*x1033*x1042))+(((0.250000349687704)*x1028))+(((0.562499475468567)*x1048))+(((0.433013206622791)*r01*r02*x1031))+(((-1.0)*x1031*x1046))+((x1043*x1047))+(((-0.18750017484373)*x1026*x1029))+(((1.12499895093713)*x1036*x1038))+(((-0.750000174843424)*r00*x1039))+(((0.750000174843424)*x1037*x1039))+(((0.749999650312296)*x1028*x1029))+(((1.29903719716146)*r01*x1031*x1034))+(((0.216506754730737)*r02*x1036))+(((-1.29903719716146)*cj4*x1033*x1035))+((x1041*x1048))+(((-1.0)*x1043*x1048))+(((0.81249982515627)*x1026))+(((-1.0)*x1041*x1047))+((x1031*x1049))+(((0.937499825156026)*x1030))+((cj4*x1031*x1046))+(((-1.87499965031205)*x1029*x1036*x1038))+(((-0.562499475468567)*x1047))+(((0.433012298107169)*x1034*x1036))+(((-1.0)*r02*x1036*x1044))+(((-0.433013206622791)*x1033*x1035))+(((0.216506754730737)*sj5*x1033))+(((-1.0)*x1037*x1039*x1045))+(((0.750000699374918)*sj5*x1036*x1037))+(((-1.0)*sj5*x1033*x1044))+(((-1.0)*cj4*x1031*x1049))+(((-1.0)*x1030*x1041)))),-1);
if(!x1050.valid){
continue;
}
CheckValue<IkReal> x1051 = IKatan2WithCheck(IkReal(((((0.866025201892125)*r02*sj4))+((x1031*x1040))+((r01*x1042))+(((-1.0)*cj5*x1037))+((x1032*x1035)))),IkReal((((x1031*x1032))+(((0.433012903784321)*r02))+(((-0.250000349687704)*sj5*x1037))+(((-0.749999650312296)*x1036))+(((-0.749999650312296)*x1038))+(((-0.433012903784321)*x1034))+(((-1.0)*x1035*x1040))+(((-0.250000349687704)*cj4*x1036)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1051.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1050.value)))+(x1051.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1052=IKsin(j3);
IkReal x1053=IKcos(j3);
IkReal x1054=((0.749999650312296)*r00);
IkReal x1055=(cj5*r20);
IkReal x1056=(cj4*cj5);
IkReal x1057=(cj5*r01);
IkReal x1058=(cj4*r00);
IkReal x1059=(cj4*sj5);
IkReal x1060=((0.500000349687582)*sj4);
IkReal x1061=((0.433012903784321)*r02);
IkReal x1062=((0.866025201892125)*sj4);
IkReal x1063=((0.433012903784321)*r22);
IkReal x1064=(sj5*x1052);
IkReal x1065=(r01*x1060);
IkReal x1066=((1.0)*x1052);
IkReal x1067=((0.250000349687704)*x1053);
IkReal x1068=(cj5*x1052);
IkReal x1069=(cj4*x1053);
IkReal x1070=(x1053*x1060);
IkReal x1071=((0.433012903784321)*r12*x1053);
IkReal x1072=((0.749999650312296)*sj5*x1053);
IkReal x1073=((0.749999650312296)*cj5*x1053);
evalcond[0]=((((-1.0)*x1063*x1069))+(((-1.0)*r20*x1072))+(((-1.0)*r21*x1073))+((r22*x1052*x1062))+(((-1.0)*r20*x1059*x1067))+((r21*x1052*x1059))+((x1053*x1063))+((r20*x1060*x1064))+((r21*sj5*x1070))+(((-1.0)*x1055*x1070))+(((-1.0)*cj4*x1055*x1066))+(((-1.0)*r21*x1056*x1067))+((r21*x1060*x1068)));
evalcond[1]=(((r11*x1052*x1059))+(((-1.0)*r10*x1059*x1067))+x1071+(((-1.0)*r11*x1073))+(((-1.0)*r10*x1072))+((r11*x1060*x1068))+(((-1.0)*r11*x1056*x1067))+((r10*x1060*x1064))+(((-0.433012903784321)*r12*x1069))+((r12*x1052*x1062))+((r11*sj5*x1070))+(((-1.0)*r10*x1056*x1066))+(((-1.0)*cj5*r10*x1070)));
evalcond[2]=(((r02*x1053*x1062))+((r00*x1060*x1068))+((x1054*x1064))+(((0.749999650312296)*x1052*x1057))+(((-1.0)*r00*x1053*x1056))+((cj4*x1052*x1061))+((x1057*x1070))+(((0.250000349687704)*x1058*x1064))+((r00*sj5*x1070))+(((0.250000349687704)*r01*x1052*x1056))+(((-1.0)*x1052*x1061))+(((-1.0)*x1064*x1065))+((r01*x1053*x1059)));
evalcond[3]=((-1.0)+(((-1.0)*sj5*x1058*x1067))+((r02*x1052*x1062))+((r00*x1060*x1064))+(((-1.0)*r01*x1056*x1067))+((x1052*x1057*x1060))+((sj5*x1053*x1065))+(((-0.749999650312296)*x1053*x1057))+(((-1.0)*x1061*x1069))+((x1053*x1061))+(((-1.0)*r00*x1056*x1066))+(((-1.0)*cj5*r00*x1070))+((r01*x1052*x1059))+(((-1.0)*sj5*x1053*x1054)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1074=((0.528192360616262)*sj4);
IkReal x1075=(r20*sj5);
IkReal x1076=((0.26409636501044)*cj4);
IkReal x1077=((0.444735007694415)*cj5);
IkReal x1078=((0.457427895740576)*cj4);
IkReal x1079=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1078))+(((-1.0)*x1076*x1079))+(((0.444735007694415)*x1079))+(((-1.0)*cj5*r11*x1076))+((r11*sj5*x1074))+((r11*x1077))+(((-1.0)*cj5*r10*x1074)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r21*x1076))+(((-1.0)*r21*x1077))+(((-0.444735007694415)*x1075))+(((0.204620884747229)*r22))+((cj5*r20*x1074))+((x1075*x1076))+((r22*x1078))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1074)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1078))+(((-1.0)*x1076*x1079))+(((0.444735007694415)*x1079))+(((-1.0)*cj5*r11*x1076))+((r11*sj5*x1074))+((r11*x1077))+(((-1.0)*cj5*r10*x1074))))+IKsqr((((cj5*r21*x1076))+(((-1.0)*r21*x1077))+(((-0.444735007694415)*x1075))+(((0.204620884747229)*r22))+((cj5*r20*x1074))+((x1075*x1076))+((r22*x1078))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1074))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1078))+(((-1.0)*x1076*x1079))+(((0.444735007694415)*x1079))+(((-1.0)*cj5*r11*x1076))+((r11*sj5*x1074))+((r11*x1077))+(((-1.0)*cj5*r10*x1074))), (((cj5*r21*x1076))+(((-1.0)*r21*x1077))+(((-0.444735007694415)*x1075))+(((0.204620884747229)*r22))+((cj5*r20*x1074))+((x1075*x1076))+((r22*x1078))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1074))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1080=((1.0)*py);
IkReal x1081=(cj5*r11);
IkReal x1082=(cj5*sj3);
IkReal x1083=(r20*sj5);
IkReal x1084=((0.135720094919197)*sj4);
IkReal x1085=(r21*sj5);
IkReal x1086=((0.0185150129489311)*sj4);
IkReal x1087=((0.135720094919197)*sj3);
IkReal x1088=((0.00925751294893567)*cj4);
IkReal x1089=(cj4*cj5);
IkReal x1090=(cj3*r10);
IkReal x1091=((0.0678600949192303)*cj4);
IkReal x1092=(r10*sj5);
IkReal x1093=((0.10827950965428)*cj4);
IkReal x1094=(cj4*r22);
IkReal x1095=((0.0160344678271334)*r12);
IkReal x1096=((0.20357990508077)*sj3);
IkReal x1097=(cj5*r20);
IkReal x1098=((0.216558867852667)*sj4);
IkReal x1099=((0.117537022603216)*sj3);
IkReal x1100=((0.27144)*cj3);
IkReal x1101=(cj5*r21);
IkReal x1102=(cj4*r12);
IkReal x1103=((0.41)*(IKsin(j1)));
IkReal x1104=((0.41)*(IKcos(j1)));
IkReal x1105=(cj5*r10*sj4);
IkReal x1106=(r11*sj4*sj5);
IkReal x1107=((0.235073880801598)*cj3*sj4);
IkReal x1108=(x1103+x1080);
evalcond[0]=((((0.10827950965428)*r21*x1089))+((x1083*x1093))+(((-0.18234135315471)*x1083))+(((-1.0)*x1085*x1098))+(((-0.18234135315471)*x1101))+pz+(((0.187545437253636)*x1094))+(((-1.0)*x1104))+(((0.0838945627463637)*r22))+((x1097*x1098)));
evalcond[1]=((((-1.0)*cj5*r10*x1098))+(((0.18234135315471)*x1081))+(((-0.187545437253636)*x1102))+(((0.18234135315471)*x1092))+((r11*sj5*x1098))+(((-1.0)*x1081*x1093))+(((-0.0838945627463637)*r12))+(((-1.0)*x1092*x1093))+(((-1.0)*x1108)));
evalcond[2]=(((cj5*r10*x1086))+(((-1.0)*sj3*x1083*x1091))+((r20*x1089*x1100))+(((-1.0)*r11*sj5*x1086))+((x1081*x1088))+(((-1.0)*cj3*x1084*x1101))+((cj4*x1095))+(((-1.0)*cj4*x1085*x1100))+(((-1.0)*r22*x1107))+(((-1.0)*x1083*x1096))+((r22*x1099))+(((-1.0)*x1095))+(((-1.0)*r20*x1082*x1084))+((x1088*x1092))+(((-1.0)*r21*x1082*x1091))+(((-1.0)*x1094*x1099))+(((0.0648043305514941)*x1081))+(((-1.0)*x1108))+(((-0.20357990508077)*r21*x1082))+(((-1.0)*cj3*x1083*x1084))+((sj3*x1084*x1085))+(((0.0648043305514941)*x1092)));
evalcond[3]=((((0.0160344678271334)*x1094))+((r10*x1082*x1084))+x1104+((sj3*x1081*x1091))+((x1086*x1097))+(((-0.0160344678271334)*r22))+((sj5*x1084*x1090))+(((-1.0)*pz))+((x1099*x1102))+(((-1.0)*r12*x1099))+(((-1.0)*r11*sj3*sj5*x1084))+((x1092*x1096))+(((-1.0)*x1085*x1086))+((x1081*x1096))+((x1088*x1101))+((r12*x1107))+((cj3*x1081*x1084))+(((0.0648043305514941)*x1083))+((sj3*x1091*x1092))+(((-0.27144)*x1089*x1090))+((cj4*r11*sj5*x1100))+(((0.0648043305514941)*x1101))+((x1083*x1088)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1109=((0.250000349687704)*r12);
IkReal x1110=((0.749999650312296)*cj4);
IkReal x1111=((0.433012903784321)*sj5);
IkReal x1112=(cj1*r10);
IkReal x1113=(cj1*r22);
IkReal x1114=(cj1*r20);
IkReal x1115=((0.866025201892125)*sj4);
IkReal x1116=(r20*sj1);
IkReal x1117=(r22*sj1);
IkReal x1118=(r10*sj1);
IkReal x1119=(r11*sj1);
IkReal x1120=((0.433012903784321)*cj5);
IkReal x1121=(r21*sj1);
IkReal x1122=(cj1*r21);
IkReal x1123=(cj1*r11);
IkReal x1124=(cj5*sj1*x1115);
IkReal x1125=(cj4*r21*x1120);
if( IKabs((((cj4*x1111*x1116))+((cj4*x1111*x1112))+((cj4*x1120*x1121))+((cj4*x1120*x1123))+(((-1.0)*sj5*x1115*x1123))+(((-1.0)*sj5*x1115*x1121))+((x1110*x1117))+((cj5*x1115*x1116))+((cj1*x1109))+((cj1*r12*x1110))+(((-1.0)*x1120*x1121))+(((-1.0)*x1120*x1123))+((cj5*x1112*x1115))+(((-1.0)*x1111*x1116))+(((-1.0)*x1111*x1112))+(((0.250000349687704)*x1117)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1111*x1118))+((cj4*x1111*x1114))+((cj4*x1120*x1122))+(((-1.0)*sj5*x1115*x1122))+(((-1.0)*cj5*x1115*x1118))+((sj5*x1115*x1119))+((x1110*x1113))+((x1119*x1120))+(((-1.0)*sj1*x1109))+((cj5*x1114*x1115))+(((-1.0)*cj4*x1119*x1120))+(((-1.0)*cj4*x1111*x1118))+(((-1.0)*x1120*x1122))+(((-1.0)*x1111*x1114))+(((-1.0)*r12*sj1*x1110))+(((0.250000349687704)*x1113)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1111*x1116))+((cj4*x1111*x1112))+((cj4*x1120*x1121))+((cj4*x1120*x1123))+(((-1.0)*sj5*x1115*x1123))+(((-1.0)*sj5*x1115*x1121))+((x1110*x1117))+((cj5*x1115*x1116))+((cj1*x1109))+((cj1*r12*x1110))+(((-1.0)*x1120*x1121))+(((-1.0)*x1120*x1123))+((cj5*x1112*x1115))+(((-1.0)*x1111*x1116))+(((-1.0)*x1111*x1112))+(((0.250000349687704)*x1117))))+IKsqr((((x1111*x1118))+((cj4*x1111*x1114))+((cj4*x1120*x1122))+(((-1.0)*sj5*x1115*x1122))+(((-1.0)*cj5*x1115*x1118))+((sj5*x1115*x1119))+((x1110*x1113))+((x1119*x1120))+(((-1.0)*sj1*x1109))+((cj5*x1114*x1115))+(((-1.0)*cj4*x1119*x1120))+(((-1.0)*cj4*x1111*x1118))+(((-1.0)*x1120*x1122))+(((-1.0)*x1111*x1114))+(((-1.0)*r12*sj1*x1110))+(((0.250000349687704)*x1113))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1111*x1116))+((cj4*x1111*x1112))+((cj4*x1120*x1121))+((cj4*x1120*x1123))+(((-1.0)*sj5*x1115*x1123))+(((-1.0)*sj5*x1115*x1121))+((x1110*x1117))+((cj5*x1115*x1116))+((cj1*x1109))+((cj1*r12*x1110))+(((-1.0)*x1120*x1121))+(((-1.0)*x1120*x1123))+((cj5*x1112*x1115))+(((-1.0)*x1111*x1116))+(((-1.0)*x1111*x1112))+(((0.250000349687704)*x1117))), (((x1111*x1118))+((cj4*x1111*x1114))+((cj4*x1120*x1122))+(((-1.0)*sj5*x1115*x1122))+(((-1.0)*cj5*x1115*x1118))+((sj5*x1115*x1119))+((x1110*x1113))+((x1119*x1120))+(((-1.0)*sj1*x1109))+((cj5*x1114*x1115))+(((-1.0)*cj4*x1119*x1120))+(((-1.0)*cj4*x1111*x1118))+(((-1.0)*x1120*x1122))+(((-1.0)*x1111*x1114))+(((-1.0)*r12*sj1*x1110))+(((0.250000349687704)*x1113))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1126=IKsin(j2);
IkReal x1127=IKcos(j2);
IkReal x1128=(cj5*r11);
IkReal x1129=((0.433012903784321)*cj4);
IkReal x1130=(r21*sj5);
IkReal x1131=((0.500000349687582)*sj4);
IkReal x1132=((0.749999650312296)*sj3);
IkReal x1133=(cj3*cj4);
IkReal x1134=(cj5*r10);
IkReal x1135=((0.0185150129489311)*sj4);
IkReal x1136=(r20*sj5);
IkReal x1137=(cj4*r22);
IkReal x1138=(r10*sj5);
IkReal x1139=(r22*sj3);
IkReal x1140=(r11*sj5);
IkReal x1141=((0.00925751294893567)*cj4);
IkReal x1142=(cj5*r21);
IkReal x1143=(r12*sj3);
IkReal x1144=(cj4*r12);
IkReal x1145=(cj5*r20);
IkReal x1146=((0.866025201892125)*sj4);
IkReal x1147=(cj1*x1127);
IkReal x1148=(sj1*x1126);
IkReal x1149=(cj1*x1126);
IkReal x1150=((0.250000349687704)*cj4*sj3);
IkReal x1151=(sj1*x1127);
IkReal x1152=(cj3*x1146);
IkReal x1153=(x1147+x1148);
evalcond[0]=((((-1.0)*x1145*x1146))+x1153+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1136))+(((-0.749999650312296)*x1137))+(((-1.0)*x1129*x1142))+((x1130*x1146))+(((0.433012903784321)*x1142))+(((-1.0)*x1129*x1136)));
evalcond[1]=(((x1140*x1146))+x1149+(((0.433012903784321)*x1128))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1138))+(((-1.0)*x1134*x1146))+(((-0.749999650312296)*x1144))+(((-1.0)*x1151))+(((-1.0)*x1128*x1129))+(((-1.0)*x1129*x1138)));
evalcond[2]=((((0.0648043305514941)*x1142))+((x1141*x1142))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x1130*x1135))+(((-1.0)*pz))+(((0.0160344678271334)*x1137))+(((-0.27144)*x1147))+(((-0.27144)*x1148))+(((0.0648043305514941)*x1136))+((x1135*x1145))+((x1136*x1141)));
evalcond[3]=((((-1.0)*x1135*x1140))+((x1128*x1141))+(((-0.0160344678271334)*r12))+((x1134*x1135))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x1144))+(((0.27144)*x1151))+(((-0.27144)*x1149))+(((0.0648043305514941)*x1128))+((x1138*x1141))+(((0.0648043305514941)*x1138)));
evalcond[4]=(x1153+((r12*x1152))+((x1128*x1150))+(((-0.433012903784321)*x1143))+(((-1.0)*sj3*x1131*x1140))+((cj3*x1128*x1131))+((x1129*x1143))+(((-1.0)*x1133*x1134))+((x1133*x1140))+((sj3*x1131*x1134))+((x1128*x1132))+((x1138*x1150))+((cj3*x1131*x1138))+((x1132*x1138)));
evalcond[5]=(x1151+((r22*x1152))+((x1142*x1150))+((x1130*x1133))+((x1136*x1150))+((cj3*x1131*x1142))+((x1129*x1139))+(((-1.0)*x1133*x1145))+((x1132*x1142))+(((-1.0)*x1149))+((cj3*x1131*x1136))+(((-1.0)*sj3*x1130*x1131))+((sj3*x1131*x1145))+(((-0.433012903784321)*x1139))+((x1132*x1136)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1154=(cj4*cj5);
IkReal x1155=((0.866025201892125)*sj4);
IkReal x1156=(r11*sj5);
IkReal x1157=((0.500000349687582)*sj4);
IkReal x1158=((0.433012903784321)*r12);
IkReal x1159=(r10*sj5);
IkReal x1160=((0.433012903784321)*sj5);
IkReal x1161=(cj5*r11);
CheckValue<IkReal> x1162 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x1161))+x1158+(((-0.250000349687704)*cj4*x1159))+(((-1.0)*cj4*x1158))+(((-0.749999650312296)*x1159))+(((-0.250000349687704)*r11*x1154))+(((-1.0)*cj5*r10*x1157))+((x1156*x1157)))),IkReal(((((-1.0)*cj4*x1156))+(((-1.0)*x1157*x1159))+(((-1.0)*r12*x1155))+(((-1.0)*x1157*x1161))+((r10*x1154)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1162.valid){
continue;
}
CheckValue<IkReal> x1163=IKPowWithIntegerCheck(IKsign((((r21*(((((-0.433012903784321)*cj5))+(((0.433012903784321)*x1154))+(((-1.0)*sj5*x1155))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*((((cj4*x1160))+((cj5*x1155))+(((-1.0)*x1160)))))))),-1);
if(!x1163.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1162.value)+(((1.5707963267949)*(x1163.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1164=IKsin(j3);
IkReal x1165=IKcos(j3);
IkReal x1166=((0.749999650312296)*r00);
IkReal x1167=(cj5*r20);
IkReal x1168=(cj4*cj5);
IkReal x1169=(cj5*r01);
IkReal x1170=(cj4*r00);
IkReal x1171=(cj4*sj5);
IkReal x1172=((0.500000349687582)*sj4);
IkReal x1173=((0.433012903784321)*r02);
IkReal x1174=((0.866025201892125)*sj4);
IkReal x1175=((0.433012903784321)*r22);
IkReal x1176=(sj5*x1164);
IkReal x1177=(r01*x1172);
IkReal x1178=((1.0)*x1164);
IkReal x1179=((0.250000349687704)*x1165);
IkReal x1180=(cj5*x1164);
IkReal x1181=(cj4*x1165);
IkReal x1182=(x1165*x1172);
IkReal x1183=((0.433012903784321)*r12*x1165);
IkReal x1184=((0.749999650312296)*sj5*x1165);
IkReal x1185=((0.749999650312296)*cj5*x1165);
evalcond[0]=((((-1.0)*x1175*x1181))+((r21*x1172*x1180))+((x1165*x1175))+((r21*x1164*x1171))+(((-1.0)*r21*x1168*x1179))+((r22*x1164*x1174))+((r21*sj5*x1182))+(((-1.0)*r20*x1171*x1179))+(((-1.0)*cj4*x1167*x1178))+((r20*x1172*x1176))+(((-1.0)*r20*x1184))+(((-1.0)*x1167*x1182))+(((-1.0)*r21*x1185)));
evalcond[1]=((((-0.433012903784321)*r12*x1181))+(((-1.0)*r11*x1185))+x1183+(((-1.0)*r11*x1168*x1179))+((r12*x1164*x1174))+(((-1.0)*r10*x1171*x1179))+((r10*x1172*x1176))+(((-1.0)*cj5*r10*x1182))+((r11*sj5*x1182))+(((-1.0)*r10*x1184))+((r11*x1172*x1180))+(((-1.0)*r10*x1168*x1178))+((r11*x1164*x1171)));
evalcond[2]=(((r00*sj5*x1182))+((x1166*x1176))+((x1169*x1182))+(((-1.0)*r00*x1165*x1168))+((cj4*x1164*x1173))+((r02*x1165*x1174))+(((0.250000349687704)*x1170*x1176))+(((-1.0)*x1176*x1177))+(((-1.0)*x1164*x1173))+((r01*x1165*x1171))+(((0.749999650312296)*x1164*x1169))+((r00*x1172*x1180))+(((0.250000349687704)*r01*x1164*x1168)));
evalcond[3]=((-1.0)+((r00*x1172*x1176))+((x1165*x1173))+((sj5*x1165*x1177))+(((-1.0)*sj5*x1165*x1166))+((r02*x1164*x1174))+(((-0.749999650312296)*x1165*x1169))+(((-1.0)*sj5*x1170*x1179))+(((-1.0)*x1173*x1181))+((x1164*x1169*x1172))+(((-1.0)*cj5*r00*x1182))+(((-1.0)*r00*x1168*x1178))+((r01*x1164*x1171))+(((-1.0)*r01*x1168*x1179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1186=((0.528192360616262)*sj4);
IkReal x1187=(r20*sj5);
IkReal x1188=((0.26409636501044)*cj4);
IkReal x1189=((0.444735007694415)*cj5);
IkReal x1190=((0.457427895740576)*cj4);
IkReal x1191=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1188*x1191))+(((-1.0)*cj5*r10*x1186))+((r11*sj5*x1186))+((r11*x1189))+(((0.444735007694415)*x1191))+(((-1.0)*cj5*r11*x1188))+(((-1.0)*r12*x1190)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x1186))+((x1187*x1188))+(((0.204620884747229)*r22))+((cj5*r20*x1186))+((cj5*r21*x1188))+((r22*x1190))+(((-0.444735007694415)*x1187))+(((2.4390243902439)*pz))+(((-1.0)*r21*x1189)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1188*x1191))+(((-1.0)*cj5*r10*x1186))+((r11*sj5*x1186))+((r11*x1189))+(((0.444735007694415)*x1191))+(((-1.0)*cj5*r11*x1188))+(((-1.0)*r12*x1190))))+IKsqr(((((-1.0)*r21*sj5*x1186))+((x1187*x1188))+(((0.204620884747229)*r22))+((cj5*r20*x1186))+((cj5*r21*x1188))+((r22*x1190))+(((-0.444735007694415)*x1187))+(((2.4390243902439)*pz))+(((-1.0)*r21*x1189))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x1188*x1191))+(((-1.0)*cj5*r10*x1186))+((r11*sj5*x1186))+((r11*x1189))+(((0.444735007694415)*x1191))+(((-1.0)*cj5*r11*x1188))+(((-1.0)*r12*x1190))), ((((-1.0)*r21*sj5*x1186))+((x1187*x1188))+(((0.204620884747229)*r22))+((cj5*r20*x1186))+((cj5*r21*x1188))+((r22*x1190))+(((-0.444735007694415)*x1187))+(((2.4390243902439)*pz))+(((-1.0)*r21*x1189))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1192=((1.0)*py);
IkReal x1193=(cj5*r11);
IkReal x1194=(cj5*sj3);
IkReal x1195=(r20*sj5);
IkReal x1196=((0.135720094919197)*sj4);
IkReal x1197=(r21*sj5);
IkReal x1198=((0.0185150129489311)*sj4);
IkReal x1199=((0.135720094919197)*sj3);
IkReal x1200=((0.00925751294893567)*cj4);
IkReal x1201=(cj4*cj5);
IkReal x1202=(cj3*r10);
IkReal x1203=((0.0678600949192303)*cj4);
IkReal x1204=(r10*sj5);
IkReal x1205=((0.10827950965428)*cj4);
IkReal x1206=(cj4*r22);
IkReal x1207=((0.0160344678271334)*r12);
IkReal x1208=((0.20357990508077)*sj3);
IkReal x1209=(cj5*r20);
IkReal x1210=((0.216558867852667)*sj4);
IkReal x1211=((0.117537022603216)*sj3);
IkReal x1212=((0.27144)*cj3);
IkReal x1213=(cj5*r21);
IkReal x1214=(cj4*r12);
IkReal x1215=((0.41)*(IKsin(j1)));
IkReal x1216=((0.41)*(IKcos(j1)));
IkReal x1217=(cj5*r10*sj4);
IkReal x1218=(r11*sj4*sj5);
IkReal x1219=((0.235073880801598)*cj3*sj4);
IkReal x1220=(x1192+x1215);
evalcond[0]=((((-1.0)*x1197*x1210))+(((0.187545437253636)*x1206))+(((-0.18234135315471)*x1213))+(((0.10827950965428)*r21*x1201))+pz+((x1195*x1205))+(((-1.0)*x1216))+((x1209*x1210))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x1195)));
evalcond[1]=((((0.18234135315471)*x1193))+(((-1.0)*x1204*x1205))+(((-1.0)*x1220))+(((-1.0)*cj5*r10*x1210))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1214))+((r11*sj5*x1210))+(((-1.0)*x1193*x1205))+(((0.18234135315471)*x1204)));
evalcond[2]=((((0.0648043305514941)*x1204))+(((-1.0)*r21*x1194*x1203))+((r22*x1211))+(((-1.0)*x1220))+(((-1.0)*x1206*x1211))+((sj3*x1196*x1197))+(((-1.0)*r22*x1219))+((r20*x1201*x1212))+((x1193*x1200))+((x1200*x1204))+(((-1.0)*cj3*x1195*x1196))+(((-1.0)*r20*x1194*x1196))+(((-1.0)*sj3*x1195*x1203))+(((-1.0)*cj3*x1196*x1213))+(((-1.0)*x1207))+(((0.0648043305514941)*x1193))+(((-0.20357990508077)*r21*x1194))+(((-1.0)*r11*sj5*x1198))+(((-1.0)*cj4*x1197*x1212))+((cj4*x1207))+(((-1.0)*x1195*x1208))+((cj5*r10*x1198)));
evalcond[3]=(((x1204*x1208))+((cj4*r11*sj5*x1212))+((r12*x1219))+x1216+(((0.0648043305514941)*x1213))+((sj3*x1203*x1204))+(((-1.0)*x1197*x1198))+((x1193*x1208))+(((-0.0160344678271334)*r22))+((cj3*x1193*x1196))+((sj3*x1193*x1203))+((sj5*x1196*x1202))+(((-1.0)*pz))+((x1195*x1200))+((x1200*x1213))+(((0.0160344678271334)*x1206))+(((-0.27144)*x1201*x1202))+(((-1.0)*r12*x1211))+((x1211*x1214))+(((0.0648043305514941)*x1195))+((r10*x1194*x1196))+(((-1.0)*r11*sj3*sj5*x1196))+((x1198*x1209)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1221=((0.250000349687704)*r12);
IkReal x1222=((0.749999650312296)*cj4);
IkReal x1223=((0.433012903784321)*sj5);
IkReal x1224=(cj1*r10);
IkReal x1225=(cj1*r22);
IkReal x1226=(cj1*r20);
IkReal x1227=((0.866025201892125)*sj4);
IkReal x1228=(r20*sj1);
IkReal x1229=(r22*sj1);
IkReal x1230=(r10*sj1);
IkReal x1231=(r11*sj1);
IkReal x1232=((0.433012903784321)*cj5);
IkReal x1233=(r21*sj1);
IkReal x1234=(cj1*r21);
IkReal x1235=(cj1*r11);
IkReal x1236=(cj5*sj1*x1227);
IkReal x1237=(cj4*r21*x1232);
if( IKabs((((cj5*x1224*x1227))+((cj5*x1227*x1228))+((cj1*r12*x1222))+(((0.250000349687704)*x1229))+(((-1.0)*sj5*x1227*x1233))+(((-1.0)*sj5*x1227*x1235))+((x1222*x1229))+((cj4*x1223*x1228))+((cj4*x1223*x1224))+((cj4*x1232*x1235))+((cj4*x1232*x1233))+(((-1.0)*x1232*x1233))+(((-1.0)*x1232*x1235))+((cj1*x1221))+(((-1.0)*x1223*x1228))+(((-1.0)*x1223*x1224)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj5*x1227*x1231))+((cj5*x1226*x1227))+((x1223*x1230))+(((-1.0)*cj4*x1231*x1232))+(((-1.0)*cj4*x1223*x1230))+(((0.250000349687704)*x1225))+(((-1.0)*sj5*x1227*x1234))+((x1222*x1225))+((cj4*x1223*x1226))+((x1231*x1232))+(((-1.0)*sj1*x1221))+(((-1.0)*r12*sj1*x1222))+(((-1.0)*cj5*x1227*x1230))+((cj4*x1232*x1234))+(((-1.0)*x1232*x1234))+(((-1.0)*x1223*x1226)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x1224*x1227))+((cj5*x1227*x1228))+((cj1*r12*x1222))+(((0.250000349687704)*x1229))+(((-1.0)*sj5*x1227*x1233))+(((-1.0)*sj5*x1227*x1235))+((x1222*x1229))+((cj4*x1223*x1228))+((cj4*x1223*x1224))+((cj4*x1232*x1235))+((cj4*x1232*x1233))+(((-1.0)*x1232*x1233))+(((-1.0)*x1232*x1235))+((cj1*x1221))+(((-1.0)*x1223*x1228))+(((-1.0)*x1223*x1224))))+IKsqr((((sj5*x1227*x1231))+((cj5*x1226*x1227))+((x1223*x1230))+(((-1.0)*cj4*x1231*x1232))+(((-1.0)*cj4*x1223*x1230))+(((0.250000349687704)*x1225))+(((-1.0)*sj5*x1227*x1234))+((x1222*x1225))+((cj4*x1223*x1226))+((x1231*x1232))+(((-1.0)*sj1*x1221))+(((-1.0)*r12*sj1*x1222))+(((-1.0)*cj5*x1227*x1230))+((cj4*x1232*x1234))+(((-1.0)*x1232*x1234))+(((-1.0)*x1223*x1226))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x1224*x1227))+((cj5*x1227*x1228))+((cj1*r12*x1222))+(((0.250000349687704)*x1229))+(((-1.0)*sj5*x1227*x1233))+(((-1.0)*sj5*x1227*x1235))+((x1222*x1229))+((cj4*x1223*x1228))+((cj4*x1223*x1224))+((cj4*x1232*x1235))+((cj4*x1232*x1233))+(((-1.0)*x1232*x1233))+(((-1.0)*x1232*x1235))+((cj1*x1221))+(((-1.0)*x1223*x1228))+(((-1.0)*x1223*x1224))), (((sj5*x1227*x1231))+((cj5*x1226*x1227))+((x1223*x1230))+(((-1.0)*cj4*x1231*x1232))+(((-1.0)*cj4*x1223*x1230))+(((0.250000349687704)*x1225))+(((-1.0)*sj5*x1227*x1234))+((x1222*x1225))+((cj4*x1223*x1226))+((x1231*x1232))+(((-1.0)*sj1*x1221))+(((-1.0)*r12*sj1*x1222))+(((-1.0)*cj5*x1227*x1230))+((cj4*x1232*x1234))+(((-1.0)*x1232*x1234))+(((-1.0)*x1223*x1226))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1238=IKsin(j2);
IkReal x1239=IKcos(j2);
IkReal x1240=(cj5*r11);
IkReal x1241=((0.433012903784321)*cj4);
IkReal x1242=(r21*sj5);
IkReal x1243=((0.500000349687582)*sj4);
IkReal x1244=((0.749999650312296)*sj3);
IkReal x1245=(cj3*cj4);
IkReal x1246=(cj5*r10);
IkReal x1247=((0.0185150129489311)*sj4);
IkReal x1248=(r20*sj5);
IkReal x1249=(cj4*r22);
IkReal x1250=(r10*sj5);
IkReal x1251=(r22*sj3);
IkReal x1252=(r11*sj5);
IkReal x1253=((0.00925751294893567)*cj4);
IkReal x1254=(cj5*r21);
IkReal x1255=(r12*sj3);
IkReal x1256=(cj4*r12);
IkReal x1257=(cj5*r20);
IkReal x1258=((0.866025201892125)*sj4);
IkReal x1259=(cj1*x1239);
IkReal x1260=(sj1*x1238);
IkReal x1261=(cj1*x1238);
IkReal x1262=((0.250000349687704)*cj4*sj3);
IkReal x1263=(sj1*x1239);
IkReal x1264=(cj3*x1258);
IkReal x1265=(x1260+x1259);
evalcond[0]=(x1265+(((-0.250000349687704)*r22))+(((-1.0)*x1241*x1254))+(((0.433012903784321)*x1254))+(((-0.749999650312296)*x1249))+(((-1.0)*x1257*x1258))+(((-1.0)*x1241*x1248))+((x1242*x1258))+(((0.433012903784321)*x1248)));
evalcond[1]=(x1261+(((-0.250000349687704)*r12))+(((-1.0)*x1241*x1250))+(((0.433012903784321)*x1250))+(((-1.0)*x1246*x1258))+((x1252*x1258))+(((-1.0)*x1240*x1241))+(((-1.0)*x1263))+(((-0.749999650312296)*x1256))+(((0.433012903784321)*x1240)));
evalcond[2]=(((x1247*x1257))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x1248))+(((0.0160344678271334)*x1249))+((x1253*x1254))+(((-1.0)*x1242*x1247))+(((-1.0)*pz))+(((-0.27144)*x1259))+(((-0.27144)*x1260))+(((0.0648043305514941)*x1254))+((x1248*x1253)));
evalcond[3]=((((0.27144)*x1263))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1240))+(((-0.41)*sj1))+(((-1.0)*x1247*x1252))+(((-1.0)*py))+((x1250*x1253))+((x1246*x1247))+(((-0.27144)*x1261))+((x1240*x1253))+(((0.0648043305514941)*x1250))+(((0.0160344678271334)*x1256)));
evalcond[4]=((((-1.0)*x1245*x1246))+x1265+((x1241*x1255))+((x1245*x1252))+((cj3*x1240*x1243))+((r12*x1264))+((x1240*x1244))+((x1250*x1262))+((cj3*x1243*x1250))+((x1240*x1262))+(((-1.0)*sj3*x1243*x1252))+((sj3*x1243*x1246))+((x1244*x1250))+(((-0.433012903784321)*x1255)));
evalcond[5]=(((cj3*x1243*x1248))+x1263+((sj3*x1243*x1257))+(((-1.0)*sj3*x1242*x1243))+((x1241*x1251))+((r22*x1264))+(((-1.0)*x1245*x1257))+((x1254*x1262))+((cj3*x1243*x1254))+((x1242*x1245))+((x1244*x1248))+(((-1.0)*x1261))+((x1248*x1262))+((x1244*x1254))+(((-0.433012903784321)*x1251)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1266=((0.433012903784321)*cj5);
IkReal x1267=((0.866025201892125)*sj4);
IkReal x1268=((0.433012903784321)*r22);
IkReal x1269=(cj4*sj5);
IkReal x1270=(cj5*r21);
IkReal x1271=(r20*sj5);
IkReal x1272=((0.500000349687582)*sj4);
IkReal x1273=(cj5*x1272);
CheckValue<IkReal> x1274 = IKatan2WithCheck(IkReal((x1268+(((-0.749999650312296)*x1270))+(((-0.749999650312296)*x1271))+((r21*sj5*x1272))+(((-0.250000349687704)*cj4*x1270))+(((-0.250000349687704)*r20*x1269))+(((-1.0)*cj4*x1268))+(((-1.0)*r20*x1273)))),IkReal(((((-1.0)*r22*x1267))+(((-1.0)*x1270*x1272))+(((-1.0)*x1271*x1272))+(((-1.0)*r21*x1269))+((cj4*cj5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1274.valid){
continue;
}
CheckValue<IkReal> x1275=IKPowWithIntegerCheck(IKsign((((r11*((x1266+((sj5*x1267))+(((-1.0)*cj4*x1266))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r10*(((((-0.433012903784321)*x1269))+(((-1.0)*cj5*x1267))+(((0.433012903784321)*sj5)))))))),-1);
if(!x1275.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1274.value)+(((1.5707963267949)*(x1275.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1276=IKsin(j3);
IkReal x1277=IKcos(j3);
IkReal x1278=((0.749999650312296)*r00);
IkReal x1279=(cj5*r20);
IkReal x1280=(cj4*cj5);
IkReal x1281=(cj5*r01);
IkReal x1282=(cj4*r00);
IkReal x1283=(cj4*sj5);
IkReal x1284=((0.500000349687582)*sj4);
IkReal x1285=((0.433012903784321)*r02);
IkReal x1286=((0.866025201892125)*sj4);
IkReal x1287=((0.433012903784321)*r22);
IkReal x1288=(sj5*x1276);
IkReal x1289=(r01*x1284);
IkReal x1290=((1.0)*x1276);
IkReal x1291=((0.250000349687704)*x1277);
IkReal x1292=(cj5*x1276);
IkReal x1293=(cj4*x1277);
IkReal x1294=(x1277*x1284);
IkReal x1295=((0.433012903784321)*r12*x1277);
IkReal x1296=((0.749999650312296)*sj5*x1277);
IkReal x1297=((0.749999650312296)*cj5*x1277);
evalcond[0]=((((-1.0)*x1287*x1293))+(((-1.0)*r21*x1280*x1291))+(((-1.0)*r21*x1297))+((r20*x1284*x1288))+(((-1.0)*r20*x1296))+((r21*x1276*x1283))+((r21*x1284*x1292))+(((-1.0)*x1279*x1294))+((r21*sj5*x1294))+((x1277*x1287))+((r22*x1276*x1286))+(((-1.0)*r20*x1283*x1291))+(((-1.0)*cj4*x1279*x1290)));
evalcond[1]=((((-1.0)*cj5*r10*x1294))+(((-1.0)*r10*x1280*x1290))+(((-1.0)*r10*x1283*x1291))+x1295+(((-1.0)*r11*x1280*x1291))+((r11*sj5*x1294))+(((-1.0)*r11*x1297))+((r10*x1284*x1288))+((r11*x1284*x1292))+((r11*x1276*x1283))+(((-0.433012903784321)*r12*x1293))+((r12*x1276*x1286))+(((-1.0)*r10*x1296)));
evalcond[2]=((((0.250000349687704)*r01*x1276*x1280))+((x1278*x1288))+(((-1.0)*x1276*x1285))+((r02*x1277*x1286))+(((-1.0)*r00*x1277*x1280))+((r00*x1284*x1292))+((cj4*x1276*x1285))+((x1281*x1294))+(((0.250000349687704)*x1282*x1288))+((r00*sj5*x1294))+(((0.749999650312296)*x1276*x1281))+(((-1.0)*x1288*x1289))+((r01*x1277*x1283)));
evalcond[3]=((-1.0)+(((-1.0)*sj5*x1277*x1278))+((r01*x1276*x1283))+((x1276*x1281*x1284))+(((-1.0)*r00*x1280*x1290))+(((-1.0)*sj5*x1282*x1291))+((sj5*x1277*x1289))+((r02*x1276*x1286))+((x1277*x1285))+(((-1.0)*r01*x1280*x1291))+(((-1.0)*cj5*r00*x1294))+(((-0.749999650312296)*x1277*x1281))+(((-1.0)*x1285*x1293))+((r00*x1284*x1288)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1298=((0.528192360616262)*sj4);
IkReal x1299=(r20*sj5);
IkReal x1300=((0.26409636501044)*cj4);
IkReal x1301=((0.444735007694415)*cj5);
IkReal x1302=((0.457427895740576)*cj4);
IkReal x1303=(r10*sj5);
if( IKabs(((((-1.0)*cj5*r10*x1298))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1300))+((r11*sj5*x1298))+(((-1.0)*x1300*x1303))+(((0.444735007694415)*x1303))+((r11*x1301))+(((-1.0)*r12*x1302)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1299*x1300))+(((0.204620884747229)*r22))+((cj5*r20*x1298))+(((-1.0)*r21*x1301))+((cj5*r21*x1300))+(((-1.0)*r21*sj5*x1298))+((r22*x1302))+(((-0.444735007694415)*x1299))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj5*r10*x1298))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1300))+((r11*sj5*x1298))+(((-1.0)*x1300*x1303))+(((0.444735007694415)*x1303))+((r11*x1301))+(((-1.0)*r12*x1302))))+IKsqr((((x1299*x1300))+(((0.204620884747229)*r22))+((cj5*r20*x1298))+(((-1.0)*r21*x1301))+((cj5*r21*x1300))+(((-1.0)*r21*sj5*x1298))+((r22*x1302))+(((-0.444735007694415)*x1299))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*cj5*r10*x1298))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1300))+((r11*sj5*x1298))+(((-1.0)*x1300*x1303))+(((0.444735007694415)*x1303))+((r11*x1301))+(((-1.0)*r12*x1302))), (((x1299*x1300))+(((0.204620884747229)*r22))+((cj5*r20*x1298))+(((-1.0)*r21*x1301))+((cj5*r21*x1300))+(((-1.0)*r21*sj5*x1298))+((r22*x1302))+(((-0.444735007694415)*x1299))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1304=((1.0)*py);
IkReal x1305=(cj5*r11);
IkReal x1306=(cj5*sj3);
IkReal x1307=(r20*sj5);
IkReal x1308=((0.135720094919197)*sj4);
IkReal x1309=(r21*sj5);
IkReal x1310=((0.0185150129489311)*sj4);
IkReal x1311=((0.135720094919197)*sj3);
IkReal x1312=((0.00925751294893567)*cj4);
IkReal x1313=(cj4*cj5);
IkReal x1314=(cj3*r10);
IkReal x1315=((0.0678600949192303)*cj4);
IkReal x1316=(r10*sj5);
IkReal x1317=((0.10827950965428)*cj4);
IkReal x1318=(cj4*r22);
IkReal x1319=((0.0160344678271334)*r12);
IkReal x1320=((0.20357990508077)*sj3);
IkReal x1321=(cj5*r20);
IkReal x1322=((0.216558867852667)*sj4);
IkReal x1323=((0.117537022603216)*sj3);
IkReal x1324=((0.27144)*cj3);
IkReal x1325=(cj5*r21);
IkReal x1326=(cj4*r12);
IkReal x1327=((0.41)*(IKsin(j1)));
IkReal x1328=((0.41)*(IKcos(j1)));
IkReal x1329=(cj5*r10*sj4);
IkReal x1330=(r11*sj4*sj5);
IkReal x1331=((0.235073880801598)*cj3*sj4);
IkReal x1332=(x1304+x1327);
evalcond[0]=((((-1.0)*x1309*x1322))+(((-0.18234135315471)*x1325))+(((-0.18234135315471)*x1307))+((x1307*x1317))+(((-1.0)*x1328))+(((0.10827950965428)*r21*x1313))+(((0.187545437253636)*x1318))+pz+((x1321*x1322))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*cj5*r10*x1322))+(((0.18234135315471)*x1305))+((r11*sj5*x1322))+(((-1.0)*x1305*x1317))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1326))+(((-1.0)*x1332))+(((-1.0)*x1316*x1317))+(((0.18234135315471)*x1316)));
evalcond[2]=((((-1.0)*cj3*x1308*x1325))+(((0.0648043305514941)*x1305))+(((-1.0)*x1307*x1320))+(((-1.0)*r20*x1306*x1308))+((cj4*x1319))+(((-1.0)*r22*x1331))+((sj3*x1308*x1309))+((x1305*x1312))+(((-1.0)*x1319))+(((-1.0)*r21*x1306*x1315))+(((-1.0)*cj4*x1309*x1324))+(((-1.0)*r11*sj5*x1310))+((r22*x1323))+(((-1.0)*sj3*x1307*x1315))+(((-0.20357990508077)*r21*x1306))+((cj5*r10*x1310))+(((-1.0)*x1332))+(((-1.0)*cj3*x1307*x1308))+((x1312*x1316))+(((0.0648043305514941)*x1316))+(((-1.0)*x1318*x1323))+((r20*x1313*x1324)));
evalcond[3]=(((x1312*x1325))+x1328+(((0.0648043305514941)*x1325))+((x1316*x1320))+((r12*x1331))+((sj5*x1308*x1314))+(((0.0648043305514941)*x1307))+((x1307*x1312))+((x1323*x1326))+(((-1.0)*r11*sj3*sj5*x1308))+((cj4*r11*sj5*x1324))+(((-0.0160344678271334)*r22))+((x1305*x1320))+(((-1.0)*r12*x1323))+((sj3*x1305*x1315))+(((-1.0)*pz))+(((0.0160344678271334)*x1318))+((sj3*x1315*x1316))+(((-0.27144)*x1313*x1314))+((cj3*x1305*x1308))+((r10*x1306*x1308))+((x1310*x1321))+(((-1.0)*x1309*x1310)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1333=((0.250000349687704)*r12);
IkReal x1334=((0.749999650312296)*cj4);
IkReal x1335=((0.433012903784321)*sj5);
IkReal x1336=(cj1*r10);
IkReal x1337=(cj1*r22);
IkReal x1338=(cj1*r20);
IkReal x1339=((0.866025201892125)*sj4);
IkReal x1340=(r20*sj1);
IkReal x1341=(r22*sj1);
IkReal x1342=(r10*sj1);
IkReal x1343=(r11*sj1);
IkReal x1344=((0.433012903784321)*cj5);
IkReal x1345=(r21*sj1);
IkReal x1346=(cj1*r21);
IkReal x1347=(cj1*r11);
IkReal x1348=(cj5*sj1*x1339);
IkReal x1349=(cj4*r21*x1344);
if( IKabs(((((-1.0)*x1335*x1336))+(((-1.0)*sj5*x1339*x1347))+(((-1.0)*sj5*x1339*x1345))+((cj5*x1339*x1340))+((cj4*x1335*x1336))+(((-1.0)*x1335*x1340))+((cj1*x1333))+((x1334*x1341))+((cj4*x1344*x1347))+((cj4*x1344*x1345))+(((0.250000349687704)*x1341))+((cj5*x1336*x1339))+((cj1*r12*x1334))+(((-1.0)*x1344*x1345))+(((-1.0)*x1344*x1347))+((cj4*x1335*x1340)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1335*x1338))+(((-1.0)*sj5*x1339*x1346))+(((0.250000349687704)*x1337))+((cj4*x1335*x1338))+((sj5*x1339*x1343))+(((-1.0)*cj4*x1343*x1344))+((cj4*x1344*x1346))+((cj5*x1338*x1339))+((x1335*x1342))+(((-1.0)*r12*sj1*x1334))+(((-1.0)*sj1*x1333))+((x1343*x1344))+(((-1.0)*x1344*x1346))+((x1334*x1337))+(((-1.0)*cj4*x1335*x1342))+(((-1.0)*cj5*x1339*x1342)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1335*x1336))+(((-1.0)*sj5*x1339*x1347))+(((-1.0)*sj5*x1339*x1345))+((cj5*x1339*x1340))+((cj4*x1335*x1336))+(((-1.0)*x1335*x1340))+((cj1*x1333))+((x1334*x1341))+((cj4*x1344*x1347))+((cj4*x1344*x1345))+(((0.250000349687704)*x1341))+((cj5*x1336*x1339))+((cj1*r12*x1334))+(((-1.0)*x1344*x1345))+(((-1.0)*x1344*x1347))+((cj4*x1335*x1340))))+IKsqr(((((-1.0)*x1335*x1338))+(((-1.0)*sj5*x1339*x1346))+(((0.250000349687704)*x1337))+((cj4*x1335*x1338))+((sj5*x1339*x1343))+(((-1.0)*cj4*x1343*x1344))+((cj4*x1344*x1346))+((cj5*x1338*x1339))+((x1335*x1342))+(((-1.0)*r12*sj1*x1334))+(((-1.0)*sj1*x1333))+((x1343*x1344))+(((-1.0)*x1344*x1346))+((x1334*x1337))+(((-1.0)*cj4*x1335*x1342))+(((-1.0)*cj5*x1339*x1342))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1335*x1336))+(((-1.0)*sj5*x1339*x1347))+(((-1.0)*sj5*x1339*x1345))+((cj5*x1339*x1340))+((cj4*x1335*x1336))+(((-1.0)*x1335*x1340))+((cj1*x1333))+((x1334*x1341))+((cj4*x1344*x1347))+((cj4*x1344*x1345))+(((0.250000349687704)*x1341))+((cj5*x1336*x1339))+((cj1*r12*x1334))+(((-1.0)*x1344*x1345))+(((-1.0)*x1344*x1347))+((cj4*x1335*x1340))), ((((-1.0)*x1335*x1338))+(((-1.0)*sj5*x1339*x1346))+(((0.250000349687704)*x1337))+((cj4*x1335*x1338))+((sj5*x1339*x1343))+(((-1.0)*cj4*x1343*x1344))+((cj4*x1344*x1346))+((cj5*x1338*x1339))+((x1335*x1342))+(((-1.0)*r12*sj1*x1334))+(((-1.0)*sj1*x1333))+((x1343*x1344))+(((-1.0)*x1344*x1346))+((x1334*x1337))+(((-1.0)*cj4*x1335*x1342))+(((-1.0)*cj5*x1339*x1342))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1350=IKsin(j2);
IkReal x1351=IKcos(j2);
IkReal x1352=(cj5*r11);
IkReal x1353=((0.433012903784321)*cj4);
IkReal x1354=(r21*sj5);
IkReal x1355=((0.500000349687582)*sj4);
IkReal x1356=((0.749999650312296)*sj3);
IkReal x1357=(cj3*cj4);
IkReal x1358=(cj5*r10);
IkReal x1359=((0.0185150129489311)*sj4);
IkReal x1360=(r20*sj5);
IkReal x1361=(cj4*r22);
IkReal x1362=(r10*sj5);
IkReal x1363=(r22*sj3);
IkReal x1364=(r11*sj5);
IkReal x1365=((0.00925751294893567)*cj4);
IkReal x1366=(cj5*r21);
IkReal x1367=(r12*sj3);
IkReal x1368=(cj4*r12);
IkReal x1369=(cj5*r20);
IkReal x1370=((0.866025201892125)*sj4);
IkReal x1371=(cj1*x1351);
IkReal x1372=(sj1*x1350);
IkReal x1373=(cj1*x1350);
IkReal x1374=((0.250000349687704)*cj4*sj3);
IkReal x1375=(sj1*x1351);
IkReal x1376=(cj3*x1370);
IkReal x1377=(x1371+x1372);
evalcond[0]=(x1377+(((-1.0)*x1353*x1366))+(((-1.0)*x1353*x1360))+(((0.433012903784321)*x1366))+(((0.433012903784321)*x1360))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x1361))+((x1354*x1370))+(((-1.0)*x1369*x1370)));
evalcond[1]=(x1373+(((-1.0)*x1353*x1362))+(((0.433012903784321)*x1352))+(((-1.0)*x1352*x1353))+(((0.433012903784321)*x1362))+(((-0.250000349687704)*r12))+(((-1.0)*x1375))+(((-1.0)*x1358*x1370))+(((-0.749999650312296)*x1368))+((x1364*x1370)));
evalcond[2]=((((-0.27144)*x1372))+(((-0.27144)*x1371))+(((-1.0)*x1354*x1359))+((x1360*x1365))+(((0.0648043305514941)*x1360))+(((0.0648043305514941)*x1366))+(((0.0160344678271334)*x1361))+(((0.41)*cj1))+((x1359*x1369))+(((-0.0160344678271334)*r22))+((x1365*x1366))+(((-1.0)*pz)));
evalcond[3]=((((0.27144)*x1375))+(((-0.27144)*x1373))+(((0.0648043305514941)*x1352))+((x1358*x1359))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1362))+(((0.0160344678271334)*x1368))+(((-0.41)*sj1))+(((-1.0)*x1359*x1364))+(((-1.0)*py))+((x1352*x1365))+((x1362*x1365)));
evalcond[4]=(((x1356*x1362))+((x1357*x1364))+x1377+(((-1.0)*sj3*x1355*x1364))+((x1352*x1374))+((cj3*x1352*x1355))+(((-1.0)*x1357*x1358))+((r12*x1376))+((cj3*x1355*x1362))+((x1362*x1374))+((sj3*x1355*x1358))+(((-0.433012903784321)*x1367))+((x1352*x1356))+((x1353*x1367)));
evalcond[5]=(((x1356*x1366))+((x1356*x1360))+x1375+(((-1.0)*x1373))+(((-1.0)*sj3*x1354*x1355))+((x1366*x1374))+(((-1.0)*x1357*x1369))+((x1354*x1357))+((cj3*x1355*x1366))+((cj3*x1355*x1360))+((r22*x1376))+((sj3*x1355*x1369))+(((-0.433012903784321)*x1363))+((x1360*x1374))+((x1353*x1363)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1378=(cj4*r12);
IkReal x1379=(r10*sj5);
IkReal x1380=((0.433012903784321)*cj4);
IkReal x1381=(cj5*r11);
IkReal x1382=((1.73204919243206)*cj4);
IkReal x1383=(cj5*r10*sj4);
IkReal x1384=(r11*sj4*sj5);
j3eval[0]=(((x1381*x1382))+(((2.99999440500457)*x1378))+(((3.46409596216145)*x1383))+(((-3.46409596216145)*x1384))+r12+((x1379*x1382))+(((-1.73204919243206)*x1381))+(((-1.73204919243206)*x1379)));
j3eval[1]=IKsign((((x1380*x1381))+(((0.749999650312296)*x1378))+(((-0.433012903784321)*x1379))+((x1379*x1380))+(((0.250000349687704)*r12))+(((0.866025201892125)*x1383))+(((-0.433012903784321)*x1381))+(((-0.866025201892125)*x1384))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1385=(cj4*r22);
IkReal x1386=(cj5*r21);
IkReal x1387=((0.866025201892125)*sj4);
IkReal x1388=(cj5*r20);
IkReal x1389=(r21*sj5);
IkReal x1390=((3.46409596216145)*sj4);
IkReal x1391=(r20*sj5);
IkReal x1392=(cj4*x1391);
j3eval[0]=((((-1.73204919243206)*cj4*x1386))+(((-2.99999440500457)*x1385))+(((-1.0)*r22))+(((-1.73204919243206)*x1392))+((x1389*x1390))+(((-1.0)*x1388*x1390))+(((1.73204919243206)*x1391))+(((1.73204919243206)*x1386)));
j3eval[1]=IKsign(((((-0.250000349687704)*r22))+(((0.433012903784321)*x1386))+((x1387*x1389))+(((0.433012903784321)*x1391))+(((-0.433012903784321)*cj4*x1386))+(((-0.749999650312296)*x1385))+(((-0.433012903784321)*x1392))+(((-1.0)*x1387*x1388))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1393=cj5*cj5;
IkReal x1394=cj4*cj4;
IkReal x1395=r00*r00;
IkReal x1396=r01*r01;
IkReal x1397=r02*r02;
IkReal x1398=((3.9999972025013)*sj4);
IkReal x1399=(r00*r01);
IkReal x1400=(cj5*sj5);
IkReal x1401=(r00*r02);
IkReal x1402=(cj5*sj4);
IkReal x1403=((1.29903719716146)*cj4);
IkReal x1404=(r01*r02);
IkReal x1405=((0.375000349687459)*cj4);
IkReal x1406=(sj4*sj5);
IkReal x1407=(cj4*sj4);
IkReal x1408=((2.309396769726)*cj4);
IkReal x1409=((2.0)*cj4);
IkReal x1410=((0.433012298107169)*cj4);
IkReal x1411=((6.9281919243229)*cj4);
IkReal x1412=((0.750000174843424)*sj4);
IkReal x1413=(cj4*x1400);
IkReal x1414=((0.649519052837905)*x1394);
IkReal x1415=((3.46409838486413)*x1394);
IkReal x1416=((1.50000034968685)*x1393);
IkReal x1417=((4.99999440500457)*x1394);
IkReal x1418=((7.99999440500261)*x1393);
IkReal x1419=((0.937499825156026)*x1394);
IkReal x1420=(x1396*x1412);
IkReal x1421=(x1394*x1397);
IkReal x1422=(x1393*x1395);
IkReal x1423=(x1393*x1396);
IkReal x1424=(x1394*x1395);
IkReal x1425=(x1394*x1396);
j3eval[0]=((((-1.15470161513813)*sj5*x1401))+(((-1.15470161513813)*cj5*x1404))+((x1396*x1398*x1400))+(((-1.0)*x1396*x1398*x1413))+((x1398*x1399))+(((-5.99998881000913)*x1399*x1400))+(((-4.99999440500457)*x1397))+(((-1.0)*x1409*x1423))+(((2.99999440500457)*x1421))+(((2.99999440500457)*x1422))+((x1409*x1422))+(((-4.33332836000522)*x1395))+((x1397*x1409))+(((-3.99999440500457)*x1425))+(((-1.0)*x1417*x1422))+(((-1.33333395500065)*x1396))+((x1395*x1398*x1413))+(((-1.0)*x1395*x1398*x1400))+(((-1.0)*sj4*x1399*x1418))+(((2.30940161513813)*x1401*x1402))+((x1401*x1402*x1411))+((sj5*x1401*x1415))+x1424+((cj5*x1404*x1415))+(((-1.0)*cj5*x1404*x1408))+(((-2.99999440500457)*x1423))+(((-2.30940161513813)*x1404*x1406))+(((-1.0)*cj4*x1398*x1399))+(((-1.0)*x1395*x1409))+(((-4.0)*x1399*x1413))+((x1417*x1423))+(((-1.0)*sj5*x1401*x1408))+((x1399*x1407*x1418))+(((9.99998881000913)*x1394*x1399*x1400))+(((-1.0)*x1404*x1406*x1411)));
j3eval[1]=IKsign(((((-0.750000699374918)*x1399*x1413))+(((0.433013206622791)*x1401*x1402))+(((-0.216506754730737)*cj5*x1404))+(((-0.81249982515627)*x1395))+((x1405*x1422))+(((0.750000174843424)*x1395*x1400*x1407))+((x1397*x1405))+((x1399*x1412))+(((1.87499965031205)*x1394*x1399*x1400))+(((-0.937499825156026)*x1397))+(((-0.750000174843424)*x1396*x1400*x1407))+((x1401*x1402*x1403))+(((-0.433013206622791)*x1404*x1406))+(((-1.12499895093713)*x1399*x1400))+(((-0.562499475468567)*x1423))+((x1400*x1420))+(((-1.0)*sj5*x1401*x1410))+(((-0.250000349687704)*x1396))+(((0.562499475468567)*x1421))+(((0.562499475468567)*x1422))+(((-1.0)*sj4*x1399*x1416))+((sj5*x1401*x1414))+(((-1.0)*x1419*x1422))+((x1419*x1423))+(((-1.0)*x1395*x1400*x1412))+((cj5*x1404*x1414))+(((-1.0)*x1405*x1423))+(((-0.216506754730737)*sj5*x1401))+(((-0.749999650312296)*x1425))+(((0.18750017484373)*x1424))+(((-1.0)*cj5*x1404*x1410))+(((-1.0)*x1395*x1405))+(((-1.0)*x1403*x1404*x1406))+(((-0.750000174843424)*x1399*x1407))+((x1399*x1407*x1416))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1426=cj4*cj4;
IkReal x1427=r02*r02;
IkReal x1428=r00*r00;
IkReal x1429=cj5*cj5;
IkReal x1430=r01*r01;
IkReal x1431=(cj5*sj4);
IkReal x1432=(r00*r02);
IkReal x1433=(cj4*r02);
IkReal x1434=(cj5*r01);
IkReal x1435=(r02*sj4);
IkReal x1436=(cj4*r00);
IkReal x1437=(r00*sj5);
IkReal x1438=(r01*sj4);
IkReal x1439=(r01*sj5);
IkReal x1440=((0.375000349687459)*cj4);
IkReal x1441=(cj4*sj5);
IkReal x1442=((0.562499475468567)*x1429);
IkReal x1443=((0.937499825156026)*x1426);
IkReal x1444=((0.649519052837905)*x1426);
IkReal x1445=((1.50000034968685)*x1429);
IkReal x1446=((0.750000174843424)*x1428);
IkReal x1447=((0.750000174843424)*sj5*x1430);
IkReal x1448=(x1429*x1430);
IkReal x1449=(x1428*x1429);
CheckValue<IkReal> x1450 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*x1436))+(((0.500000349687582)*r01*x1431))+((cj4*x1439))+(((0.500000349687582)*sj4*x1437))+(((0.866025201892125)*x1435)))),IkReal(((((-0.433012903784321)*x1433))+(((-0.250000349687704)*sj5*x1436))+(((-0.500000349687582)*r00*x1431))+(((-0.749999650312296)*x1434))+(((-0.749999650312296)*x1437))+(((-0.250000349687704)*cj4*x1434))+(((0.433012903784321)*r02))+(((0.500000349687582)*sj5*x1438)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1450.valid){
continue;
}
CheckValue<IkReal> x1451=IKPowWithIntegerCheck(IKsign((((x1436*x1438*x1445))+(((-0.937499825156026)*x1427))+(((-0.750000174843424)*x1430*x1431*x1441))+(((-0.750000699374918)*sj5*x1434*x1436))+(((-1.12499895093713)*x1434*x1437))+(((-1.0)*x1428*x1440))+((x1443*x1448))+(((1.29903719716146)*cj4*x1431*x1432))+(((-1.0)*x1430*x1442))+((sj5*x1432*x1444))+((x1427*x1440))+(((-0.749999650312296)*x1426*x1430))+((x1431*x1441*x1446))+((x1440*x1449))+(((0.562499475468567)*x1426*x1427))+((x1428*x1442))+(((-0.750000174843424)*x1436*x1438))+(((-1.0)*r00*x1438*x1445))+(((-0.250000349687704)*x1430))+(((0.433013206622791)*x1431*x1432))+(((-1.0)*sj5*x1431*x1446))+(((0.18750017484373)*x1426*x1428))+((r02*x1434*x1444))+(((-0.81249982515627)*x1428))+((x1431*x1447))+(((-0.433012298107169)*x1433*x1434))+(((0.750000174843424)*r00*x1438))+(((-0.216506754730737)*sj5*x1432))+(((-1.0)*x1443*x1449))+(((-0.433012298107169)*x1432*x1441))+(((1.87499965031205)*x1426*x1434*x1437))+(((-1.29903719716146)*sj5*x1433*x1438))+(((-0.216506754730737)*r02*x1434))+(((-1.0)*x1440*x1448))+(((-0.433013206622791)*x1435*x1439)))),-1);
if(!x1451.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1450.value)+(((1.5707963267949)*(x1451.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1452=IKsin(j3);
IkReal x1453=IKcos(j3);
IkReal x1454=((0.749999650312296)*r00);
IkReal x1455=(cj5*r20);
IkReal x1456=(cj4*cj5);
IkReal x1457=(cj5*r01);
IkReal x1458=(cj4*r00);
IkReal x1459=(cj4*sj5);
IkReal x1460=((0.500000349687582)*sj4);
IkReal x1461=((0.433012903784321)*r02);
IkReal x1462=((0.866025201892125)*sj4);
IkReal x1463=((0.433012903784321)*r22);
IkReal x1464=(sj5*x1452);
IkReal x1465=(r01*x1460);
IkReal x1466=((1.0)*x1452);
IkReal x1467=((0.250000349687704)*x1453);
IkReal x1468=(cj5*x1452);
IkReal x1469=(cj4*x1453);
IkReal x1470=(x1453*x1460);
IkReal x1471=((0.433012903784321)*r12*x1453);
IkReal x1472=((0.749999650312296)*sj5*x1453);
IkReal x1473=((0.749999650312296)*cj5*x1453);
evalcond[0]=(((x1453*x1463))+((r21*x1452*x1459))+(((-1.0)*r21*x1473))+(((-1.0)*x1455*x1470))+(((-1.0)*r20*x1472))+((r21*sj5*x1470))+((r20*x1460*x1464))+(((-1.0)*x1463*x1469))+(((-1.0)*cj4*x1455*x1466))+((r22*x1452*x1462))+(((-1.0)*r21*x1456*x1467))+(((-1.0)*r20*x1459*x1467))+((r21*x1460*x1468)));
evalcond[1]=(((r10*x1460*x1464))+(((-1.0)*r10*x1456*x1466))+(((-1.0)*cj5*r10*x1470))+(((-1.0)*r10*x1459*x1467))+((r11*x1452*x1459))+((r11*sj5*x1470))+(((-1.0)*r10*x1472))+((r12*x1452*x1462))+(((-1.0)*r11*x1473))+(((-0.433012903784321)*r12*x1469))+x1471+(((-1.0)*r11*x1456*x1467))+((r11*x1460*x1468)));
evalcond[2]=(((r01*x1453*x1459))+(((0.749999650312296)*x1452*x1457))+((cj4*x1452*x1461))+(((0.250000349687704)*r01*x1452*x1456))+((r00*x1460*x1468))+((x1457*x1470))+(((0.250000349687704)*x1458*x1464))+(((-1.0)*x1464*x1465))+((x1454*x1464))+((r02*x1453*x1462))+(((-1.0)*r00*x1453*x1456))+(((-1.0)*x1452*x1461))+((r00*sj5*x1470)));
evalcond[3]=((1.0)+((x1453*x1461))+((r01*x1452*x1459))+(((-1.0)*sj5*x1453*x1454))+((r00*x1460*x1464))+(((-1.0)*r00*x1456*x1466))+(((-1.0)*cj5*r00*x1470))+(((-1.0)*sj5*x1458*x1467))+(((-0.749999650312296)*x1453*x1457))+((r02*x1452*x1462))+(((-1.0)*r01*x1456*x1467))+((sj5*x1453*x1465))+(((-1.0)*x1461*x1469))+((x1452*x1457*x1460)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1474=((0.528192360616262)*sj4);
IkReal x1475=((0.26409636501044)*cj4);
IkReal x1476=(r20*sj5);
IkReal x1477=((0.444735007694415)*cj5);
IkReal x1478=((0.457427895740576)*cj4);
IkReal x1479=(r10*sj5);
if( IKabs((((r12*x1478))+(((-1.0)*r11*sj5*x1474))+(((-1.0)*r11*x1477))+((cj5*r10*x1474))+((cj5*r11*x1475))+(((-0.444735007694415)*x1479))+(((0.204620884747229)*r12))+((x1475*x1479))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1477))+(((-1.0)*r21*sj5*x1474))+(((0.204620884747229)*r22))+((r22*x1478))+((cj5*r20*x1474))+((cj5*r21*x1475))+(((-0.444735007694415)*x1476))+((x1475*x1476))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1478))+(((-1.0)*r11*sj5*x1474))+(((-1.0)*r11*x1477))+((cj5*r10*x1474))+((cj5*r11*x1475))+(((-0.444735007694415)*x1479))+(((0.204620884747229)*r12))+((x1475*x1479))+(((2.4390243902439)*py))))+IKsqr(((((-1.0)*r21*x1477))+(((-1.0)*r21*sj5*x1474))+(((0.204620884747229)*r22))+((r22*x1478))+((cj5*r20*x1474))+((cj5*r21*x1475))+(((-0.444735007694415)*x1476))+((x1475*x1476))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1478))+(((-1.0)*r11*sj5*x1474))+(((-1.0)*r11*x1477))+((cj5*r10*x1474))+((cj5*r11*x1475))+(((-0.444735007694415)*x1479))+(((0.204620884747229)*r12))+((x1475*x1479))+(((2.4390243902439)*py))), ((((-1.0)*r21*x1477))+(((-1.0)*r21*sj5*x1474))+(((0.204620884747229)*r22))+((r22*x1478))+((cj5*r20*x1474))+((cj5*r21*x1475))+(((-0.444735007694415)*x1476))+((x1475*x1476))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1480=(cj5*sj4);
IkReal x1481=((0.135720094919197)*sj3);
IkReal x1482=(cj5*r11);
IkReal x1483=(cj5*r21);
IkReal x1484=((0.20357990508077)*sj3);
IkReal x1485=(r20*sj5);
IkReal x1486=((0.00925751294893567)*cj4);
IkReal x1487=(cj4*r10);
IkReal x1488=((0.27144)*cj3);
IkReal x1489=((0.10827950965428)*cj4);
IkReal x1490=((0.117537022603216)*sj3);
IkReal x1491=(cj4*r22);
IkReal x1492=(cj3*sj4);
IkReal x1493=(cj4*r12);
IkReal x1494=(r10*sj5);
IkReal x1495=(cj4*sj5);
IkReal x1496=((0.135720094919197)*cj3);
IkReal x1497=((0.41)*(IKcos(j1)));
IkReal x1498=((0.41)*(IKsin(j1)));
IkReal x1499=(r11*sj4*sj5);
IkReal x1500=((0.0678600949192303)*cj4*sj3);
IkReal x1501=(r21*sj4*sj5);
evalcond[0]=(((x1482*x1489))+(((-0.18234135315471)*x1494))+(((-1.0)*x1498))+(((-0.18234135315471)*x1482))+(((-0.216558867852667)*x1499))+(((0.216558867852667)*r10*x1480))+py+(((0.187545437253636)*x1493))+(((0.10827950965428)*sj5*x1487))+(((0.0838945627463637)*r12)));
evalcond[1]=((((-1.0)*x1497))+(((-0.18234135315471)*x1483))+(((-0.18234135315471)*x1485))+((x1483*x1489))+pz+((x1485*x1489))+(((0.187545437253636)*x1491))+(((-0.216558867852667)*x1501))+(((0.216558867852667)*r20*x1480))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.0678600949192303)*sj3*sj5*x1487))+(((-1.0)*cj5*x1487*x1488))+(((-1.0)*r12*x1490))+((r11*x1480*x1496))+((r10*x1480*x1481))+(((-0.0185150129489311)*r20*x1480))+((x1482*x1484))+(((-1.0)*x1497))+(((-1.0)*x1485*x1486))+(((-1.0)*x1481*x1499))+((r11*x1488*x1495))+(((-0.0160344678271334)*x1491))+(((0.135720094919197)*x1492*x1494))+((x1484*x1494))+(((0.0185150129489311)*x1501))+((x1482*x1500))+pz+(((-1.0)*x1483*x1486))+(((0.0160344678271334)*r22))+(((0.235073880801598)*r12*x1492))+(((-0.0648043305514941)*x1485))+(((-0.0648043305514941)*x1483))+((x1490*x1493)));
evalcond[3]=((((0.235073880801598)*r22*x1492))+(((-1.0)*x1481*x1501))+(((0.0648043305514941)*x1494))+(((0.135720094919197)*x1485*x1492))+((x1482*x1486))+(((0.0648043305514941)*x1482))+(((-0.0160344678271334)*r12))+(((-0.0185150129489311)*x1499))+((x1486*x1494))+(((0.0185150129489311)*r10*x1480))+(((-1.0)*py))+((x1483*x1484))+((r21*x1480*x1496))+((r20*x1480*x1481))+((x1484*x1485))+x1498+((x1485*x1500))+(((-1.0)*r22*x1490))+((x1490*x1491))+(((0.0160344678271334)*x1493))+((r21*x1488*x1495))+((x1483*x1500))+(((-1.0)*cj4*cj5*r20*x1488)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1502=((0.250000349687704)*r12);
IkReal x1503=((0.749999650312296)*cj4);
IkReal x1504=(cj1*r22);
IkReal x1505=((0.866025201892125)*sj4);
IkReal x1506=(cj1*r20);
IkReal x1507=(sj1*sj5);
IkReal x1508=((0.433012903784321)*r20);
IkReal x1509=((0.433012903784321)*sj5);
IkReal x1510=(cj1*r10);
IkReal x1511=(r22*sj1);
IkReal x1512=((0.433012903784321)*r10);
IkReal x1513=((0.433012903784321)*cj5);
IkReal x1514=(cj1*r21);
IkReal x1515=(cj1*r11);
IkReal x1516=(r11*sj1);
IkReal x1517=(cj1*cj4*x1509);
IkReal x1518=(cj5*sj1*x1505);
IkReal x1519=(cj4*r21*x1513);
if( IKabs((((x1513*x1515))+((x1509*x1510))+(((-1.0)*cj1*r12*x1503))+(((-1.0)*cj1*x1502))+(((-1.0)*x1507*x1508))+((r20*x1518))+(((-1.0)*cj5*x1505*x1510))+((sj1*x1519))+((cj4*x1507*x1508))+((x1503*x1511))+(((-1.0)*r21*x1505*x1507))+((sj5*x1505*x1515))+(((-1.0)*cj4*x1509*x1510))+(((-1.0)*cj4*x1513*x1515))+(((-1.0)*r21*sj1*x1513))+(((0.250000349687704)*x1511)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x1504))+(((-1.0)*x1513*x1514))+(((-1.0)*x1513*x1516))+(((-1.0)*x1507*x1512))+((cj4*x1513*x1516))+((cj4*x1513*x1514))+(((-1.0)*x1506*x1509))+((r10*x1518))+((sj1*x1502))+((r12*sj1*x1503))+(((-1.0)*sj5*x1505*x1514))+((cj5*x1505*x1506))+((cj4*x1507*x1512))+(((-1.0)*r11*x1505*x1507))+((x1503*x1504))+((cj4*x1506*x1509)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1513*x1515))+((x1509*x1510))+(((-1.0)*cj1*r12*x1503))+(((-1.0)*cj1*x1502))+(((-1.0)*x1507*x1508))+((r20*x1518))+(((-1.0)*cj5*x1505*x1510))+((sj1*x1519))+((cj4*x1507*x1508))+((x1503*x1511))+(((-1.0)*r21*x1505*x1507))+((sj5*x1505*x1515))+(((-1.0)*cj4*x1509*x1510))+(((-1.0)*cj4*x1513*x1515))+(((-1.0)*r21*sj1*x1513))+(((0.250000349687704)*x1511))))+IKsqr(((((0.250000349687704)*x1504))+(((-1.0)*x1513*x1514))+(((-1.0)*x1513*x1516))+(((-1.0)*x1507*x1512))+((cj4*x1513*x1516))+((cj4*x1513*x1514))+(((-1.0)*x1506*x1509))+((r10*x1518))+((sj1*x1502))+((r12*sj1*x1503))+(((-1.0)*sj5*x1505*x1514))+((cj5*x1505*x1506))+((cj4*x1507*x1512))+(((-1.0)*r11*x1505*x1507))+((x1503*x1504))+((cj4*x1506*x1509))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1513*x1515))+((x1509*x1510))+(((-1.0)*cj1*r12*x1503))+(((-1.0)*cj1*x1502))+(((-1.0)*x1507*x1508))+((r20*x1518))+(((-1.0)*cj5*x1505*x1510))+((sj1*x1519))+((cj4*x1507*x1508))+((x1503*x1511))+(((-1.0)*r21*x1505*x1507))+((sj5*x1505*x1515))+(((-1.0)*cj4*x1509*x1510))+(((-1.0)*cj4*x1513*x1515))+(((-1.0)*r21*sj1*x1513))+(((0.250000349687704)*x1511))), ((((0.250000349687704)*x1504))+(((-1.0)*x1513*x1514))+(((-1.0)*x1513*x1516))+(((-1.0)*x1507*x1512))+((cj4*x1513*x1516))+((cj4*x1513*x1514))+(((-1.0)*x1506*x1509))+((r10*x1518))+((sj1*x1502))+((r12*sj1*x1503))+(((-1.0)*sj5*x1505*x1514))+((cj5*x1505*x1506))+((cj4*x1507*x1512))+(((-1.0)*r11*x1505*x1507))+((x1503*x1504))+((cj4*x1506*x1509))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1520=IKcos(j2);
IkReal x1521=IKsin(j2);
IkReal x1522=(cj5*r11);
IkReal x1523=((0.433012903784321)*cj4);
IkReal x1524=(r21*sj5);
IkReal x1525=((0.500000349687582)*sj4);
IkReal x1526=((0.749999650312296)*sj3);
IkReal x1527=(cj3*cj4);
IkReal x1528=(cj5*r10);
IkReal x1529=((0.0185150129489311)*sj4);
IkReal x1530=(r20*sj5);
IkReal x1531=(cj4*r22);
IkReal x1532=(r10*sj5);
IkReal x1533=(r12*sj3);
IkReal x1534=(r11*sj5);
IkReal x1535=(r22*sj3);
IkReal x1536=((0.27144)*sj1);
IkReal x1537=((0.00925751294893567)*cj4);
IkReal x1538=(cj5*r20);
IkReal x1539=(cj5*r21);
IkReal x1540=(cj4*r12);
IkReal x1541=((0.866025201892125)*sj4);
IkReal x1542=(sj1*x1520);
IkReal x1543=(cj1*x1520);
IkReal x1544=(cj1*x1521);
IkReal x1545=((0.250000349687704)*cj4*sj3);
IkReal x1546=(cj3*x1541);
IkReal x1547=(sj1*x1521);
IkReal x1548=((1.0)*x1544);
evalcond[0]=((((-0.749999650312296)*x1531))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1530))+(((0.433012903784321)*x1539))+((x1524*x1541))+x1547+x1543+(((-1.0)*x1523*x1530))+(((-1.0)*x1523*x1539))+(((-1.0)*x1538*x1541)));
evalcond[1]=((((0.433012903784321)*x1522))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1540))+(((0.433012903784321)*x1532))+((x1534*x1541))+x1542+(((-1.0)*x1522*x1523))+(((-1.0)*x1548))+(((-1.0)*x1523*x1532))+(((-1.0)*x1528*x1541)));
evalcond[2]=((((-1.0)*x1521*x1536))+(((-1.0)*x1524*x1529))+(((0.41)*cj1))+((x1530*x1537))+(((-0.0160344678271334)*r22))+((x1537*x1539))+(((-1.0)*pz))+(((-0.27144)*x1543))+((x1529*x1538))+(((0.0160344678271334)*x1531))+(((0.0648043305514941)*x1539))+(((0.0648043305514941)*x1530)));
evalcond[3]=((((-1.0)*x1529*x1534))+((x1528*x1529))+(((0.0160344678271334)*x1540))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x1522*x1537))+((x1532*x1537))+(((-1.0)*py))+(((0.27144)*x1544))+(((0.0648043305514941)*x1522))+(((0.0648043305514941)*x1532))+(((-1.0)*x1520*x1536)));
evalcond[4]=(((x1524*x1527))+((x1530*x1545))+((x1539*x1545))+((x1523*x1535))+(((-1.0)*sj3*x1524*x1525))+x1542+(((-0.433012903784321)*x1535))+((x1526*x1539))+((x1526*x1530))+((cj3*x1525*x1530))+((cj3*x1525*x1539))+(((-1.0)*x1527*x1538))+((r22*x1546))+(((-1.0)*x1548))+((sj3*x1525*x1538)));
evalcond[5]=(((sj3*x1525*x1528))+(((-1.0)*x1543))+(((-1.0)*x1547))+((x1532*x1545))+((x1522*x1526))+((x1523*x1533))+((cj3*x1522*x1525))+((r12*x1546))+(((-1.0)*sj3*x1525*x1534))+((x1527*x1534))+(((-0.433012903784321)*x1533))+((x1526*x1532))+((cj3*x1525*x1532))+(((-1.0)*x1527*x1528))+((x1522*x1545)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1549=(cj4*cj5);
IkReal x1550=((0.866025201892125)*sj4);
IkReal x1551=(r11*sj5);
IkReal x1552=((0.500000349687582)*sj4);
IkReal x1553=(r10*sj5);
IkReal x1554=((0.433012903784321)*r12);
IkReal x1555=((0.433012903784321)*sj5);
IkReal x1556=(cj5*r11);
CheckValue<IkReal> x1557 = IKatan2WithCheck(IkReal((((x1551*x1552))+(((-0.250000349687704)*cj4*x1553))+(((-0.749999650312296)*x1556))+(((-0.749999650312296)*x1553))+(((-1.0)*cj4*x1554))+(((-0.250000349687704)*r11*x1549))+x1554+(((-1.0)*cj5*r10*x1552)))),IkReal(((((-1.0)*x1552*x1553))+(((-1.0)*x1552*x1556))+(((-1.0)*r12*x1550))+(((-1.0)*cj4*x1551))+((r10*x1549)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1557.valid){
continue;
}
CheckValue<IkReal> x1558=IKPowWithIntegerCheck(IKsign((((r21*(((((0.433012903784321)*cj5))+(((-0.433012903784321)*x1549))+((sj5*x1550))))))+((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r20*(((((-1.0)*cj5*x1550))+(((-1.0)*cj4*x1555))+x1555)))))),-1);
if(!x1558.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1557.value)+(((1.5707963267949)*(x1558.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1559=IKsin(j3);
IkReal x1560=IKcos(j3);
IkReal x1561=((0.749999650312296)*r00);
IkReal x1562=(cj5*r20);
IkReal x1563=(cj4*cj5);
IkReal x1564=(cj5*r01);
IkReal x1565=(cj4*r00);
IkReal x1566=(cj4*sj5);
IkReal x1567=((0.500000349687582)*sj4);
IkReal x1568=((0.433012903784321)*r02);
IkReal x1569=((0.866025201892125)*sj4);
IkReal x1570=((0.433012903784321)*r22);
IkReal x1571=(sj5*x1559);
IkReal x1572=(r01*x1567);
IkReal x1573=((1.0)*x1559);
IkReal x1574=((0.250000349687704)*x1560);
IkReal x1575=(cj5*x1559);
IkReal x1576=(cj4*x1560);
IkReal x1577=(x1560*x1567);
IkReal x1578=((0.433012903784321)*r12*x1560);
IkReal x1579=((0.749999650312296)*sj5*x1560);
IkReal x1580=((0.749999650312296)*cj5*x1560);
evalcond[0]=(((r21*sj5*x1577))+(((-1.0)*r21*x1563*x1574))+(((-1.0)*x1570*x1576))+((r21*x1559*x1566))+(((-1.0)*x1562*x1577))+(((-1.0)*cj4*x1562*x1573))+(((-1.0)*r20*x1579))+(((-1.0)*r20*x1566*x1574))+((r20*x1567*x1571))+(((-1.0)*r21*x1580))+((r22*x1559*x1569))+((r21*x1567*x1575))+((x1560*x1570)));
evalcond[1]=((((-1.0)*r11*x1580))+(((-1.0)*cj5*r10*x1577))+((r11*x1567*x1575))+((r12*x1559*x1569))+(((-1.0)*r11*x1563*x1574))+x1578+((r11*sj5*x1577))+(((-1.0)*r10*x1566*x1574))+(((-1.0)*r10*x1579))+(((-1.0)*r10*x1563*x1573))+((r11*x1559*x1566))+(((-0.433012903784321)*r12*x1576))+((r10*x1567*x1571)));
evalcond[2]=((((0.250000349687704)*x1565*x1571))+(((-1.0)*x1559*x1568))+(((-1.0)*x1571*x1572))+(((0.749999650312296)*x1559*x1564))+(((-1.0)*r00*x1560*x1563))+((cj4*x1559*x1568))+((r02*x1560*x1569))+((x1561*x1571))+((r01*x1560*x1566))+((r00*sj5*x1577))+((r00*x1567*x1575))+((x1564*x1577))+(((0.250000349687704)*r01*x1559*x1563)));
evalcond[3]=((1.0)+((x1560*x1568))+((x1559*x1564*x1567))+(((-1.0)*r01*x1563*x1574))+(((-1.0)*r00*x1563*x1573))+(((-0.749999650312296)*x1560*x1564))+(((-1.0)*x1568*x1576))+((sj5*x1560*x1572))+(((-1.0)*sj5*x1565*x1574))+((r01*x1559*x1566))+(((-1.0)*sj5*x1560*x1561))+(((-1.0)*cj5*r00*x1577))+((r00*x1567*x1571))+((r02*x1559*x1569)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1581=((0.528192360616262)*sj4);
IkReal x1582=((0.26409636501044)*cj4);
IkReal x1583=(r20*sj5);
IkReal x1584=((0.444735007694415)*cj5);
IkReal x1585=((0.457427895740576)*cj4);
IkReal x1586=(r10*sj5);
if( IKabs(((((-1.0)*r11*x1584))+((cj5*r10*x1581))+((cj5*r11*x1582))+((r12*x1585))+((x1582*x1586))+(((-1.0)*r11*sj5*x1581))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1586)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x1581))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1581))+((x1582*x1583))+((cj5*r21*x1582))+((r22*x1585))+(((-1.0)*r21*x1584))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1583)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x1584))+((cj5*r10*x1581))+((cj5*r11*x1582))+((r12*x1585))+((x1582*x1586))+(((-1.0)*r11*sj5*x1581))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1586))))+IKsqr((((cj5*r20*x1581))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1581))+((x1582*x1583))+((cj5*r21*x1582))+((r22*x1585))+(((-1.0)*r21*x1584))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1583))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*x1584))+((cj5*r10*x1581))+((cj5*r11*x1582))+((r12*x1585))+((x1582*x1586))+(((-1.0)*r11*sj5*x1581))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1586))), (((cj5*r20*x1581))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1581))+((x1582*x1583))+((cj5*r21*x1582))+((r22*x1585))+(((-1.0)*r21*x1584))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1583))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1587=(cj5*sj4);
IkReal x1588=((0.135720094919197)*sj3);
IkReal x1589=(cj5*r11);
IkReal x1590=(cj5*r21);
IkReal x1591=((0.20357990508077)*sj3);
IkReal x1592=(r20*sj5);
IkReal x1593=((0.00925751294893567)*cj4);
IkReal x1594=(cj4*r10);
IkReal x1595=((0.27144)*cj3);
IkReal x1596=((0.10827950965428)*cj4);
IkReal x1597=((0.117537022603216)*sj3);
IkReal x1598=(cj4*r22);
IkReal x1599=(cj3*sj4);
IkReal x1600=(cj4*r12);
IkReal x1601=(r10*sj5);
IkReal x1602=(cj4*sj5);
IkReal x1603=((0.135720094919197)*cj3);
IkReal x1604=((0.41)*(IKcos(j1)));
IkReal x1605=((0.41)*(IKsin(j1)));
IkReal x1606=(r11*sj4*sj5);
IkReal x1607=((0.0678600949192303)*cj4*sj3);
IkReal x1608=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x1589))+(((-1.0)*x1605))+((x1589*x1596))+py+(((0.216558867852667)*r10*x1587))+(((0.10827950965428)*sj5*x1594))+(((0.187545437253636)*x1600))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1601))+(((-0.216558867852667)*x1606)));
evalcond[1]=((((-0.18234135315471)*x1590))+(((-0.18234135315471)*x1592))+((x1590*x1596))+(((-1.0)*x1604))+((x1592*x1596))+(((0.187545437253636)*x1598))+pz+(((-0.216558867852667)*x1608))+(((0.0838945627463637)*r22))+(((0.216558867852667)*r20*x1587)));
evalcond[2]=((((-1.0)*x1588*x1606))+((x1589*x1607))+((r11*x1587*x1603))+(((-1.0)*x1592*x1593))+((x1591*x1601))+(((-0.0160344678271334)*x1598))+(((-1.0)*x1604))+((x1589*x1591))+(((-0.0185150129489311)*r20*x1587))+((r10*x1587*x1588))+(((0.0185150129489311)*x1608))+((r11*x1595*x1602))+(((0.235073880801598)*r12*x1599))+pz+(((-0.0648043305514941)*x1590))+(((-0.0648043305514941)*x1592))+(((0.0160344678271334)*r22))+(((-1.0)*x1590*x1593))+(((0.0678600949192303)*sj3*sj5*x1594))+(((0.135720094919197)*x1599*x1601))+(((-1.0)*cj5*x1594*x1595))+(((-1.0)*r12*x1597))+((x1597*x1600)));
evalcond[3]=((((-1.0)*x1588*x1608))+((x1590*x1591))+(((-0.0185150129489311)*x1606))+(((0.235073880801598)*r22*x1599))+(((0.0648043305514941)*x1601))+x1605+((x1589*x1593))+(((-0.0160344678271334)*r12))+((r21*x1595*x1602))+(((0.0185150129489311)*r10*x1587))+(((-1.0)*cj4*cj5*r20*x1595))+(((0.135720094919197)*x1592*x1599))+(((-1.0)*py))+((x1591*x1592))+((x1590*x1607))+((x1592*x1607))+(((-1.0)*r22*x1597))+((x1593*x1601))+(((0.0160344678271334)*x1600))+((r21*x1587*x1603))+((x1597*x1598))+((r20*x1587*x1588))+(((0.0648043305514941)*x1589)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1609=((0.250000349687704)*r12);
IkReal x1610=((0.749999650312296)*cj4);
IkReal x1611=(cj1*r22);
IkReal x1612=((0.866025201892125)*sj4);
IkReal x1613=(cj1*r20);
IkReal x1614=(sj1*sj5);
IkReal x1615=((0.433012903784321)*r20);
IkReal x1616=((0.433012903784321)*sj5);
IkReal x1617=(cj1*r10);
IkReal x1618=(r22*sj1);
IkReal x1619=((0.433012903784321)*r10);
IkReal x1620=((0.433012903784321)*cj5);
IkReal x1621=(cj1*r21);
IkReal x1622=(cj1*r11);
IkReal x1623=(r11*sj1);
IkReal x1624=(cj1*cj4*x1616);
IkReal x1625=(cj5*sj1*x1612);
IkReal x1626=(cj4*r21*x1620);
if( IKabs(((((-1.0)*cj5*x1612*x1617))+((x1620*x1622))+(((-1.0)*cj1*x1609))+(((-1.0)*cj1*r12*x1610))+((r20*x1625))+(((-1.0)*cj4*x1616*x1617))+(((-1.0)*cj4*x1620*x1622))+(((-1.0)*r21*x1612*x1614))+((sj1*x1626))+((sj5*x1612*x1622))+(((-1.0)*r21*sj1*x1620))+(((0.250000349687704)*x1618))+(((-1.0)*x1614*x1615))+((x1616*x1617))+((cj4*x1614*x1615))+((x1610*x1618)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x1613*x1616))+(((-1.0)*sj5*x1612*x1621))+((cj5*x1612*x1613))+((sj1*x1609))+(((0.250000349687704)*x1611))+((cj4*x1620*x1621))+((cj4*x1620*x1623))+(((-1.0)*x1620*x1621))+(((-1.0)*x1620*x1623))+(((-1.0)*x1614*x1619))+((r10*x1625))+((cj4*x1614*x1619))+(((-1.0)*x1613*x1616))+((x1610*x1611))+(((-1.0)*r11*x1612*x1614))+((r12*sj1*x1610)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj5*x1612*x1617))+((x1620*x1622))+(((-1.0)*cj1*x1609))+(((-1.0)*cj1*r12*x1610))+((r20*x1625))+(((-1.0)*cj4*x1616*x1617))+(((-1.0)*cj4*x1620*x1622))+(((-1.0)*r21*x1612*x1614))+((sj1*x1626))+((sj5*x1612*x1622))+(((-1.0)*r21*sj1*x1620))+(((0.250000349687704)*x1618))+(((-1.0)*x1614*x1615))+((x1616*x1617))+((cj4*x1614*x1615))+((x1610*x1618))))+IKsqr((((cj4*x1613*x1616))+(((-1.0)*sj5*x1612*x1621))+((cj5*x1612*x1613))+((sj1*x1609))+(((0.250000349687704)*x1611))+((cj4*x1620*x1621))+((cj4*x1620*x1623))+(((-1.0)*x1620*x1621))+(((-1.0)*x1620*x1623))+(((-1.0)*x1614*x1619))+((r10*x1625))+((cj4*x1614*x1619))+(((-1.0)*x1613*x1616))+((x1610*x1611))+(((-1.0)*r11*x1612*x1614))+((r12*sj1*x1610))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj5*x1612*x1617))+((x1620*x1622))+(((-1.0)*cj1*x1609))+(((-1.0)*cj1*r12*x1610))+((r20*x1625))+(((-1.0)*cj4*x1616*x1617))+(((-1.0)*cj4*x1620*x1622))+(((-1.0)*r21*x1612*x1614))+((sj1*x1626))+((sj5*x1612*x1622))+(((-1.0)*r21*sj1*x1620))+(((0.250000349687704)*x1618))+(((-1.0)*x1614*x1615))+((x1616*x1617))+((cj4*x1614*x1615))+((x1610*x1618))), (((cj4*x1613*x1616))+(((-1.0)*sj5*x1612*x1621))+((cj5*x1612*x1613))+((sj1*x1609))+(((0.250000349687704)*x1611))+((cj4*x1620*x1621))+((cj4*x1620*x1623))+(((-1.0)*x1620*x1621))+(((-1.0)*x1620*x1623))+(((-1.0)*x1614*x1619))+((r10*x1625))+((cj4*x1614*x1619))+(((-1.0)*x1613*x1616))+((x1610*x1611))+(((-1.0)*r11*x1612*x1614))+((r12*sj1*x1610))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1627=IKcos(j2);
IkReal x1628=IKsin(j2);
IkReal x1629=(cj5*r11);
IkReal x1630=((0.433012903784321)*cj4);
IkReal x1631=(r21*sj5);
IkReal x1632=((0.500000349687582)*sj4);
IkReal x1633=((0.749999650312296)*sj3);
IkReal x1634=(cj3*cj4);
IkReal x1635=(cj5*r10);
IkReal x1636=((0.0185150129489311)*sj4);
IkReal x1637=(r20*sj5);
IkReal x1638=(cj4*r22);
IkReal x1639=(r10*sj5);
IkReal x1640=(r12*sj3);
IkReal x1641=(r11*sj5);
IkReal x1642=(r22*sj3);
IkReal x1643=((0.27144)*sj1);
IkReal x1644=((0.00925751294893567)*cj4);
IkReal x1645=(cj5*r20);
IkReal x1646=(cj5*r21);
IkReal x1647=(cj4*r12);
IkReal x1648=((0.866025201892125)*sj4);
IkReal x1649=(sj1*x1627);
IkReal x1650=(cj1*x1627);
IkReal x1651=(cj1*x1628);
IkReal x1652=((0.250000349687704)*cj4*sj3);
IkReal x1653=(cj3*x1648);
IkReal x1654=(sj1*x1628);
IkReal x1655=((1.0)*x1651);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x1638))+x1650+x1654+(((-1.0)*x1645*x1648))+(((0.433012903784321)*x1646))+(((0.433012903784321)*x1637))+(((-1.0)*x1630*x1646))+(((-1.0)*x1630*x1637))+((x1631*x1648)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x1635*x1648))+(((-0.749999650312296)*x1647))+x1649+((x1641*x1648))+(((0.433012903784321)*x1639))+(((-1.0)*x1655))+(((-1.0)*x1629*x1630))+(((-1.0)*x1630*x1639))+(((0.433012903784321)*x1629)));
evalcond[2]=((((0.0160344678271334)*x1638))+((x1636*x1645))+((x1637*x1644))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x1644*x1646))+(((-1.0)*pz))+(((-0.27144)*x1650))+(((-1.0)*x1628*x1643))+(((-1.0)*x1631*x1636))+(((0.0648043305514941)*x1646))+(((0.0648043305514941)*x1637)));
evalcond[3]=((((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0648043305514941)*x1629))+((x1629*x1644))+(((-1.0)*py))+(((0.27144)*x1651))+((x1635*x1636))+((x1639*x1644))+(((-1.0)*x1636*x1641))+(((-1.0)*x1627*x1643))+(((0.0160344678271334)*x1647))+(((0.0648043305514941)*x1639)));
evalcond[4]=(((r22*x1653))+(((-1.0)*sj3*x1631*x1632))+x1649+((sj3*x1632*x1645))+((x1646*x1652))+(((-1.0)*x1634*x1645))+(((-0.433012903784321)*x1642))+(((-1.0)*x1655))+((cj3*x1632*x1637))+((cj3*x1632*x1646))+((x1633*x1646))+((x1633*x1637))+((x1631*x1634))+((x1630*x1642))+((x1637*x1652)));
evalcond[5]=(((r12*x1653))+((sj3*x1632*x1635))+(((-1.0)*sj3*x1632*x1641))+(((-1.0)*x1634*x1635))+((x1629*x1633))+(((-1.0)*x1650))+(((-1.0)*x1654))+((cj3*x1629*x1632))+((x1629*x1652))+(((-0.433012903784321)*x1640))+((x1639*x1652))+((cj3*x1632*x1639))+((x1633*x1639))+((x1634*x1641))+((x1630*x1640)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1656=((0.433012903784321)*cj5);
IkReal x1657=((0.866025201892125)*sj4);
IkReal x1658=((0.433012903784321)*r22);
IkReal x1659=(cj4*sj5);
IkReal x1660=(cj5*r21);
IkReal x1661=(r20*sj5);
IkReal x1662=((0.500000349687582)*sj4);
IkReal x1663=(cj5*x1662);
CheckValue<IkReal> x1664=IKPowWithIntegerCheck(IKsign((((r12*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r10*((((cj5*x1657))+(((-0.433012903784321)*sj5))+(((0.433012903784321)*x1659))))))+((r11*(((((-1.0)*sj5*x1657))+((cj4*x1656))+(((-1.0)*x1656)))))))),-1);
if(!x1664.valid){
continue;
}
CheckValue<IkReal> x1665 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x1658))+(((-0.250000349687704)*cj4*x1660))+x1658+(((-0.749999650312296)*x1660))+(((-0.749999650312296)*x1661))+(((-1.0)*r20*x1663))+((r21*sj5*x1662))+(((-0.250000349687704)*r20*x1659)))),IkReal(((((-1.0)*r21*x1659))+(((-1.0)*x1661*x1662))+(((-1.0)*r22*x1657))+((cj4*cj5*r20))+(((-1.0)*x1660*x1662)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1665.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1664.value)))+(x1665.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1666=IKsin(j3);
IkReal x1667=IKcos(j3);
IkReal x1668=((0.749999650312296)*r00);
IkReal x1669=(cj5*r20);
IkReal x1670=(cj4*cj5);
IkReal x1671=(cj5*r01);
IkReal x1672=(cj4*r00);
IkReal x1673=(cj4*sj5);
IkReal x1674=((0.500000349687582)*sj4);
IkReal x1675=((0.433012903784321)*r02);
IkReal x1676=((0.866025201892125)*sj4);
IkReal x1677=((0.433012903784321)*r22);
IkReal x1678=(sj5*x1666);
IkReal x1679=(r01*x1674);
IkReal x1680=((1.0)*x1666);
IkReal x1681=((0.250000349687704)*x1667);
IkReal x1682=(cj5*x1666);
IkReal x1683=(cj4*x1667);
IkReal x1684=(x1667*x1674);
IkReal x1685=((0.433012903784321)*r12*x1667);
IkReal x1686=((0.749999650312296)*sj5*x1667);
IkReal x1687=((0.749999650312296)*cj5*x1667);
evalcond[0]=((((-1.0)*x1677*x1683))+((r22*x1666*x1676))+(((-1.0)*r20*x1686))+((r21*x1674*x1682))+((x1667*x1677))+(((-1.0)*cj4*x1669*x1680))+(((-1.0)*r21*x1687))+((r20*x1674*x1678))+(((-1.0)*r21*x1670*x1681))+((r21*x1666*x1673))+((r21*sj5*x1684))+(((-1.0)*x1669*x1684))+(((-1.0)*r20*x1673*x1681)));
evalcond[1]=((((-1.0)*r10*x1673*x1681))+(((-1.0)*r11*x1687))+((r10*x1674*x1678))+((r11*sj5*x1684))+(((-1.0)*r10*x1686))+x1685+((r11*x1666*x1673))+(((-1.0)*r10*x1670*x1680))+((r12*x1666*x1676))+(((-1.0)*r11*x1670*x1681))+(((-0.433012903784321)*r12*x1683))+(((-1.0)*cj5*r10*x1684))+((r11*x1674*x1682)));
evalcond[2]=(((r00*sj5*x1684))+((cj4*x1666*x1675))+(((-1.0)*x1678*x1679))+((r02*x1667*x1676))+(((-1.0)*r00*x1667*x1670))+((x1671*x1684))+(((0.749999650312296)*x1666*x1671))+(((0.250000349687704)*x1672*x1678))+((x1668*x1678))+((r01*x1667*x1673))+(((-1.0)*x1666*x1675))+(((0.250000349687704)*r01*x1666*x1670))+((r00*x1674*x1682)));
evalcond[3]=((1.0)+((sj5*x1667*x1679))+(((-1.0)*x1675*x1683))+(((-1.0)*sj5*x1672*x1681))+(((-1.0)*cj5*r00*x1684))+(((-0.749999650312296)*x1667*x1671))+((x1667*x1675))+(((-1.0)*r00*x1670*x1680))+((r02*x1666*x1676))+(((-1.0)*r01*x1670*x1681))+(((-1.0)*sj5*x1667*x1668))+((r00*x1674*x1678))+((x1666*x1671*x1674))+((r01*x1666*x1673)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1688=((0.528192360616262)*sj4);
IkReal x1689=((0.26409636501044)*cj4);
IkReal x1690=(r20*sj5);
IkReal x1691=((0.444735007694415)*cj5);
IkReal x1692=((0.457427895740576)*cj4);
IkReal x1693=(r10*sj5);
if( IKabs((((r12*x1692))+((cj5*r10*x1688))+(((-1.0)*r11*sj5*x1688))+(((-0.444735007694415)*x1693))+(((-1.0)*r11*x1691))+((x1689*x1693))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((cj5*r11*x1689)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1691))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1690))+((cj5*r21*x1689))+((r22*x1692))+((x1689*x1690))+((cj5*r20*x1688))+(((-1.0)*r21*sj5*x1688))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1692))+((cj5*r10*x1688))+(((-1.0)*r11*sj5*x1688))+(((-0.444735007694415)*x1693))+(((-1.0)*r11*x1691))+((x1689*x1693))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((cj5*r11*x1689))))+IKsqr(((((-1.0)*r21*x1691))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1690))+((cj5*r21*x1689))+((r22*x1692))+((x1689*x1690))+((cj5*r20*x1688))+(((-1.0)*r21*sj5*x1688))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1692))+((cj5*r10*x1688))+(((-1.0)*r11*sj5*x1688))+(((-0.444735007694415)*x1693))+(((-1.0)*r11*x1691))+((x1689*x1693))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((cj5*r11*x1689))), ((((-1.0)*r21*x1691))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1690))+((cj5*r21*x1689))+((r22*x1692))+((x1689*x1690))+((cj5*r20*x1688))+(((-1.0)*r21*sj5*x1688))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1694=(cj5*sj4);
IkReal x1695=((0.135720094919197)*sj3);
IkReal x1696=(cj5*r11);
IkReal x1697=(cj5*r21);
IkReal x1698=((0.20357990508077)*sj3);
IkReal x1699=(r20*sj5);
IkReal x1700=((0.00925751294893567)*cj4);
IkReal x1701=(cj4*r10);
IkReal x1702=((0.27144)*cj3);
IkReal x1703=((0.10827950965428)*cj4);
IkReal x1704=((0.117537022603216)*sj3);
IkReal x1705=(cj4*r22);
IkReal x1706=(cj3*sj4);
IkReal x1707=(cj4*r12);
IkReal x1708=(r10*sj5);
IkReal x1709=(cj4*sj5);
IkReal x1710=((0.135720094919197)*cj3);
IkReal x1711=((0.41)*(IKcos(j1)));
IkReal x1712=((0.41)*(IKsin(j1)));
IkReal x1713=(r11*sj4*sj5);
IkReal x1714=((0.0678600949192303)*cj4*sj3);
IkReal x1715=(r21*sj4*sj5);
evalcond[0]=((((-0.216558867852667)*x1713))+((x1696*x1703))+(((-1.0)*x1712))+(((-0.18234135315471)*x1696))+(((0.216558867852667)*r10*x1694))+(((0.10827950965428)*sj5*x1701))+py+(((0.187545437253636)*x1707))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1708)));
evalcond[1]=((((-0.216558867852667)*x1715))+((x1697*x1703))+(((-1.0)*x1711))+(((-0.18234135315471)*x1697))+(((-0.18234135315471)*x1699))+(((0.216558867852667)*r20*x1694))+pz+(((0.187545437253636)*x1705))+(((0.0838945627463637)*r22))+((x1699*x1703)));
evalcond[2]=((((-0.0160344678271334)*x1705))+(((0.0185150129489311)*x1715))+(((-0.0185150129489311)*r20*x1694))+(((0.235073880801598)*r12*x1706))+(((0.0678600949192303)*sj3*sj5*x1701))+((r11*x1694*x1710))+((x1696*x1714))+(((-1.0)*x1699*x1700))+(((-1.0)*x1711))+(((-1.0)*cj5*x1701*x1702))+((r11*x1702*x1709))+((x1704*x1707))+pz+(((-0.0648043305514941)*x1697))+(((-0.0648043305514941)*x1699))+(((0.0160344678271334)*r22))+((r10*x1694*x1695))+((x1696*x1698))+(((-1.0)*x1695*x1713))+(((0.135720094919197)*x1706*x1708))+(((-1.0)*x1697*x1700))+(((-1.0)*r12*x1704))+((x1698*x1708)));
evalcond[3]=(((x1699*x1714))+(((0.135720094919197)*x1699*x1706))+((x1696*x1700))+((r21*x1702*x1709))+x1712+((x1697*x1714))+(((-0.0160344678271334)*r12))+((r20*x1694*x1695))+(((0.235073880801598)*r22*x1706))+((x1700*x1708))+((x1704*x1705))+(((-1.0)*py))+(((0.0648043305514941)*x1708))+(((-0.0185150129489311)*x1713))+(((-1.0)*cj4*cj5*r20*x1702))+(((0.0648043305514941)*x1696))+(((0.0185150129489311)*r10*x1694))+((x1697*x1698))+(((-1.0)*r22*x1704))+(((-1.0)*x1695*x1715))+(((0.0160344678271334)*x1707))+((x1698*x1699))+((r21*x1694*x1710)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1716=((0.250000349687704)*r12);
IkReal x1717=((0.749999650312296)*cj4);
IkReal x1718=(cj1*r22);
IkReal x1719=((0.866025201892125)*sj4);
IkReal x1720=(cj1*r20);
IkReal x1721=(sj1*sj5);
IkReal x1722=((0.433012903784321)*r20);
IkReal x1723=((0.433012903784321)*sj5);
IkReal x1724=(cj1*r10);
IkReal x1725=(r22*sj1);
IkReal x1726=((0.433012903784321)*r10);
IkReal x1727=((0.433012903784321)*cj5);
IkReal x1728=(cj1*r21);
IkReal x1729=(cj1*r11);
IkReal x1730=(r11*sj1);
IkReal x1731=(cj1*cj4*x1723);
IkReal x1732=(cj5*sj1*x1719);
IkReal x1733=(cj4*r21*x1727);
if( IKabs(((((-1.0)*r21*x1719*x1721))+(((-1.0)*cj5*x1719*x1724))+((x1723*x1724))+(((-1.0)*cj4*x1723*x1724))+(((-1.0)*cj1*x1716))+((sj5*x1719*x1729))+((sj1*x1733))+((x1717*x1725))+(((-1.0)*cj4*x1727*x1729))+((cj4*x1721*x1722))+(((0.250000349687704)*x1725))+((x1727*x1729))+(((-1.0)*r21*sj1*x1727))+(((-1.0)*cj1*r12*x1717))+((r20*x1732))+(((-1.0)*x1721*x1722)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x1718))+((r10*x1732))+((cj4*x1727*x1728))+((cj4*x1727*x1730))+(((-1.0)*x1720*x1723))+(((-1.0)*sj5*x1719*x1728))+((cj4*x1721*x1726))+(((-1.0)*r11*x1719*x1721))+((cj4*x1720*x1723))+(((-1.0)*x1727*x1730))+(((-1.0)*x1727*x1728))+(((-1.0)*x1721*x1726))+((sj1*x1716))+((r12*sj1*x1717))+((cj5*x1719*x1720))+((x1717*x1718)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x1719*x1721))+(((-1.0)*cj5*x1719*x1724))+((x1723*x1724))+(((-1.0)*cj4*x1723*x1724))+(((-1.0)*cj1*x1716))+((sj5*x1719*x1729))+((sj1*x1733))+((x1717*x1725))+(((-1.0)*cj4*x1727*x1729))+((cj4*x1721*x1722))+(((0.250000349687704)*x1725))+((x1727*x1729))+(((-1.0)*r21*sj1*x1727))+(((-1.0)*cj1*r12*x1717))+((r20*x1732))+(((-1.0)*x1721*x1722))))+IKsqr(((((0.250000349687704)*x1718))+((r10*x1732))+((cj4*x1727*x1728))+((cj4*x1727*x1730))+(((-1.0)*x1720*x1723))+(((-1.0)*sj5*x1719*x1728))+((cj4*x1721*x1726))+(((-1.0)*r11*x1719*x1721))+((cj4*x1720*x1723))+(((-1.0)*x1727*x1730))+(((-1.0)*x1727*x1728))+(((-1.0)*x1721*x1726))+((sj1*x1716))+((r12*sj1*x1717))+((cj5*x1719*x1720))+((x1717*x1718))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*x1719*x1721))+(((-1.0)*cj5*x1719*x1724))+((x1723*x1724))+(((-1.0)*cj4*x1723*x1724))+(((-1.0)*cj1*x1716))+((sj5*x1719*x1729))+((sj1*x1733))+((x1717*x1725))+(((-1.0)*cj4*x1727*x1729))+((cj4*x1721*x1722))+(((0.250000349687704)*x1725))+((x1727*x1729))+(((-1.0)*r21*sj1*x1727))+(((-1.0)*cj1*r12*x1717))+((r20*x1732))+(((-1.0)*x1721*x1722))), ((((0.250000349687704)*x1718))+((r10*x1732))+((cj4*x1727*x1728))+((cj4*x1727*x1730))+(((-1.0)*x1720*x1723))+(((-1.0)*sj5*x1719*x1728))+((cj4*x1721*x1726))+(((-1.0)*r11*x1719*x1721))+((cj4*x1720*x1723))+(((-1.0)*x1727*x1730))+(((-1.0)*x1727*x1728))+(((-1.0)*x1721*x1726))+((sj1*x1716))+((r12*sj1*x1717))+((cj5*x1719*x1720))+((x1717*x1718))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1734=IKcos(j2);
IkReal x1735=IKsin(j2);
IkReal x1736=(cj5*r11);
IkReal x1737=((0.433012903784321)*cj4);
IkReal x1738=(r21*sj5);
IkReal x1739=((0.500000349687582)*sj4);
IkReal x1740=((0.749999650312296)*sj3);
IkReal x1741=(cj3*cj4);
IkReal x1742=(cj5*r10);
IkReal x1743=((0.0185150129489311)*sj4);
IkReal x1744=(r20*sj5);
IkReal x1745=(cj4*r22);
IkReal x1746=(r10*sj5);
IkReal x1747=(r12*sj3);
IkReal x1748=(r11*sj5);
IkReal x1749=(r22*sj3);
IkReal x1750=((0.27144)*sj1);
IkReal x1751=((0.00925751294893567)*cj4);
IkReal x1752=(cj5*r20);
IkReal x1753=(cj5*r21);
IkReal x1754=(cj4*r12);
IkReal x1755=((0.866025201892125)*sj4);
IkReal x1756=(sj1*x1734);
IkReal x1757=(cj1*x1734);
IkReal x1758=(cj1*x1735);
IkReal x1759=((0.250000349687704)*cj4*sj3);
IkReal x1760=(cj3*x1755);
IkReal x1761=(sj1*x1735);
IkReal x1762=((1.0)*x1758);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x1744))+x1761+x1757+(((0.433012903784321)*x1753))+(((-0.749999650312296)*x1745))+(((-1.0)*x1737*x1753))+(((-1.0)*x1737*x1744))+(((-1.0)*x1752*x1755))+((x1738*x1755)));
evalcond[1]=((((0.433012903784321)*x1736))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1746))+(((-1.0)*x1762))+x1756+(((-0.749999650312296)*x1754))+(((-1.0)*x1736*x1737))+(((-1.0)*x1737*x1746))+((x1748*x1755))+(((-1.0)*x1742*x1755)));
evalcond[2]=((((-1.0)*x1735*x1750))+(((0.0648043305514941)*x1744))+(((0.0648043305514941)*x1753))+(((-1.0)*x1738*x1743))+((x1744*x1751))+(((-0.27144)*x1757))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x1743*x1752))+(((0.0160344678271334)*x1745))+((x1751*x1753)));
evalcond[3]=((((0.0648043305514941)*x1746))+(((0.27144)*x1758))+((x1746*x1751))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+(((-1.0)*x1734*x1750))+((x1742*x1743))+(((0.0648043305514941)*x1736))+(((-1.0)*x1743*x1748))+(((0.0160344678271334)*x1754))+((x1736*x1751)));
evalcond[4]=(((sj3*x1739*x1752))+((x1753*x1759))+(((-1.0)*x1762))+(((-0.433012903784321)*x1749))+x1756+((x1744*x1759))+(((-1.0)*x1741*x1752))+((cj3*x1739*x1744))+((cj3*x1739*x1753))+((r22*x1760))+((x1740*x1744))+(((-1.0)*sj3*x1738*x1739))+((x1738*x1741))+((x1740*x1753))+((x1737*x1749)));
evalcond[5]=(((x1736*x1740))+(((-1.0)*x1761))+(((-0.433012903784321)*x1747))+((sj3*x1739*x1742))+((x1746*x1759))+((r12*x1760))+(((-1.0)*sj3*x1739*x1748))+(((-1.0)*x1741*x1742))+(((-1.0)*x1757))+((cj3*x1739*x1746))+((x1740*x1746))+((x1741*x1748))+((x1737*x1747))+((cj3*x1736*x1739))+((x1736*x1759)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2, j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1763=((0.433012903784321)*cj5);
IkReal x1764=(cj0*cj4);
IkReal x1765=((0.433012903784321)*r02);
IkReal x1766=(cj5*r00);
IkReal x1767=((0.500000349687582)*sj4);
IkReal x1768=((0.433012903784321)*cj4);
IkReal x1769=(r12*sj0);
IkReal x1770=((0.866025201892125)*sj4);
IkReal x1771=(r01*sj5);
IkReal x1772=(sj0*sj5);
IkReal x1773=(r00*sj5);
IkReal x1774=((0.250000349687704)*cj4);
IkReal x1775=(cj5*r11*sj0);
IkReal x1776=(cj0*cj5*r01);
IkReal x1777=(cj5*r10*sj0);
CheckValue<IkReal> x1778 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*r10*x1772))+(((-0.250000349687704)*x1764*x1773))+((cj0*x1767*x1771))+((cj0*x1765))+(((-1.0)*x1767*x1777))+(((-1.0)*r10*x1772*x1774))+(((-0.250000349687704)*cj5*r01*x1764))+(((-1.0)*x1764*x1765))+(((-1.0)*cj0*x1766*x1767))+(((-0.749999650312296)*cj0*x1773))+(((0.433012903784321)*x1769))+(((-0.749999650312296)*x1776))+(((-0.749999650312296)*x1775))+(((-1.0)*x1774*x1775))+(((-1.0)*x1768*x1769))+((r11*x1767*x1772)))),IkReal(((((-1.0)*x1764*x1771))+(((-1.0)*x1767*x1775))+(((-1.0)*x1767*x1776))+(((-1.0)*cj0*x1767*x1773))+((x1764*x1766))+((cj4*x1777))+(((-1.0)*cj4*r11*x1772))+(((-1.0)*cj0*r02*x1770))+(((-1.0)*r10*x1767*x1772))+(((-1.0)*x1769*x1770)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1778.valid){
continue;
}
CheckValue<IkReal> x1779=IKPowWithIntegerCheck(IKsign((((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*((((sj5*x1768))+((cj5*x1770))+(((-0.433012903784321)*sj5))))))+((r21*(((((-1.0)*x1763))+(((-1.0)*sj5*x1770))+((cj4*x1763)))))))),-1);
if(!x1779.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1778.value)+(((1.5707963267949)*(x1779.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1780=IKsin(j3);
IkReal x1781=IKcos(j3);
IkReal x1782=(r11*sj5);
IkReal x1783=(cj5*r20);
IkReal x1784=(cj4*cj5);
IkReal x1785=(r00*sj5);
IkReal x1786=(cj5*r01);
IkReal x1787=(r10*sj5);
IkReal x1788=(r21*sj5);
IkReal x1789=(r20*sj5);
IkReal x1790=(cj5*r21);
IkReal x1791=(cj5*r11);
IkReal x1792=(r01*sj5);
IkReal x1793=((1.0)*x1780);
IkReal x1794=((0.250000349687704)*x1781);
IkReal x1795=((0.749999650312296)*x1781);
IkReal x1796=(cj4*x1780);
IkReal x1797=((0.500000349687582)*sj4*x1781);
IkReal x1798=((0.433012903784321)*r12*x1781);
IkReal x1799=((0.500000349687582)*sj4*x1780);
IkReal x1800=((0.433012903784321)*r02*x1781);
IkReal x1801=((0.866025201892125)*sj4*x1780);
IkReal x1802=((0.433012903784321)*r22*x1781);
evalcond[0]=((((-1.0)*cj4*x1789*x1794))+(((-1.0)*x1790*x1795))+(((-1.0)*cj4*x1783*x1793))+((r22*x1801))+(((-1.0)*x1789*x1795))+((x1789*x1799))+(((-1.0)*r21*x1784*x1794))+x1802+(((-1.0)*cj4*x1802))+((x1790*x1799))+((x1788*x1796))+((x1788*x1797))+(((-1.0)*x1783*x1797)));
evalcond[1]=((((-1.0)*x1787*x1795))+(((-1.0)*r11*x1784*x1794))+((x1782*x1797))+((x1782*x1796))+(((-1.0)*cj4*x1798))+cj0+x1798+((x1787*x1799))+((r12*x1801))+(((-1.0)*cj5*r10*x1797))+(((-1.0)*cj4*x1787*x1794))+((x1791*x1799))+(((-1.0)*r10*x1784*x1793))+(((-1.0)*x1791*x1795)));
evalcond[2]=((((-1.0)*sj0))+(((-1.0)*r01*x1784*x1794))+(((-1.0)*cj5*r00*x1797))+(((-1.0)*x1785*x1795))+(((-1.0)*r00*x1784*x1793))+((r02*x1801))+x1800+((x1792*x1797))+((x1792*x1796))+(((-1.0)*x1786*x1795))+(((-1.0)*cj4*x1800))+((x1786*x1799))+((x1785*x1799))+(((-1.0)*cj4*x1785*x1794)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1803=((0.528192360616262)*sj4);
IkReal x1804=(r20*sj5);
IkReal x1805=((0.26409636501044)*cj4);
IkReal x1806=((0.444735007694415)*cj5);
IkReal x1807=((0.457427895740576)*cj4);
IkReal x1808=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1803))+((r11*sj5*x1803))+(((-1.0)*x1805*x1808))+(((-1.0)*cj5*r11*x1805))+((r11*x1806))+(((0.444735007694415)*x1808))+(((-1.0)*r12*x1807)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1806))+(((0.204620884747229)*r22))+((r22*x1807))+((cj5*r20*x1803))+((cj5*r21*x1805))+(((-1.0)*r21*sj5*x1803))+(((-0.444735007694415)*x1804))+((x1804*x1805))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1803))+((r11*sj5*x1803))+(((-1.0)*x1805*x1808))+(((-1.0)*cj5*r11*x1805))+((r11*x1806))+(((0.444735007694415)*x1808))+(((-1.0)*r12*x1807))))+IKsqr(((((-1.0)*r21*x1806))+(((0.204620884747229)*r22))+((r22*x1807))+((cj5*r20*x1803))+((cj5*r21*x1805))+(((-1.0)*r21*sj5*x1803))+(((-0.444735007694415)*x1804))+((x1804*x1805))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1803))+((r11*sj5*x1803))+(((-1.0)*x1805*x1808))+(((-1.0)*cj5*r11*x1805))+((r11*x1806))+(((0.444735007694415)*x1808))+(((-1.0)*r12*x1807))), ((((-1.0)*r21*x1806))+(((0.204620884747229)*r22))+((r22*x1807))+((cj5*r20*x1803))+((cj5*r21*x1805))+(((-1.0)*r21*sj5*x1803))+(((-0.444735007694415)*x1804))+((x1804*x1805))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1809=((1.0)*py);
IkReal x1810=(cj5*r11);
IkReal x1811=(cj5*sj3);
IkReal x1812=(r20*sj5);
IkReal x1813=((0.135720094919197)*sj4);
IkReal x1814=(r21*sj5);
IkReal x1815=((0.0185150129489311)*sj4);
IkReal x1816=((0.135720094919197)*sj3);
IkReal x1817=((0.00925751294893567)*cj4);
IkReal x1818=(cj4*cj5);
IkReal x1819=(cj3*r10);
IkReal x1820=((0.0678600949192303)*cj4);
IkReal x1821=(r10*sj5);
IkReal x1822=((0.10827950965428)*cj4);
IkReal x1823=(cj4*r22);
IkReal x1824=((0.0160344678271334)*r12);
IkReal x1825=((0.20357990508077)*sj3);
IkReal x1826=(cj5*r20);
IkReal x1827=((0.216558867852667)*sj4);
IkReal x1828=((0.117537022603216)*sj3);
IkReal x1829=((0.27144)*cj3);
IkReal x1830=(cj5*r21);
IkReal x1831=(cj4*r12);
IkReal x1832=((0.41)*(IKsin(j1)));
IkReal x1833=((0.41)*(IKcos(j1)));
IkReal x1834=(cj5*r10*sj4);
IkReal x1835=(r11*sj4*sj5);
IkReal x1836=((0.235073880801598)*cj3*sj4);
IkReal x1837=(x1809+x1832);
evalcond[0]=((((-0.18234135315471)*x1812))+((x1812*x1822))+(((-0.18234135315471)*x1830))+((x1826*x1827))+(((-1.0)*x1833))+pz+(((0.10827950965428)*r21*x1818))+(((0.187545437253636)*x1823))+(((-1.0)*x1814*x1827))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x1821*x1822))+(((-1.0)*x1810*x1822))+(((0.18234135315471)*x1810))+(((0.18234135315471)*x1821))+(((-1.0)*x1837))+((r11*sj5*x1827))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1831))+(((-1.0)*cj5*r10*x1827)));
evalcond[2]=((((-1.0)*x1824))+((cj4*x1824))+(((-1.0)*cj3*x1812*x1813))+(((-1.0)*cj4*x1814*x1829))+(((-1.0)*sj3*x1812*x1820))+(((-1.0)*x1812*x1825))+((r20*x1818*x1829))+(((-1.0)*x1837))+(((0.0648043305514941)*x1821))+(((-1.0)*r20*x1811*x1813))+((r22*x1828))+(((0.0648043305514941)*x1810))+((cj5*r10*x1815))+(((-1.0)*r11*sj5*x1815))+(((-1.0)*cj3*x1813*x1830))+(((-1.0)*r21*x1811*x1820))+(((-1.0)*x1823*x1828))+(((-1.0)*r22*x1836))+((sj3*x1813*x1814))+((x1817*x1821))+(((-0.20357990508077)*r21*x1811))+((x1810*x1817)));
evalcond[3]=((((-0.27144)*x1818*x1819))+(((0.0648043305514941)*x1830))+((sj5*x1813*x1819))+((r10*x1811*x1813))+((cj4*r11*sj5*x1829))+((sj3*x1810*x1820))+(((-1.0)*r11*sj3*sj5*x1813))+(((-0.0160344678271334)*r22))+((x1812*x1817))+(((0.0648043305514941)*x1812))+(((0.0160344678271334)*x1823))+(((-1.0)*pz))+((sj3*x1820*x1821))+(((-1.0)*r12*x1828))+((cj3*x1810*x1813))+((x1821*x1825))+(((-1.0)*x1814*x1815))+x1833+((x1810*x1825))+((r12*x1836))+((x1828*x1831))+((x1817*x1830))+((x1815*x1826)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1838=((0.250000349687704)*r12);
IkReal x1839=((0.749999650312296)*cj4);
IkReal x1840=((0.433012903784321)*sj5);
IkReal x1841=(cj1*r10);
IkReal x1842=(cj1*r22);
IkReal x1843=(cj1*r20);
IkReal x1844=((0.866025201892125)*sj4);
IkReal x1845=(r20*sj1);
IkReal x1846=(r22*sj1);
IkReal x1847=(r10*sj1);
IkReal x1848=(r11*sj1);
IkReal x1849=((0.433012903784321)*cj5);
IkReal x1850=(r21*sj1);
IkReal x1851=(cj1*r21);
IkReal x1852=(cj1*r11);
IkReal x1853=(cj5*sj1*x1844);
IkReal x1854=(cj4*r21*x1849);
if( IKabs((((cj5*x1841*x1844))+(((-1.0)*x1849*x1850))+(((-1.0)*x1849*x1852))+((cj1*r12*x1839))+((cj4*x1849*x1850))+((cj4*x1849*x1852))+((x1839*x1846))+((cj4*x1840*x1841))+((cj4*x1840*x1845))+(((-1.0)*x1840*x1841))+(((-1.0)*x1840*x1845))+((cj5*x1844*x1845))+(((0.250000349687704)*x1846))+(((-1.0)*sj5*x1844*x1850))+(((-1.0)*sj5*x1844*x1852))+((cj1*x1838)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r12*sj1*x1839))+(((-1.0)*x1849*x1851))+((cj5*x1843*x1844))+((x1840*x1847))+((cj4*x1849*x1851))+(((-1.0)*cj5*x1844*x1847))+((sj5*x1844*x1848))+(((-1.0)*cj4*x1840*x1847))+((x1839*x1842))+((cj4*x1840*x1843))+(((-1.0)*sj1*x1838))+((x1848*x1849))+(((-1.0)*x1840*x1843))+(((-1.0)*cj4*x1848*x1849))+(((0.250000349687704)*x1842))+(((-1.0)*sj5*x1844*x1851)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x1841*x1844))+(((-1.0)*x1849*x1850))+(((-1.0)*x1849*x1852))+((cj1*r12*x1839))+((cj4*x1849*x1850))+((cj4*x1849*x1852))+((x1839*x1846))+((cj4*x1840*x1841))+((cj4*x1840*x1845))+(((-1.0)*x1840*x1841))+(((-1.0)*x1840*x1845))+((cj5*x1844*x1845))+(((0.250000349687704)*x1846))+(((-1.0)*sj5*x1844*x1850))+(((-1.0)*sj5*x1844*x1852))+((cj1*x1838))))+IKsqr(((((-1.0)*r12*sj1*x1839))+(((-1.0)*x1849*x1851))+((cj5*x1843*x1844))+((x1840*x1847))+((cj4*x1849*x1851))+(((-1.0)*cj5*x1844*x1847))+((sj5*x1844*x1848))+(((-1.0)*cj4*x1840*x1847))+((x1839*x1842))+((cj4*x1840*x1843))+(((-1.0)*sj1*x1838))+((x1848*x1849))+(((-1.0)*x1840*x1843))+(((-1.0)*cj4*x1848*x1849))+(((0.250000349687704)*x1842))+(((-1.0)*sj5*x1844*x1851))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x1841*x1844))+(((-1.0)*x1849*x1850))+(((-1.0)*x1849*x1852))+((cj1*r12*x1839))+((cj4*x1849*x1850))+((cj4*x1849*x1852))+((x1839*x1846))+((cj4*x1840*x1841))+((cj4*x1840*x1845))+(((-1.0)*x1840*x1841))+(((-1.0)*x1840*x1845))+((cj5*x1844*x1845))+(((0.250000349687704)*x1846))+(((-1.0)*sj5*x1844*x1850))+(((-1.0)*sj5*x1844*x1852))+((cj1*x1838))), ((((-1.0)*r12*sj1*x1839))+(((-1.0)*x1849*x1851))+((cj5*x1843*x1844))+((x1840*x1847))+((cj4*x1849*x1851))+(((-1.0)*cj5*x1844*x1847))+((sj5*x1844*x1848))+(((-1.0)*cj4*x1840*x1847))+((x1839*x1842))+((cj4*x1840*x1843))+(((-1.0)*sj1*x1838))+((x1848*x1849))+(((-1.0)*x1840*x1843))+(((-1.0)*cj4*x1848*x1849))+(((0.250000349687704)*x1842))+(((-1.0)*sj5*x1844*x1851))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1855=IKsin(j2);
IkReal x1856=IKcos(j2);
IkReal x1857=(cj5*r11);
IkReal x1858=((0.433012903784321)*cj4);
IkReal x1859=(r21*sj5);
IkReal x1860=((0.500000349687582)*sj4);
IkReal x1861=((0.749999650312296)*sj3);
IkReal x1862=(cj3*cj4);
IkReal x1863=(cj5*r10);
IkReal x1864=((0.0185150129489311)*sj4);
IkReal x1865=(r20*sj5);
IkReal x1866=(cj4*r22);
IkReal x1867=(r10*sj5);
IkReal x1868=(r22*sj3);
IkReal x1869=(r11*sj5);
IkReal x1870=((0.00925751294893567)*cj4);
IkReal x1871=(cj5*r21);
IkReal x1872=(r12*sj3);
IkReal x1873=(cj4*r12);
IkReal x1874=(cj5*r20);
IkReal x1875=((0.866025201892125)*sj4);
IkReal x1876=(cj1*x1856);
IkReal x1877=(sj1*x1855);
IkReal x1878=(cj1*x1855);
IkReal x1879=((0.250000349687704)*cj4*sj3);
IkReal x1880=(sj1*x1856);
IkReal x1881=(cj3*x1875);
IkReal x1882=(x1876+x1877);
evalcond[0]=(((x1859*x1875))+(((-0.250000349687704)*r22))+(((-1.0)*x1874*x1875))+(((-1.0)*x1858*x1871))+(((-0.749999650312296)*x1866))+(((0.433012903784321)*x1865))+(((0.433012903784321)*x1871))+x1882+(((-1.0)*x1858*x1865)));
evalcond[1]=((((0.433012903784321)*x1857))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1873))+(((-1.0)*x1857*x1858))+(((0.433012903784321)*x1867))+(((-1.0)*x1863*x1875))+x1878+(((-1.0)*x1880))+((x1869*x1875))+(((-1.0)*x1858*x1867)));
evalcond[2]=((((0.41)*cj1))+((x1865*x1870))+(((-0.0160344678271334)*r22))+(((-0.27144)*x1877))+(((-0.27144)*x1876))+(((0.0160344678271334)*x1866))+(((-1.0)*pz))+(((0.0648043305514941)*x1871))+(((-1.0)*x1859*x1864))+(((0.0648043305514941)*x1865))+((x1870*x1871))+((x1864*x1874)));
evalcond[3]=((((-1.0)*x1864*x1869))+(((0.27144)*x1880))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1857))+(((-0.27144)*x1878))+(((-0.41)*sj1))+((x1863*x1864))+(((-1.0)*py))+(((0.0160344678271334)*x1873))+((x1857*x1870))+(((0.0648043305514941)*x1867))+((x1867*x1870)));
evalcond[4]=((((-1.0)*sj3*x1860*x1869))+((r12*x1881))+((x1858*x1872))+((cj3*x1857*x1860))+((x1862*x1869))+((cj3*x1860*x1867))+((x1857*x1879))+x1882+((x1857*x1861))+(((-1.0)*x1862*x1863))+((x1867*x1879))+((sj3*x1860*x1863))+(((-0.433012903784321)*x1872))+((x1861*x1867)));
evalcond[5]=((((-1.0)*sj3*x1859*x1860))+(((-0.433012903784321)*x1868))+(((-1.0)*x1862*x1874))+((x1861*x1871))+((x1871*x1879))+((x1865*x1879))+((x1859*x1862))+((x1858*x1868))+((cj3*x1860*x1871))+((cj3*x1860*x1865))+x1880+(((-1.0)*x1878))+((r22*x1881))+((x1861*x1865))+((sj3*x1860*x1874)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1883=((0.528192360616262)*sj4);
IkReal x1884=((0.26409636501044)*cj4);
IkReal x1885=(r20*sj5);
IkReal x1886=((0.444735007694415)*cj5);
IkReal x1887=((0.457427895740576)*cj4);
IkReal x1888=(r10*sj5);
if( IKabs((((r12*x1887))+(((-1.0)*r11*x1886))+(((-1.0)*r11*sj5*x1883))+(((-0.444735007694415)*x1888))+((cj5*r10*x1883))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((x1884*x1888))+((cj5*r11*x1884)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1883))+(((-0.444735007694415)*x1885))+((cj5*r20*x1883))+((r22*x1887))+(((-1.0)*r21*x1886))+((cj5*r21*x1884))+(((2.4390243902439)*pz))+((x1884*x1885)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1887))+(((-1.0)*r11*x1886))+(((-1.0)*r11*sj5*x1883))+(((-0.444735007694415)*x1888))+((cj5*r10*x1883))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((x1884*x1888))+((cj5*r11*x1884))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1883))+(((-0.444735007694415)*x1885))+((cj5*r20*x1883))+((r22*x1887))+(((-1.0)*r21*x1886))+((cj5*r21*x1884))+(((2.4390243902439)*pz))+((x1884*x1885))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1887))+(((-1.0)*r11*x1886))+(((-1.0)*r11*sj5*x1883))+(((-0.444735007694415)*x1888))+((cj5*r10*x1883))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+((x1884*x1888))+((cj5*r11*x1884))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1883))+(((-0.444735007694415)*x1885))+((cj5*r20*x1883))+((r22*x1887))+(((-1.0)*r21*x1886))+((cj5*r21*x1884))+(((2.4390243902439)*pz))+((x1884*x1885))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1889=(cj5*sj4);
IkReal x1890=((0.135720094919197)*sj3);
IkReal x1891=(cj5*r11);
IkReal x1892=(cj5*r21);
IkReal x1893=((0.20357990508077)*sj3);
IkReal x1894=(r20*sj5);
IkReal x1895=((0.00925751294893567)*cj4);
IkReal x1896=(cj4*r10);
IkReal x1897=((0.27144)*cj3);
IkReal x1898=((0.10827950965428)*cj4);
IkReal x1899=((0.117537022603216)*sj3);
IkReal x1900=(cj4*r22);
IkReal x1901=(cj3*sj4);
IkReal x1902=(cj4*r12);
IkReal x1903=(r10*sj5);
IkReal x1904=(cj4*sj5);
IkReal x1905=((0.135720094919197)*cj3);
IkReal x1906=((0.41)*(IKcos(j1)));
IkReal x1907=((0.41)*(IKsin(j1)));
IkReal x1908=(r11*sj4*sj5);
IkReal x1909=((0.0678600949192303)*cj4*sj3);
IkReal x1910=(r21*sj4*sj5);
evalcond[0]=((((0.216558867852667)*r10*x1889))+(((0.187545437253636)*x1902))+((x1891*x1898))+(((-0.216558867852667)*x1908))+py+(((-0.18234135315471)*x1903))+(((0.0838945627463637)*r12))+(((0.10827950965428)*sj5*x1896))+(((-0.18234135315471)*x1891))+(((-1.0)*x1907)));
evalcond[1]=((((0.216558867852667)*r20*x1889))+(((0.187545437253636)*x1900))+((x1892*x1898))+pz+(((-0.216558867852667)*x1910))+((x1894*x1898))+(((-0.18234135315471)*x1892))+(((-0.18234135315471)*x1894))+(((0.0838945627463637)*r22))+(((-1.0)*x1906)));
evalcond[2]=((((-1.0)*x1892*x1895))+(((-0.0648043305514941)*x1894))+(((-0.0648043305514941)*x1892))+((r10*x1889*x1890))+(((0.235073880801598)*r12*x1901))+(((-1.0)*x1890*x1908))+((x1891*x1909))+(((-0.0160344678271334)*x1900))+((r11*x1889*x1905))+(((0.0185150129489311)*x1910))+(((-1.0)*r12*x1899))+((x1891*x1893))+((x1899*x1902))+(((-0.0185150129489311)*r20*x1889))+pz+(((-1.0)*cj5*x1896*x1897))+(((-1.0)*x1894*x1895))+(((0.0160344678271334)*r22))+((r11*x1897*x1904))+(((0.0678600949192303)*sj3*sj5*x1896))+(((0.135720094919197)*x1901*x1903))+(((-1.0)*x1906))+((x1893*x1903)));
evalcond[3]=(((x1892*x1909))+(((0.135720094919197)*x1894*x1901))+(((-1.0)*cj4*cj5*r20*x1897))+((x1893*x1894))+((x1892*x1893))+((r21*x1897*x1904))+(((0.0185150129489311)*r10*x1889))+(((0.0160344678271334)*x1902))+((r20*x1889*x1890))+(((-0.0160344678271334)*r12))+(((-1.0)*r22*x1899))+(((-1.0)*py))+((x1891*x1895))+x1907+((x1895*x1903))+((x1899*x1900))+(((-1.0)*x1890*x1910))+((x1894*x1909))+((r21*x1889*x1905))+(((0.0648043305514941)*x1903))+(((-0.0185150129489311)*x1908))+(((0.235073880801598)*r22*x1901))+(((0.0648043305514941)*x1891)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1911=((0.250000349687704)*r12);
IkReal x1912=((0.749999650312296)*cj4);
IkReal x1913=(cj1*r22);
IkReal x1914=((0.866025201892125)*sj4);
IkReal x1915=(cj1*r20);
IkReal x1916=(sj1*sj5);
IkReal x1917=((0.433012903784321)*r20);
IkReal x1918=((0.433012903784321)*sj5);
IkReal x1919=(cj1*r10);
IkReal x1920=(r22*sj1);
IkReal x1921=((0.433012903784321)*r10);
IkReal x1922=((0.433012903784321)*cj5);
IkReal x1923=(cj1*r21);
IkReal x1924=(cj1*r11);
IkReal x1925=(r11*sj1);
IkReal x1926=(cj1*cj4*x1918);
IkReal x1927=(cj5*sj1*x1914);
IkReal x1928=(cj4*r21*x1922);
if( IKabs(((((-1.0)*cj1*r12*x1912))+((cj4*x1916*x1917))+(((-1.0)*cj4*x1922*x1924))+(((-1.0)*cj4*x1918*x1919))+(((-1.0)*cj1*x1911))+((r20*x1927))+(((-1.0)*r21*x1914*x1916))+((sj5*x1914*x1924))+(((-1.0)*cj5*x1914*x1919))+(((0.250000349687704)*x1920))+((x1912*x1920))+(((-1.0)*x1916*x1917))+((x1918*x1919))+(((-1.0)*r21*sj1*x1922))+((x1922*x1924))+((sj1*x1928)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1912*x1913))+((r12*sj1*x1912))+(((-1.0)*x1916*x1921))+(((-1.0)*x1922*x1923))+(((-1.0)*x1922*x1925))+((cj4*x1922*x1923))+((cj4*x1922*x1925))+(((0.250000349687704)*x1913))+(((-1.0)*x1915*x1918))+((cj5*x1914*x1915))+(((-1.0)*sj5*x1914*x1923))+((sj1*x1911))+((r10*x1927))+((cj4*x1915*x1918))+((cj4*x1916*x1921))+(((-1.0)*r11*x1914*x1916)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x1912))+((cj4*x1916*x1917))+(((-1.0)*cj4*x1922*x1924))+(((-1.0)*cj4*x1918*x1919))+(((-1.0)*cj1*x1911))+((r20*x1927))+(((-1.0)*r21*x1914*x1916))+((sj5*x1914*x1924))+(((-1.0)*cj5*x1914*x1919))+(((0.250000349687704)*x1920))+((x1912*x1920))+(((-1.0)*x1916*x1917))+((x1918*x1919))+(((-1.0)*r21*sj1*x1922))+((x1922*x1924))+((sj1*x1928))))+IKsqr((((x1912*x1913))+((r12*sj1*x1912))+(((-1.0)*x1916*x1921))+(((-1.0)*x1922*x1923))+(((-1.0)*x1922*x1925))+((cj4*x1922*x1923))+((cj4*x1922*x1925))+(((0.250000349687704)*x1913))+(((-1.0)*x1915*x1918))+((cj5*x1914*x1915))+(((-1.0)*sj5*x1914*x1923))+((sj1*x1911))+((r10*x1927))+((cj4*x1915*x1918))+((cj4*x1916*x1921))+(((-1.0)*r11*x1914*x1916))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x1912))+((cj4*x1916*x1917))+(((-1.0)*cj4*x1922*x1924))+(((-1.0)*cj4*x1918*x1919))+(((-1.0)*cj1*x1911))+((r20*x1927))+(((-1.0)*r21*x1914*x1916))+((sj5*x1914*x1924))+(((-1.0)*cj5*x1914*x1919))+(((0.250000349687704)*x1920))+((x1912*x1920))+(((-1.0)*x1916*x1917))+((x1918*x1919))+(((-1.0)*r21*sj1*x1922))+((x1922*x1924))+((sj1*x1928))), (((x1912*x1913))+((r12*sj1*x1912))+(((-1.0)*x1916*x1921))+(((-1.0)*x1922*x1923))+(((-1.0)*x1922*x1925))+((cj4*x1922*x1923))+((cj4*x1922*x1925))+(((0.250000349687704)*x1913))+(((-1.0)*x1915*x1918))+((cj5*x1914*x1915))+(((-1.0)*sj5*x1914*x1923))+((sj1*x1911))+((r10*x1927))+((cj4*x1915*x1918))+((cj4*x1916*x1921))+(((-1.0)*r11*x1914*x1916))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1929=IKcos(j2);
IkReal x1930=IKsin(j2);
IkReal x1931=(cj5*r11);
IkReal x1932=((0.433012903784321)*cj4);
IkReal x1933=(r21*sj5);
IkReal x1934=((0.500000349687582)*sj4);
IkReal x1935=((0.749999650312296)*sj3);
IkReal x1936=(cj3*cj4);
IkReal x1937=(cj5*r10);
IkReal x1938=((0.0185150129489311)*sj4);
IkReal x1939=(r20*sj5);
IkReal x1940=(cj4*r22);
IkReal x1941=(r10*sj5);
IkReal x1942=(r12*sj3);
IkReal x1943=(r11*sj5);
IkReal x1944=(r22*sj3);
IkReal x1945=((0.27144)*sj1);
IkReal x1946=((0.00925751294893567)*cj4);
IkReal x1947=(cj5*r20);
IkReal x1948=(cj5*r21);
IkReal x1949=(cj4*r12);
IkReal x1950=((0.866025201892125)*sj4);
IkReal x1951=(sj1*x1929);
IkReal x1952=(cj1*x1929);
IkReal x1953=(cj1*x1930);
IkReal x1954=((0.250000349687704)*cj4*sj3);
IkReal x1955=(cj3*x1950);
IkReal x1956=(sj1*x1930);
IkReal x1957=((1.0)*x1953);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x1947*x1950))+(((-1.0)*x1932*x1939))+x1956+x1952+(((-1.0)*x1932*x1948))+(((-0.749999650312296)*x1940))+(((0.433012903784321)*x1948))+((x1933*x1950))+(((0.433012903784321)*x1939)));
evalcond[1]=(((x1943*x1950))+(((-1.0)*x1937*x1950))+(((-0.250000349687704)*r12))+(((-1.0)*x1957))+x1951+(((-1.0)*x1931*x1932))+(((-1.0)*x1932*x1941))+(((-0.749999650312296)*x1949))+(((0.433012903784321)*x1941))+(((0.433012903784321)*x1931)));
evalcond[2]=((((-1.0)*x1930*x1945))+((x1938*x1947))+(((-1.0)*x1933*x1938))+((x1939*x1946))+(((-0.27144)*x1952))+(((0.41)*cj1))+((x1946*x1948))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1940))+(((0.0648043305514941)*x1948))+(((-1.0)*pz))+(((0.0648043305514941)*x1939)));
evalcond[3]=((((-1.0)*x1929*x1945))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0160344678271334)*x1949))+(((0.0648043305514941)*x1941))+(((-1.0)*py))+((x1941*x1946))+(((-1.0)*x1938*x1943))+(((0.0648043305514941)*x1931))+((x1931*x1946))+((x1937*x1938))+(((0.27144)*x1953)));
evalcond[4]=((((-1.0)*x1957))+((cj3*x1934*x1939))+((sj3*x1934*x1947))+((x1939*x1954))+((cj3*x1934*x1948))+(((-1.0)*sj3*x1933*x1934))+((x1935*x1948))+((r22*x1955))+x1951+((x1935*x1939))+((x1948*x1954))+(((-1.0)*x1936*x1947))+((x1932*x1944))+((x1933*x1936))+(((-0.433012903784321)*x1944)));
evalcond[5]=(((cj3*x1934*x1941))+(((-1.0)*sj3*x1934*x1943))+((r12*x1955))+((x1931*x1935))+((cj3*x1931*x1934))+((sj3*x1934*x1937))+((x1936*x1943))+((x1941*x1954))+(((-1.0)*x1936*x1937))+((x1935*x1941))+(((-1.0)*x1952))+(((-1.0)*x1956))+((x1932*x1942))+((x1931*x1954))+(((-0.433012903784321)*x1942)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1958=((0.26409636501044)*cj4);
IkReal x1959=(r20*sj5);
IkReal x1960=(cj5*r21);
IkReal x1961=((0.457427895740576)*cj4);
IkReal x1962=(r00*sj5);
IkReal x1963=((0.528192360616262)*sj4);
IkReal x1964=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1962))+(((0.444735007694415)*x1964))+(((-1.0)*x1958*x1964))+(((-1.0)*x1958*x1962))+(((-1.0)*cj5*r00*x1963))+(((-1.0)*r02*x1961))+((r01*sj5*x1963)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1958*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1963))+((x1958*x1959))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1959))+((cj5*r20*x1963))+((r22*x1961))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1962))+(((0.444735007694415)*x1964))+(((-1.0)*x1958*x1964))+(((-1.0)*x1958*x1962))+(((-1.0)*cj5*r00*x1963))+(((-1.0)*r02*x1961))+((r01*sj5*x1963))))+IKsqr((((x1958*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1963))+((x1958*x1959))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1959))+((cj5*r20*x1963))+((r22*x1961))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x1962))+(((0.444735007694415)*x1964))+(((-1.0)*x1958*x1964))+(((-1.0)*x1958*x1962))+(((-1.0)*cj5*r00*x1963))+(((-1.0)*r02*x1961))+((r01*sj5*x1963))), (((x1958*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1963))+((x1958*x1959))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1959))+((cj5*r20*x1963))+((r22*x1961))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1965=((1.0)*px);
IkReal x1966=((0.187545437253636)*cj4);
IkReal x1967=(r20*sj5);
IkReal x1968=(r01*sj3);
IkReal x1969=(cj5*r21);
IkReal x1970=(cj3*r00);
IkReal x1971=((0.0185150129489311)*sj4);
IkReal x1972=(r21*sj5);
IkReal x1973=((0.20357990508077)*sj3);
IkReal x1974=(cj5*sj4);
IkReal x1975=((0.135720094919197)*sj3);
IkReal x1976=(cj4*cj5);
IkReal x1977=(r00*sj5);
IkReal x1978=((0.00925751294893567)*cj4);
IkReal x1979=((0.10827950965428)*cj4);
IkReal x1980=(cj4*r22);
IkReal x1981=((0.117537022603216)*sj3);
IkReal x1982=(cj5*r01);
IkReal x1983=((0.135720094919197)*cj3);
IkReal x1984=(r01*sj5);
IkReal x1985=((0.216558867852667)*sj4);
IkReal x1986=(cj4*r02);
IkReal x1987=((0.27144)*cj3);
IkReal x1988=((0.41)*(IKsin(j1)));
IkReal x1989=((0.41)*(IKcos(j1)));
IkReal x1990=((0.135720094919197)*sj4*sj5);
IkReal x1991=((0.0678600949192303)*cj4*sj3);
IkReal x1992=((0.235073880801598)*cj3*sj4);
IkReal x1993=(x1988+x1965);
evalcond[0]=(((x1969*x1979))+((x1967*x1979))+(((-1.0)*x1989))+(((-1.0)*x1972*x1985))+((r22*x1966))+pz+(((0.216558867852667)*r20*x1974))+(((-0.18234135315471)*x1967))+(((-0.18234135315471)*x1969))+(((0.0838945627463637)*r22)));
evalcond[1]=(((x1984*x1985))+(((0.18234135315471)*x1977))+(((-0.10827950965428)*r01*x1976))+(((-1.0)*r02*x1966))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x1974))+(((-1.0)*x1993))+(((-1.0)*x1977*x1979))+(((0.18234135315471)*x1982)));
evalcond[2]=(((r20*x1976*x1987))+(((-1.0)*sj4*x1969*x1983))+(((-1.0)*x1980*x1981))+(((-0.0160344678271334)*r02))+(((0.0648043305514941)*x1982))+(((-1.0)*x1971*x1984))+(((0.0160344678271334)*x1986))+((sj4*x1972*x1975))+(((0.0648043305514941)*x1977))+(((0.00925751294893567)*r01*x1976))+(((-1.0)*x1993))+((r22*x1981))+(((-1.0)*sj4*x1967*x1983))+(((-1.0)*cj4*x1972*x1987))+(((-1.0)*r20*x1974*x1975))+((cj5*r00*x1971))+(((-1.0)*x1969*x1973))+(((-1.0)*r22*x1992))+((x1977*x1978))+(((-1.0)*x1967*x1973))+(((-1.0)*x1969*x1991))+(((-1.0)*x1967*x1991)));
evalcond[3]=(((x1969*x1978))+((x1967*x1978))+((x1970*x1990))+(((0.0678600949192303)*x1968*x1976))+(((-1.0)*r02*x1981))+((x1981*x1986))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1980))+((r02*x1992))+((x1977*x1991))+(((-1.0)*x1971*x1972))+(((-1.0)*pz))+(((0.0648043305514941)*x1967))+(((0.0648043305514941)*x1969))+x1989+((cj5*r20*x1971))+((x1973*x1977))+((r00*x1974*x1975))+(((0.20357990508077)*cj5*x1968))+((cj4*x1984*x1987))+(((-0.27144)*x1970*x1976))+((r01*x1974*x1983))+(((-1.0)*x1968*x1990)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1994=((0.250000349687704)*sj1);
IkReal x1995=(cj1*cj4);
IkReal x1996=((0.749999650312296)*r22);
IkReal x1997=(cj4*sj1);
IkReal x1998=((0.749999650312296)*r02);
IkReal x1999=((0.250000349687704)*cj1);
IkReal x2000=((0.433012903784321)*r00*sj5);
IkReal x2001=((0.433012903784321)*r20*sj5);
IkReal x2002=((0.433012903784321)*cj5*r01);
IkReal x2003=((0.433012903784321)*cj5*r21);
IkReal x2004=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2005=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2006=((0.866025201892125)*r01*sj4*sj5);
IkReal x2007=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x1997*x2003))+((x1997*x2001))+((x1996*x1997))+((r00*x2005))+(((-1.0)*sj1*x2007))+(((-1.0)*sj1*x2001))+(((-1.0)*sj1*x2003))+((r02*x1999))+((x1995*x1998))+(((-1.0)*cj1*x2000))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2002))+((x1995*x2002))+((x1995*x2000))+((r20*x2004))+((r22*x1994)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1997*x1998))+(((-1.0)*r02*x1994))+(((-1.0)*r00*x2004))+((x1995*x1996))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((x1995*x2003))+((x1995*x2001))+((sj1*x2006))+((sj1*x2000))+((sj1*x2002))+((r20*x2005))+(((-1.0)*x1997*x2000))+(((-1.0)*x1997*x2002))+((r22*x1999)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1997*x2003))+((x1997*x2001))+((x1996*x1997))+((r00*x2005))+(((-1.0)*sj1*x2007))+(((-1.0)*sj1*x2001))+(((-1.0)*sj1*x2003))+((r02*x1999))+((x1995*x1998))+(((-1.0)*cj1*x2000))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2002))+((x1995*x2002))+((x1995*x2000))+((r20*x2004))+((r22*x1994))))+IKsqr(((((-1.0)*x1997*x1998))+(((-1.0)*r02*x1994))+(((-1.0)*r00*x2004))+((x1995*x1996))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((x1995*x2003))+((x1995*x2001))+((sj1*x2006))+((sj1*x2000))+((sj1*x2002))+((r20*x2005))+(((-1.0)*x1997*x2000))+(((-1.0)*x1997*x2002))+((r22*x1999))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1997*x2003))+((x1997*x2001))+((x1996*x1997))+((r00*x2005))+(((-1.0)*sj1*x2007))+(((-1.0)*sj1*x2001))+(((-1.0)*sj1*x2003))+((r02*x1999))+((x1995*x1998))+(((-1.0)*cj1*x2000))+(((-1.0)*cj1*x2006))+(((-1.0)*cj1*x2002))+((x1995*x2002))+((x1995*x2000))+((r20*x2004))+((r22*x1994))), ((((-1.0)*x1997*x1998))+(((-1.0)*r02*x1994))+(((-1.0)*r00*x2004))+((x1995*x1996))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((x1995*x2003))+((x1995*x2001))+((sj1*x2006))+((sj1*x2000))+((sj1*x2002))+((r20*x2005))+(((-1.0)*x1997*x2000))+(((-1.0)*x1997*x2002))+((r22*x1999))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2008=IKsin(j2);
IkReal x2009=IKcos(j2);
IkReal x2010=((0.749999650312296)*sj3);
IkReal x2011=(cj5*r01);
IkReal x2012=(r00*sj5);
IkReal x2013=(cj4*cj5);
IkReal x2014=((1.0)*cj3);
IkReal x2015=(r21*sj3);
IkReal x2016=(cj4*sj5);
IkReal x2017=(cj3*r21);
IkReal x2018=((0.500000349687582)*sj4);
IkReal x2019=((0.433012903784321)*r20);
IkReal x2020=(cj4*r22);
IkReal x2021=((0.433012903784321)*sj3);
IkReal x2022=((0.433012903784321)*cj4);
IkReal x2023=(r01*sj5);
IkReal x2024=(r20*sj5);
IkReal x2025=((0.0160344678271334)*r02);
IkReal x2026=(cj4*r02);
IkReal x2027=((0.00925751294893567)*cj4);
IkReal x2028=((0.0185150129489311)*sj4);
IkReal x2029=(r21*sj5);
IkReal x2030=(cj5*r21);
IkReal x2031=((0.866025201892125)*sj4);
IkReal x2032=(cj5*r20);
IkReal x2033=(cj5*r00);
IkReal x2034=((0.250000349687704)*sj3);
IkReal x2035=(cj1*x2009);
IkReal x2036=(sj1*x2008);
IkReal x2037=(cj1*x2008);
IkReal x2038=(sj1*x2009);
IkReal x2039=(x2036+x2035);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x2020))+(((-0.433012903784321)*r21*x2013))+x2039+(((-1.0)*x2016*x2019))+((sj5*x2019))+((x2029*x2031))+(((-1.0)*x2031*x2032))+(((0.433012903784321)*x2030)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.749999650312296)*x2026))+(((-1.0)*x2011*x2022))+x2037+(((-1.0)*x2038))+((x2023*x2031))+(((0.433012903784321)*x2012))+(((0.433012903784321)*x2011))+(((-1.0)*x2031*x2033))+(((-1.0)*x2012*x2022)));
evalcond[2]=((((0.0648043305514941)*x2030))+(((0.0648043305514941)*x2024))+(((-0.27144)*x2035))+(((-0.27144)*x2036))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x2013))+(((-1.0)*pz))+((x2028*x2032))+(((0.00925751294893567)*r20*x2016))+(((0.0160344678271334)*x2020))+(((-1.0)*x2028*x2029)));
evalcond[3]=((((-1.0)*x2023*x2028))+(((0.27144)*x2038))+((cj4*x2025))+(((-0.27144)*x2037))+(((-0.41)*sj1))+(((-1.0)*px))+((x2012*x2027))+((x2028*x2033))+(((-1.0)*x2025))+((x2011*x2027))+(((0.0648043305514941)*x2012))+(((0.0648043305514941)*x2011)));
evalcond[4]=(((cj3*r02*x2031))+((sj3*x2018*x2033))+((cj4*x2011*x2034))+((cj3*x2012*x2018))+((cj4*x2012*x2034))+x2039+(((-1.0)*r02*x2021))+(((-1.0)*r00*x2013*x2014))+((x2010*x2011))+((x2010*x2012))+((cj3*r01*x2016))+(((-1.0)*sj3*x2018*x2023))+((x2021*x2026))+((cj3*x2011*x2018)));
evalcond[5]=((((-1.0)*sj5*x2015*x2018))+((x2020*x2021))+((sj3*x2018*x2032))+(((-1.0)*r22*x2021))+x2038+((cj3*x2018*x2024))+((cj5*x2017*x2018))+((x2016*x2017))+(((0.250000349687704)*x2013*x2015))+(((-1.0)*r20*x2013*x2014))+((r20*x2016*x2034))+(((-1.0)*x2037))+((x2010*x2030))+((x2010*x2024))+((cj3*r22*x2031)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2040=(cj5*r21);
IkReal x2041=((0.26409636501044)*cj4);
IkReal x2042=((0.457427895740576)*cj4);
IkReal x2043=((0.528192360616262)*sj4);
IkReal x2044=(cj5*r01);
IkReal x2045=((0.444735007694415)*sj5);
if( IKabs((((x2041*x2044))+((r02*x2042))+((r00*sj5*x2041))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2045))+(((-1.0)*r01*sj5*x2043))+((cj5*r00*x2043))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2044)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2042))+((x2040*x2041))+(((0.204620884747229)*r22))+((cj5*r20*x2043))+(((-1.0)*r21*sj5*x2043))+((r20*sj5*x2041))+(((-1.0)*r20*x2045))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2040)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2041*x2044))+((r02*x2042))+((r00*sj5*x2041))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2045))+(((-1.0)*r01*sj5*x2043))+((cj5*r00*x2043))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2044))))+IKsqr((((r22*x2042))+((x2040*x2041))+(((0.204620884747229)*r22))+((cj5*r20*x2043))+(((-1.0)*r21*sj5*x2043))+((r20*sj5*x2041))+(((-1.0)*r20*x2045))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2040))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x2041*x2044))+((r02*x2042))+((r00*sj5*x2041))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2045))+(((-1.0)*r01*sj5*x2043))+((cj5*r00*x2043))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2044))), (((r22*x2042))+((x2040*x2041))+(((0.204620884747229)*r22))+((cj5*r20*x2043))+(((-1.0)*r21*sj5*x2043))+((r20*sj5*x2041))+(((-1.0)*r20*x2045))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2040))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2046=((0.187545437253636)*cj4);
IkReal x2047=(cj5*r20);
IkReal x2048=(r01*sj5);
IkReal x2049=(cj5*r21);
IkReal x2050=(cj3*r00);
IkReal x2051=(sj4*sj5);
IkReal x2052=((0.20357990508077)*sj3);
IkReal x2053=(r20*sj5);
IkReal x2054=(cj4*cj5);
IkReal x2055=((0.00925751294893567)*cj4);
IkReal x2056=((0.117537022603216)*sj3);
IkReal x2057=((0.10827950965428)*cj4);
IkReal x2058=(r00*sj5);
IkReal x2059=(cj4*r22);
IkReal x2060=(r21*sj5);
IkReal x2061=((0.216558867852667)*sj4);
IkReal x2062=((0.0185150129489311)*sj4);
IkReal x2063=(cj3*sj4);
IkReal x2064=(cj4*r02);
IkReal x2065=(cj5*r01);
IkReal x2066=((0.41)*(IKcos(j1)));
IkReal x2067=((0.41)*(IKsin(j1)));
IkReal x2068=((0.135720094919197)*sj3*sj4);
IkReal x2069=((0.0678600949192303)*cj4*sj3);
IkReal x2070=(cj5*r00*sj4);
IkReal x2071=((0.27144)*cj3*cj4);
evalcond[0]=(((r02*x2046))+(((-1.0)*x2067))+(((0.10827950965428)*r01*x2054))+px+(((-0.18234135315471)*x2065))+((x2057*x2058))+(((-0.18234135315471)*x2058))+(((-1.0)*x2048*x2061))+((cj5*r00*x2061))+(((0.0838945627463637)*r02)));
evalcond[1]=(((r22*x2046))+((x2053*x2057))+((x2049*x2057))+(((-1.0)*x2066))+pz+(((-0.18234135315471)*x2049))+((x2047*x2061))+(((-0.216558867852667)*r21*x2051))+(((-0.18234135315471)*x2053))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.0678600949192303)*r01*sj3*x2054))+((x2052*x2058))+((x2056*x2064))+(((0.135720094919197)*x2063*x2065))+(((0.135720094919197)*x2050*x2051))+(((-1.0)*x2047*x2062))+(((-1.0)*x2066))+(((-0.0160344678271334)*x2059))+(((-0.0648043305514941)*x2049))+(((-1.0)*r02*x2056))+(((-1.0)*x2049*x2055))+((x2058*x2069))+pz+(((0.235073880801598)*r02*x2063))+(((0.0160344678271334)*r22))+(((-1.0)*x2053*x2055))+(((-0.0648043305514941)*x2053))+((x2048*x2071))+(((-1.0)*x2048*x2068))+(((0.0185150129489311)*r21*x2051))+((cj5*r00*x2068))+(((-0.27144)*x2050*x2054))+((x2052*x2065)));
evalcond[3]=((((-0.135720094919197)*r21*sj3*x2051))+(((0.0648043305514941)*x2058))+(((0.00925751294893567)*r01*x2054))+((x2055*x2058))+((x2052*x2053))+(((-0.0160344678271334)*r02))+((x2049*x2052))+x2067+(((-1.0)*r22*x2056))+((x2049*x2069))+(((0.0648043305514941)*x2065))+(((-1.0)*x2047*x2071))+(((0.235073880801598)*r22*x2063))+(((0.0160344678271334)*x2064))+(((0.135720094919197)*x2049*x2063))+(((-1.0)*px))+((x2060*x2071))+((x2047*x2068))+(((-1.0)*x2048*x2062))+((x2056*x2059))+(((0.135720094919197)*cj3*r20*x2051))+((cj5*r00*x2062))+((x2053*x2069)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2072=(r02*sj1);
IkReal x2073=(cj1*cj4);
IkReal x2074=((0.749999650312296)*r22);
IkReal x2075=(cj4*sj1);
IkReal x2076=((0.250000349687704)*r22);
IkReal x2077=((0.433012903784321)*r00*sj5);
IkReal x2078=((0.433012903784321)*r20*sj5);
IkReal x2079=((0.433012903784321)*cj5*r01);
IkReal x2080=((0.433012903784321)*cj5*r21);
IkReal x2081=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2082=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2083=((0.866025201892125)*r01*sj4*sj5);
IkReal x2084=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2075*x2078))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2081))+((cj1*x2083))+(((-1.0)*sj1*x2078))+((sj1*x2076))+((cj1*x2079))+((cj1*x2077))+(((-1.0)*x2073*x2079))+(((-1.0)*x2073*x2077))+((x2074*x2075))+(((-0.250000349687704)*cj1*r02))+((x2075*x2080))+(((-0.749999650312296)*r02*x2073))+(((-1.0)*r00*x2082)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2075*x2077))+((x2075*x2079))+(((-1.0)*cj1*x2080))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2083))+((r20*x2082))+(((-1.0)*sj1*x2079))+(((-1.0)*sj1*x2077))+((x2073*x2080))+((cj1*x2076))+(((-1.0)*cj1*x2078))+((r00*x2081))+((x2073*x2074))+((x2073*x2078))+(((0.749999650312296)*cj4*x2072))+(((0.250000349687704)*x2072)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2075*x2078))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2081))+((cj1*x2083))+(((-1.0)*sj1*x2078))+((sj1*x2076))+((cj1*x2079))+((cj1*x2077))+(((-1.0)*x2073*x2079))+(((-1.0)*x2073*x2077))+((x2074*x2075))+(((-0.250000349687704)*cj1*r02))+((x2075*x2080))+(((-0.749999650312296)*r02*x2073))+(((-1.0)*r00*x2082))))+IKsqr((((x2075*x2077))+((x2075*x2079))+(((-1.0)*cj1*x2080))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2083))+((r20*x2082))+(((-1.0)*sj1*x2079))+(((-1.0)*sj1*x2077))+((x2073*x2080))+((cj1*x2076))+(((-1.0)*cj1*x2078))+((r00*x2081))+((x2073*x2074))+((x2073*x2078))+(((0.749999650312296)*cj4*x2072))+(((0.250000349687704)*x2072))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2075*x2078))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2081))+((cj1*x2083))+(((-1.0)*sj1*x2078))+((sj1*x2076))+((cj1*x2079))+((cj1*x2077))+(((-1.0)*x2073*x2079))+(((-1.0)*x2073*x2077))+((x2074*x2075))+(((-0.250000349687704)*cj1*r02))+((x2075*x2080))+(((-0.749999650312296)*r02*x2073))+(((-1.0)*r00*x2082))), (((x2075*x2077))+((x2075*x2079))+(((-1.0)*cj1*x2080))+(((-1.0)*cj1*x2084))+(((-1.0)*sj1*x2083))+((r20*x2082))+(((-1.0)*sj1*x2079))+(((-1.0)*sj1*x2077))+((x2073*x2080))+((cj1*x2076))+(((-1.0)*cj1*x2078))+((r00*x2081))+((x2073*x2074))+((x2073*x2078))+(((0.749999650312296)*cj4*x2072))+(((0.250000349687704)*x2072))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2085=IKcos(j2);
IkReal x2086=IKsin(j2);
IkReal x2087=((0.433012903784321)*sj3);
IkReal x2088=((0.749999650312296)*sj3);
IkReal x2089=(r00*sj5);
IkReal x2090=(cj4*cj5);
IkReal x2091=((1.0)*cj3);
IkReal x2092=(cj5*r01);
IkReal x2093=(r21*sj3);
IkReal x2094=(cj4*sj5);
IkReal x2095=(cj3*r21);
IkReal x2096=((0.500000349687582)*sj4);
IkReal x2097=((0.433012903784321)*r20);
IkReal x2098=(cj4*r22);
IkReal x2099=(r20*sj5);
IkReal x2100=((0.0160344678271334)*r02);
IkReal x2101=(cj4*r02);
IkReal x2102=(r01*sj5);
IkReal x2103=(cj5*r00);
IkReal x2104=((0.0185150129489311)*sj4);
IkReal x2105=(r21*sj5);
IkReal x2106=(cj5*r21);
IkReal x2107=((0.866025201892125)*sj4);
IkReal x2108=(cj5*r20);
IkReal x2109=((0.250000349687704)*sj3);
IkReal x2110=(sj1*x2085);
IkReal x2111=(cj1*x2085);
IkReal x2112=(sj1*x2086);
IkReal x2113=(cj1*x2086);
IkReal x2114=((1.0)*x2113);
evalcond[0]=((((0.433012903784321)*x2106))+(((-0.250000349687704)*r22))+(((-1.0)*x2107*x2108))+(((-1.0)*x2094*x2097))+(((-0.433012903784321)*r21*x2090))+x2111+x2112+((sj5*x2097))+((x2105*x2107))+(((-0.749999650312296)*x2098)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x2103*x2107))+(((0.433012903784321)*x2089))+x2110+((x2102*x2107))+(((-0.433012903784321)*r01*x2090))+(((-0.749999650312296)*x2101))+(((-1.0)*x2114))+(((-0.433012903784321)*cj4*x2089))+(((0.433012903784321)*x2092)));
evalcond[2]=((((0.0160344678271334)*x2098))+((x2104*x2108))+(((-0.27144)*x2112))+(((-0.27144)*x2111))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2094))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2090))+(((0.0648043305514941)*x2106))+(((-1.0)*x2104*x2105))+(((0.0648043305514941)*x2099)));
evalcond[3]=(((cj4*x2100))+(((0.0648043305514941)*x2089))+(((-1.0)*x2102*x2104))+(((-1.0)*x2100))+(((-0.27144)*x2110))+(((0.41)*sj1))+((x2103*x2104))+(((0.00925751294893567)*cj4*x2089))+(((-1.0)*px))+(((0.27144)*x2113))+(((0.00925751294893567)*r01*x2090))+(((0.0648043305514941)*x2092)));
evalcond[4]=((((-1.0)*r20*x2090*x2091))+((sj3*x2096*x2108))+((x2094*x2095))+(((-1.0)*r22*x2087))+((cj3*x2096*x2099))+((r20*x2094*x2109))+((x2087*x2098))+((x2088*x2099))+x2110+((cj5*x2095*x2096))+(((0.250000349687704)*x2090*x2093))+((x2088*x2106))+(((-1.0)*x2114))+((cj3*r22*x2107))+(((-1.0)*sj5*x2093*x2096)));
evalcond[5]=((((-1.0)*r02*x2087))+(((-1.0)*sj3*x2096*x2102))+((sj3*x2096*x2103))+((x2088*x2092))+((cj3*x2089*x2096))+((cj3*x2092*x2096))+((cj3*r01*x2094))+((x2088*x2089))+(((-1.0)*r00*x2090*x2091))+((r01*x2090*x2109))+((cj3*r02*x2107))+((cj4*x2089*x2109))+(((-1.0)*x2112))+(((-1.0)*x2111))+((x2087*x2101)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2115=(cj4*sj5);
IkReal x2116=(cj0*r00);
IkReal x2117=(cj0*r02);
IkReal x2118=(cj5*r21);
IkReal x2119=((0.216558867852667)*sj4);
IkReal x2120=((0.528192360616262)*sj4);
IkReal x2121=(cj0*cj5*r01);
CheckValue<IkReal> x2122=IKPowWithIntegerCheck(cj0,-2);
if(!x2122.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2122.value)*(((((-0.0838945627463637)*x2117))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x2116*x2119))+(((0.18234135315471)*sj5*x2116))+(((-0.10827950965428)*cj4*x2121))+(((-0.10827950965428)*x2115*x2116))+(((0.18234135315471)*x2121))+(((-0.187545437253636)*cj4*x2117))+((cj0*r01*sj5*x2119))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2118))+(((-0.444735007694415)*x2118))+(((0.26409636501044)*r20*x2115))+(((-1.0)*r21*sj5*x2120))+(((2.4390243902439)*pz))+((cj5*r20*x2120)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2122.value)*(((((-0.0838945627463637)*x2117))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x2116*x2119))+(((0.18234135315471)*sj5*x2116))+(((-0.10827950965428)*cj4*x2121))+(((-0.10827950965428)*x2115*x2116))+(((0.18234135315471)*x2121))+(((-0.187545437253636)*cj4*x2117))+((cj0*r01*sj5*x2119))+(((-1.0)*cj0*px))))))+IKsqr(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2118))+(((-0.444735007694415)*x2118))+(((0.26409636501044)*r20*x2115))+(((-1.0)*r21*sj5*x2120))+(((2.4390243902439)*pz))+((cj5*r20*x2120))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2122.value)*(((((-0.0838945627463637)*x2117))+(((0.0098)*cj0*sj0))+(((-1.0)*cj5*x2116*x2119))+(((0.18234135315471)*sj5*x2116))+(((-0.10827950965428)*cj4*x2121))+(((-0.10827950965428)*x2115*x2116))+(((0.18234135315471)*x2121))+(((-0.187545437253636)*cj4*x2117))+((cj0*r01*sj5*x2119))+(((-1.0)*cj0*px))))), ((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2118))+(((-0.444735007694415)*x2118))+(((0.26409636501044)*r20*x2115))+(((-1.0)*r21*sj5*x2120))+(((2.4390243902439)*pz))+((cj5*r20*x2120))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2123=IKsin(j1);
IkReal x2124=IKcos(j1);
IkReal x2125=sj0*sj0;
IkReal x2126=cj0*cj0;
IkReal x2127=((0.0098)*cj0);
IkReal x2128=(cj0*cj5);
IkReal x2129=(cj5*sj0);
IkReal x2130=((0.0648043305514941)*r21);
IkReal x2131=(r00*sj5);
IkReal x2132=((0.20357990508077)*sj3);
IkReal x2133=((0.135720094919197)*r21);
IkReal x2134=((1.0)*px);
IkReal x2135=((0.117537022603216)*sj3);
IkReal x2136=((0.00925751294893567)*cj4);
IkReal x2137=(r10*sj4);
IkReal x2138=(sj0*sj5);
IkReal x2139=(cj4*sj0);
IkReal x2140=(r20*sj5);
IkReal x2141=((0.10827950965428)*cj4);
IkReal x2142=(cj3*sj4);
IkReal x2143=((0.135720094919197)*sj5);
IkReal x2144=((0.117537022603216)*r11);
IkReal x2145=(cj5*r01);
IkReal x2146=(cj4*r02);
IkReal x2147=((0.117537022603216)*cj4);
IkReal x2148=((0.0160344678271334)*r02);
IkReal x2149=((0.0648043305514941)*r11);
IkReal x2150=((0.0160344678271334)*r12);
IkReal x2151=(cj0*cj4);
IkReal x2152=(cj5*sj3);
IkReal x2153=((0.0678600949192303)*cj4);
IkReal x2154=(r10*sj5);
IkReal x2155=((1.0)*py);
IkReal x2156=(cj5*r00);
IkReal x2157=(cj0*r21);
IkReal x2158=(r11*sj5);
IkReal x2159=((0.0160344678271334)*r22);
IkReal x2160=(r00*sj4);
IkReal x2161=((1.0)*pz);
IkReal x2162=(r22*sj0);
IkReal x2163=(sj3*sj4);
IkReal x2164=(cj5*r21);
IkReal x2165=(r21*sj3);
IkReal x2166=(cj0*r22);
IkReal x2167=((0.0185150129489311)*sj4);
IkReal x2168=(cj5*r11);
IkReal x2169=(r01*sj5);
IkReal x2170=((0.216558867852667)*sj4);
IkReal x2171=((0.135720094919197)*r20);
IkReal x2172=(sj0*x2127);
IkReal x2173=(sj4*x2138);
IkReal x2174=((0.27144)*cj3*cj4);
IkReal x2175=(r11*x2136);
IkReal x2176=((0.41)*x2123);
IkReal x2177=(cj0*x2154);
IkReal x2178=(sj5*x2167);
IkReal x2179=((0.41)*x2124);
IkReal x2180=(cj0*sj0*x2176);
evalcond[0]=((((-1.0)*r21*sj5*x2170))+((cj5*r20*x2170))+(((-0.18234135315471)*x2164))+(((0.187545437253636)*cj4*r22))+((x2140*x2141))+pz+(((-1.0)*x2179))+(((0.0838945627463637)*r22))+((x2141*x2164))+(((-0.18234135315471)*x2140)));
evalcond[1]=((((-0.216558867852667)*x2129*x2137))+(((-1.0)*r11*x2129*x2141))+(((-0.187545437253636)*r12*x2139))+(((0.18234135315471)*r10*x2138))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*r10*x2138*x2141))+(((-1.0)*x2172))+(((0.18234135315471)*r11*x2129))+((r11*x2138*x2170))+(((-1.0)*x2125*x2176))+(((-1.0)*sj0*x2155)));
evalcond[2]=((((0.18234135315471)*cj0*x2131))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*x2126*x2176))+x2172+(((-0.187545437253636)*cj0*x2146))+(((-0.216558867852667)*x2128*x2160))+((cj0*x2169*x2170))+(((-1.0)*cj0*x2134))+(((-1.0)*r01*x2128*x2141))+(((0.18234135315471)*r01*x2128))+(((-1.0)*cj0*x2131*x2141)));
evalcond[3]=(((x2132*x2168))+((x2139*x2159))+((r20*x2136*x2138))+((cj3*x2137*x2143))+(((0.0648043305514941)*r20*x2138))+(((0.135720094919197)*x2137*x2152))+(((-1.0)*r12*x2135))+(((-1.0)*r21*x2138*x2167))+(((-1.0)*cj5*r10*x2174))+((sj3*x2153*x2154))+(((0.135720094919197)*x2142*x2168))+(((0.235073880801598)*r12*x2142))+((cj4*r12*x2135))+((r21*x2129*x2136))+(((-1.0)*r11*x2143*x2163))+((r11*x2152*x2153))+((x2129*x2130))+((x2158*x2174))+((r20*x2129*x2167))+((sj0*x2179))+((x2132*x2154))+(((-1.0)*sj0*x2161))+(((-1.0)*sj0*x2159)));
evalcond[4]=((((0.135720094919197)*x2152*x2160))+(((-1.0)*x2156*x2174))+((x2132*x2145))+((sj3*x2145*x2153))+(((0.135720094919197)*x2142*x2145))+(((0.135720094919197)*x2131*x2142))+(((-1.0)*cj0*x2159))+((cj0*x2136*x2140))+((r20*x2128*x2167))+((x2131*x2132))+((cj0*x2179))+((r21*x2128*x2136))+(((-1.0)*r01*x2143*x2163))+(((0.235073880801598)*r02*x2142))+(((-1.0)*cj0*x2161))+(((-1.0)*x2157*x2178))+((x2151*x2159))+(((0.0648043305514941)*cj0*x2140))+((x2128*x2130))+((x2135*x2146))+((x2169*x2174))+(((-1.0)*r02*x2135))+((sj3*x2131*x2153)));
evalcond[5]=((((-0.235073880801598)*x2142*x2162))+(((-1.0)*r21*x2138*x2174))+((x2133*x2138*x2163))+((r20*x2129*x2174))+(((-1.0)*x2129*x2133*x2142))+((x2135*x2162))+(((-1.0)*x2138*x2142*x2171))+(((0.0185150129489311)*cj5*x2137))+(((0.0648043305514941)*x2154))+(((-1.0)*x2129*x2153*x2165))+(((-1.0)*r21*x2129*x2132))+(((-1.0)*r22*x2135*x2139))+(((-1.0)*x2158*x2167))+(((-1.0)*x2127))+(((-1.0)*x2150))+(((-1.0)*x2155))+(((-1.0)*r20*x2132*x2138))+((x2136*x2154))+(((-1.0)*r20*sj3*x2138*x2153))+(((-1.0)*sj0*x2176))+((x2136*x2168))+((cj5*x2149))+(((-1.0)*x2129*x2163*x2171))+((cj4*x2150)));
evalcond[6]=((((-0.235073880801598)*x2142*x2166))+(((-1.0)*x2128*x2133*x2142))+(((-0.0678600949192303)*sj3*x2140*x2151))+((x2131*x2136))+((cj0*sj5*x2133*x2163))+(((-1.0)*x2134))+((r20*x2128*x2174))+(((-1.0)*cj0*x2176))+(((-1.0)*r22*x2135*x2151))+(((-1.0)*x2128*x2163*x2171))+((x2135*x2166))+(((0.0648043305514941)*x2145))+(((0.0160344678271334)*x2146))+(((-1.0)*x2148))+((x2156*x2167))+(((-0.135720094919197)*cj0*x2140*x2142))+(((-0.27144)*cj3*r21*sj5*x2151))+(((0.0648043305514941)*x2131))+(((-1.0)*r21*x2128*x2132))+((x2136*x2145))+(((-1.0)*x2167*x2169))+(((-1.0)*x2128*x2153*x2165))+(((0.0098)*sj0))+(((-1.0)*cj0*x2132*x2140)));
evalcond[7]=((((-0.0678600949192303)*cj0*r12))+(((-1.0)*x2147*x2177))+(((0.117537022603216)*x2177))+(((-0.235073880801598)*x2128*x2137))+((r01*x2129*x2136))+(((-1.0)*sj0*x2134))+((x2128*x2144))+(((0.235073880801598)*cj0*sj4*x2158))+(((-1.0)*r01*x2138*x2167))+(((-0.20357990508077)*r12*x2151))+(((0.0185150129489311)*x2129*x2160))+(((0.0648043305514941)*r01*x2129))+(((-1.0)*x2180))+(((0.0098)*x2125))+(((0.0648043305514941)*sj0*x2131))+(((-1.0)*sj0*x2148))+((sj0*x2131*x2136))+(((-1.0)*cj4*x2128*x2144))+((x2139*x2148)));
evalcond[8]=(((x2128*x2175))+(((-0.0098)*x2126))+(((-1.0)*cj0*x2155))+(((-1.0)*cj0*x2150))+(((-1.0)*r01*x2129*x2147))+(((0.0185150129489311)*x2128*x2137))+(((0.117537022603216)*sj0*x2131))+(((-0.117537022603216)*x2131*x2139))+(((-1.0)*cj0*x2158*x2167))+(((0.117537022603216)*r01*x2129))+(((0.0648043305514941)*x2177))+((x2128*x2149))+((x2150*x2151))+(((-1.0)*x2180))+(((-0.20357990508077)*r02*x2139))+(((-0.235073880801598)*x2129*x2160))+(((-0.0678600949192303)*r02*sj0))+(((0.235073880801598)*r01*x2173))+((x2136*x2177)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2181=((0.250000349687704)*sj1);
IkReal x2182=(cj1*cj4);
IkReal x2183=((0.749999650312296)*r22);
IkReal x2184=(cj4*sj1);
IkReal x2185=((0.749999650312296)*r02);
IkReal x2186=((0.250000349687704)*cj1);
IkReal x2187=((0.433012903784321)*r00*sj5);
IkReal x2188=((0.433012903784321)*r20*sj5);
IkReal x2189=((0.433012903784321)*cj5*r01);
IkReal x2190=((0.433012903784321)*cj5*r21);
IkReal x2191=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2192=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2193=((0.866025201892125)*r01*sj4*sj5);
IkReal x2194=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r22*x2181))+((x2183*x2184))+((x2182*x2189))+((x2182*x2185))+((x2182*x2187))+((r20*x2191))+(((-1.0)*sj1*x2188))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2190))+((r02*x2186))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2187))+(((-1.0)*cj1*x2189))+((x2184*x2188))+((r00*x2192))+((x2184*x2190)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2186))+((sj1*x2193))+((x2182*x2188))+((x2182*x2183))+((sj1*x2189))+((sj1*x2187))+((r20*x2192))+((x2182*x2190))+(((-1.0)*r02*x2181))+(((-1.0)*x2184*x2187))+(((-1.0)*x2184*x2185))+(((-1.0)*x2184*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+(((-1.0)*r00*x2191)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x2181))+((x2183*x2184))+((x2182*x2189))+((x2182*x2185))+((x2182*x2187))+((r20*x2191))+(((-1.0)*sj1*x2188))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2190))+((r02*x2186))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2187))+(((-1.0)*cj1*x2189))+((x2184*x2188))+((r00*x2192))+((x2184*x2190))))+IKsqr((((r22*x2186))+((sj1*x2193))+((x2182*x2188))+((x2182*x2183))+((sj1*x2189))+((sj1*x2187))+((r20*x2192))+((x2182*x2190))+(((-1.0)*r02*x2181))+(((-1.0)*x2184*x2187))+(((-1.0)*x2184*x2185))+(((-1.0)*x2184*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+(((-1.0)*r00*x2191))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x2181))+((x2183*x2184))+((x2182*x2189))+((x2182*x2185))+((x2182*x2187))+((r20*x2191))+(((-1.0)*sj1*x2188))+(((-1.0)*sj1*x2194))+(((-1.0)*sj1*x2190))+((r02*x2186))+(((-1.0)*cj1*x2193))+(((-1.0)*cj1*x2187))+(((-1.0)*cj1*x2189))+((x2184*x2188))+((r00*x2192))+((x2184*x2190))), (((r22*x2186))+((sj1*x2193))+((x2182*x2188))+((x2182*x2183))+((sj1*x2189))+((sj1*x2187))+((r20*x2192))+((x2182*x2190))+(((-1.0)*r02*x2181))+(((-1.0)*x2184*x2187))+(((-1.0)*x2184*x2185))+(((-1.0)*x2184*x2189))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+(((-1.0)*r00*x2191))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2195=IKsin(j2);
IkReal x2196=IKcos(j2);
IkReal x2197=((0.749999650312296)*sj3);
IkReal x2198=(cj5*r01);
IkReal x2199=(r00*sj5);
IkReal x2200=(cj4*cj5);
IkReal x2201=((1.0)*cj3);
IkReal x2202=(r21*sj3);
IkReal x2203=(cj4*sj5);
IkReal x2204=(cj3*r21);
IkReal x2205=((0.500000349687582)*sj4);
IkReal x2206=((0.433012903784321)*r20);
IkReal x2207=(cj4*r22);
IkReal x2208=((0.433012903784321)*sj3);
IkReal x2209=((0.433012903784321)*cj4);
IkReal x2210=(r01*sj5);
IkReal x2211=(r20*sj5);
IkReal x2212=((0.0160344678271334)*r02);
IkReal x2213=(cj4*r02);
IkReal x2214=((0.00925751294893567)*cj4);
IkReal x2215=((0.0185150129489311)*sj4);
IkReal x2216=(r21*sj5);
IkReal x2217=(cj5*r21);
IkReal x2218=((0.866025201892125)*sj4);
IkReal x2219=(cj5*r20);
IkReal x2220=(cj5*r00);
IkReal x2221=((0.250000349687704)*sj3);
IkReal x2222=(cj1*x2196);
IkReal x2223=(sj1*x2195);
IkReal x2224=(cj1*x2195);
IkReal x2225=(sj1*x2196);
IkReal x2226=(x2222+x2223);
evalcond[0]=((((-1.0)*x2203*x2206))+(((-0.250000349687704)*r22))+x2226+(((-1.0)*x2218*x2219))+(((-0.749999650312296)*x2207))+((x2216*x2218))+(((-0.433012903784321)*r21*x2200))+(((0.433012903784321)*x2217))+((sj5*x2206)));
evalcond[1]=((((-0.250000349687704)*r02))+x2224+((x2210*x2218))+(((-0.749999650312296)*x2213))+(((0.433012903784321)*x2198))+(((0.433012903784321)*x2199))+(((-1.0)*x2198*x2209))+(((-1.0)*x2225))+(((-1.0)*x2199*x2209))+(((-1.0)*x2218*x2220)));
evalcond[2]=((((0.00925751294893567)*r21*x2200))+(((0.00925751294893567)*r20*x2203))+(((-1.0)*x2215*x2216))+(((-0.27144)*x2223))+(((-0.27144)*x2222))+(((0.0648043305514941)*x2211))+(((0.0648043305514941)*x2217))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x2215*x2219))+(((0.0160344678271334)*x2207)));
evalcond[3]=((((-1.0)*x2210*x2215))+((x2198*x2214))+((cj4*x2212))+((x2215*x2220))+(((-1.0)*x2212))+(((0.0648043305514941)*x2198))+(((0.0648043305514941)*x2199))+(((0.27144)*x2225))+(((-0.27144)*x2224))+(((-0.41)*sj1))+(((-1.0)*px))+((x2199*x2214)));
evalcond[4]=(x2226+((cj3*r02*x2218))+((cj3*x2198*x2205))+((sj3*x2205*x2220))+((cj3*x2199*x2205))+((cj4*x2198*x2221))+((cj4*x2199*x2221))+(((-1.0)*r00*x2200*x2201))+(((-1.0)*sj3*x2205*x2210))+((x2197*x2198))+((x2197*x2199))+((x2208*x2213))+(((-1.0)*r02*x2208))+((cj3*r01*x2203)));
evalcond[5]=(((cj3*r22*x2218))+x2225+((cj3*x2205*x2211))+(((-1.0)*r20*x2200*x2201))+((r20*x2203*x2221))+(((-1.0)*r22*x2208))+((x2203*x2204))+(((-1.0)*sj5*x2202*x2205))+((cj5*x2204*x2205))+(((-1.0)*x2224))+((x2207*x2208))+((x2197*x2211))+((x2197*x2217))+((sj3*x2205*x2219))+(((0.250000349687704)*x2200*x2202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2227=(r02*sj1);
IkReal x2228=(cj1*cj4);
IkReal x2229=((0.749999650312296)*r22);
IkReal x2230=(cj4*sj1);
IkReal x2231=((0.250000349687704)*r22);
IkReal x2232=((0.433012903784321)*r00*sj5);
IkReal x2233=((0.433012903784321)*r20*sj5);
IkReal x2234=((0.433012903784321)*cj5*r01);
IkReal x2235=((0.433012903784321)*cj5*r21);
IkReal x2236=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2237=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2238=((0.866025201892125)*r01*sj4*sj5);
IkReal x2239=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2229*x2230))+(((-0.749999650312296)*r02*x2228))+((sj1*x2231))+(((-1.0)*x2228*x2234))+(((-1.0)*x2228*x2232))+(((-1.0)*r00*x2237))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2236))+((x2230*x2235))+((x2230*x2233))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238))+((cj1*x2232))+((cj1*x2234)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x2227))+(((-1.0)*cj1*x2239))+(((-1.0)*cj1*x2233))+(((-1.0)*cj1*x2235))+((x2228*x2235))+((x2228*x2233))+(((0.749999650312296)*cj4*x2227))+((x2228*x2229))+(((-1.0)*sj1*x2238))+(((-1.0)*sj1*x2234))+(((-1.0)*sj1*x2232))+((r20*x2237))+((x2230*x2234))+((x2230*x2232))+((r00*x2236))+((cj1*x2231)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2229*x2230))+(((-0.749999650312296)*r02*x2228))+((sj1*x2231))+(((-1.0)*x2228*x2234))+(((-1.0)*x2228*x2232))+(((-1.0)*r00*x2237))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2236))+((x2230*x2235))+((x2230*x2233))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238))+((cj1*x2232))+((cj1*x2234))))+IKsqr(((((0.250000349687704)*x2227))+(((-1.0)*cj1*x2239))+(((-1.0)*cj1*x2233))+(((-1.0)*cj1*x2235))+((x2228*x2235))+((x2228*x2233))+(((0.749999650312296)*cj4*x2227))+((x2228*x2229))+(((-1.0)*sj1*x2238))+(((-1.0)*sj1*x2234))+(((-1.0)*sj1*x2232))+((r20*x2237))+((x2230*x2234))+((x2230*x2232))+((r00*x2236))+((cj1*x2231))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2229*x2230))+(((-0.749999650312296)*r02*x2228))+((sj1*x2231))+(((-1.0)*x2228*x2234))+(((-1.0)*x2228*x2232))+(((-1.0)*r00*x2237))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2236))+((x2230*x2235))+((x2230*x2233))+(((-0.250000349687704)*cj1*r02))+((cj1*x2238))+((cj1*x2232))+((cj1*x2234))), ((((0.250000349687704)*x2227))+(((-1.0)*cj1*x2239))+(((-1.0)*cj1*x2233))+(((-1.0)*cj1*x2235))+((x2228*x2235))+((x2228*x2233))+(((0.749999650312296)*cj4*x2227))+((x2228*x2229))+(((-1.0)*sj1*x2238))+(((-1.0)*sj1*x2234))+(((-1.0)*sj1*x2232))+((r20*x2237))+((x2230*x2234))+((x2230*x2232))+((r00*x2236))+((cj1*x2231))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2240=IKcos(j2);
IkReal x2241=IKsin(j2);
IkReal x2242=((0.433012903784321)*sj3);
IkReal x2243=((0.749999650312296)*sj3);
IkReal x2244=(r00*sj5);
IkReal x2245=(cj4*cj5);
IkReal x2246=((1.0)*cj3);
IkReal x2247=(cj5*r01);
IkReal x2248=(r21*sj3);
IkReal x2249=(cj4*sj5);
IkReal x2250=(cj3*r21);
IkReal x2251=((0.500000349687582)*sj4);
IkReal x2252=((0.433012903784321)*r20);
IkReal x2253=(cj4*r22);
IkReal x2254=(r20*sj5);
IkReal x2255=((0.0160344678271334)*r02);
IkReal x2256=(cj4*r02);
IkReal x2257=(r01*sj5);
IkReal x2258=(cj5*r00);
IkReal x2259=((0.0185150129489311)*sj4);
IkReal x2260=(r21*sj5);
IkReal x2261=(cj5*r21);
IkReal x2262=((0.866025201892125)*sj4);
IkReal x2263=(cj5*r20);
IkReal x2264=((0.250000349687704)*sj3);
IkReal x2265=(sj1*x2240);
IkReal x2266=(cj1*x2240);
IkReal x2267=(sj1*x2241);
IkReal x2268=(cj1*x2241);
IkReal x2269=((1.0)*x2268);
evalcond[0]=(((x2260*x2262))+(((-1.0)*x2249*x2252))+(((-0.250000349687704)*r22))+x2266+x2267+(((-0.749999650312296)*x2253))+((sj5*x2252))+(((-1.0)*x2262*x2263))+(((0.433012903784321)*x2261))+(((-0.433012903784321)*r21*x2245)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*cj4*x2244))+x2265+((x2257*x2262))+(((-0.433012903784321)*r01*x2245))+(((-0.749999650312296)*x2256))+(((-1.0)*x2258*x2262))+(((-1.0)*x2269))+(((0.433012903784321)*x2247))+(((0.433012903784321)*x2244)));
evalcond[2]=((((-0.27144)*x2267))+(((-0.27144)*x2266))+((x2259*x2263))+(((0.0160344678271334)*x2253))+(((0.41)*cj1))+(((0.0648043305514941)*x2261))+(((-0.0160344678271334)*r22))+(((-1.0)*x2259*x2260))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x2249))+(((0.00925751294893567)*r21*x2245))+(((0.0648043305514941)*x2254)));
evalcond[3]=((((-0.27144)*x2265))+(((0.0648043305514941)*x2247))+(((0.0648043305514941)*x2244))+(((0.00925751294893567)*r01*x2245))+(((-1.0)*x2257*x2259))+(((0.41)*sj1))+(((0.27144)*x2268))+((x2258*x2259))+(((-1.0)*x2255))+(((-1.0)*px))+(((0.00925751294893567)*cj4*x2244))+((cj4*x2255)));
evalcond[4]=((((-1.0)*r20*x2245*x2246))+((cj3*r22*x2262))+x2265+(((-1.0)*r22*x2242))+((sj3*x2251*x2263))+((cj3*x2251*x2254))+(((-1.0)*sj5*x2248*x2251))+((x2243*x2254))+((x2249*x2250))+((cj5*x2250*x2251))+((x2243*x2261))+(((0.250000349687704)*x2245*x2248))+((r20*x2249*x2264))+(((-1.0)*x2269))+((x2242*x2253)));
evalcond[5]=((((-1.0)*sj3*x2251*x2257))+(((-1.0)*r02*x2242))+((x2243*x2247))+((x2243*x2244))+((cj3*x2247*x2251))+((cj3*x2244*x2251))+(((-1.0)*r00*x2245*x2246))+((cj3*r02*x2262))+((r01*x2245*x2264))+((cj4*x2244*x2264))+((sj3*x2251*x2258))+(((-1.0)*x2266))+(((-1.0)*x2267))+((cj3*r01*x2249))+((x2242*x2256)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2270=((0.250000349687704)*r12);
IkReal x2271=((0.749999650312296)*cj4);
IkReal x2272=((0.433012903784321)*sj5);
IkReal x2273=(cj1*r10);
IkReal x2274=(cj1*r22);
IkReal x2275=(cj1*r20);
IkReal x2276=((0.866025201892125)*sj4);
IkReal x2277=(r20*sj1);
IkReal x2278=(r22*sj1);
IkReal x2279=(r10*sj1);
IkReal x2280=(r11*sj1);
IkReal x2281=((0.433012903784321)*cj5);
IkReal x2282=(r21*sj1);
IkReal x2283=(cj1*r21);
IkReal x2284=(cj1*r11);
IkReal x2285=(cj5*sj1*x2276);
IkReal x2286=(cj4*r21*x2281);
if( IKabs((((cj5*x2276*x2277))+((cj1*x2270))+((cj5*x2273*x2276))+(((-1.0)*x2281*x2284))+(((-1.0)*x2281*x2282))+(((-1.0)*sj5*x2276*x2284))+(((-1.0)*sj5*x2276*x2282))+((cj1*r12*x2271))+(((0.250000349687704)*x2278))+(((-1.0)*x2272*x2277))+(((-1.0)*x2272*x2273))+((cj4*x2272*x2273))+((cj4*x2272*x2277))+((cj4*x2281*x2284))+((cj4*x2281*x2282))+((x2271*x2278)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2280*x2281))+((cj5*x2275*x2276))+(((-1.0)*r12*sj1*x2271))+(((-1.0)*x2281*x2283))+((x2272*x2279))+(((-1.0)*sj1*x2270))+(((-1.0)*sj5*x2276*x2283))+(((0.250000349687704)*x2274))+(((-1.0)*cj4*x2272*x2279))+(((-1.0)*cj5*x2276*x2279))+(((-1.0)*x2272*x2275))+((sj5*x2276*x2280))+((cj4*x2272*x2275))+((cj4*x2281*x2283))+((x2271*x2274))+(((-1.0)*cj4*x2280*x2281)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x2276*x2277))+((cj1*x2270))+((cj5*x2273*x2276))+(((-1.0)*x2281*x2284))+(((-1.0)*x2281*x2282))+(((-1.0)*sj5*x2276*x2284))+(((-1.0)*sj5*x2276*x2282))+((cj1*r12*x2271))+(((0.250000349687704)*x2278))+(((-1.0)*x2272*x2277))+(((-1.0)*x2272*x2273))+((cj4*x2272*x2273))+((cj4*x2272*x2277))+((cj4*x2281*x2284))+((cj4*x2281*x2282))+((x2271*x2278))))+IKsqr((((x2280*x2281))+((cj5*x2275*x2276))+(((-1.0)*r12*sj1*x2271))+(((-1.0)*x2281*x2283))+((x2272*x2279))+(((-1.0)*sj1*x2270))+(((-1.0)*sj5*x2276*x2283))+(((0.250000349687704)*x2274))+(((-1.0)*cj4*x2272*x2279))+(((-1.0)*cj5*x2276*x2279))+(((-1.0)*x2272*x2275))+((sj5*x2276*x2280))+((cj4*x2272*x2275))+((cj4*x2281*x2283))+((x2271*x2274))+(((-1.0)*cj4*x2280*x2281))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x2276*x2277))+((cj1*x2270))+((cj5*x2273*x2276))+(((-1.0)*x2281*x2284))+(((-1.0)*x2281*x2282))+(((-1.0)*sj5*x2276*x2284))+(((-1.0)*sj5*x2276*x2282))+((cj1*r12*x2271))+(((0.250000349687704)*x2278))+(((-1.0)*x2272*x2277))+(((-1.0)*x2272*x2273))+((cj4*x2272*x2273))+((cj4*x2272*x2277))+((cj4*x2281*x2284))+((cj4*x2281*x2282))+((x2271*x2278))), (((x2280*x2281))+((cj5*x2275*x2276))+(((-1.0)*r12*sj1*x2271))+(((-1.0)*x2281*x2283))+((x2272*x2279))+(((-1.0)*sj1*x2270))+(((-1.0)*sj5*x2276*x2283))+(((0.250000349687704)*x2274))+(((-1.0)*cj4*x2272*x2279))+(((-1.0)*cj5*x2276*x2279))+(((-1.0)*x2272*x2275))+((sj5*x2276*x2280))+((cj4*x2272*x2275))+((cj4*x2281*x2283))+((x2271*x2274))+(((-1.0)*cj4*x2280*x2281))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2287=IKsin(j2);
IkReal x2288=IKcos(j2);
IkReal x2289=(cj5*r11);
IkReal x2290=((0.433012903784321)*cj4);
IkReal x2291=(r21*sj5);
IkReal x2292=((0.500000349687582)*sj4);
IkReal x2293=((0.749999650312296)*sj3);
IkReal x2294=(cj3*cj4);
IkReal x2295=(cj5*r10);
IkReal x2296=((0.0185150129489311)*sj4);
IkReal x2297=(r20*sj5);
IkReal x2298=(cj4*r22);
IkReal x2299=(r10*sj5);
IkReal x2300=(r22*sj3);
IkReal x2301=(r11*sj5);
IkReal x2302=((0.00925751294893567)*cj4);
IkReal x2303=(cj5*r21);
IkReal x2304=(r12*sj3);
IkReal x2305=(cj4*r12);
IkReal x2306=(cj5*r20);
IkReal x2307=((0.866025201892125)*sj4);
IkReal x2308=(cj1*x2288);
IkReal x2309=(sj1*x2287);
IkReal x2310=(cj1*x2287);
IkReal x2311=((0.250000349687704)*cj4*sj3);
IkReal x2312=(sj1*x2288);
IkReal x2313=(cj3*x2307);
IkReal x2314=(x2309+x2308);
evalcond[0]=((((-1.0)*x2306*x2307))+(((-0.749999650312296)*x2298))+(((-0.250000349687704)*r22))+x2314+(((0.433012903784321)*x2297))+(((-1.0)*x2290*x2303))+((x2291*x2307))+(((-1.0)*x2290*x2297))+(((0.433012903784321)*x2303)));
evalcond[1]=((((-1.0)*x2312))+(((-1.0)*x2289*x2290))+(((-0.250000349687704)*r12))+x2310+(((0.433012903784321)*x2299))+(((-1.0)*x2295*x2307))+(((0.433012903784321)*x2289))+((x2301*x2307))+(((-0.749999650312296)*x2305))+(((-1.0)*x2290*x2299)));
evalcond[2]=((((0.41)*cj1))+(((-0.27144)*x2309))+(((-0.27144)*x2308))+(((-0.0160344678271334)*r22))+((x2297*x2302))+(((0.0160344678271334)*x2298))+((x2296*x2306))+(((0.0648043305514941)*x2303))+(((-1.0)*pz))+(((0.0648043305514941)*x2297))+(((-1.0)*x2291*x2296))+((x2302*x2303)));
evalcond[3]=((((0.27144)*x2312))+(((-0.0160344678271334)*r12))+((x2295*x2296))+(((-1.0)*x2296*x2301))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0648043305514941)*x2299))+((x2299*x2302))+(((-0.27144)*x2310))+(((0.0648043305514941)*x2289))+((x2289*x2302))+(((0.0160344678271334)*x2305)));
evalcond[4]=(((sj3*x2292*x2295))+(((-0.433012903784321)*x2304))+x2314+(((-1.0)*x2294*x2295))+((x2290*x2304))+((x2299*x2311))+((r12*x2313))+((cj3*x2292*x2299))+((x2289*x2293))+(((-1.0)*sj3*x2292*x2301))+((x2293*x2299))+((x2294*x2301))+((x2289*x2311))+((cj3*x2289*x2292)));
evalcond[5]=((((-1.0)*x2310))+(((-1.0)*sj3*x2291*x2292))+((x2293*x2303))+(((-0.433012903784321)*x2300))+x2312+((cj3*x2292*x2303))+((r22*x2313))+((x2291*x2294))+((x2290*x2300))+((cj3*x2292*x2297))+((x2297*x2311))+(((-1.0)*x2294*x2306))+((x2293*x2297))+((sj3*x2292*x2306))+((x2303*x2311)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2315=((0.250000349687704)*r12);
IkReal x2316=((0.749999650312296)*cj4);
IkReal x2317=(cj1*r22);
IkReal x2318=((0.866025201892125)*sj4);
IkReal x2319=(cj1*r20);
IkReal x2320=(sj1*sj5);
IkReal x2321=((0.433012903784321)*r20);
IkReal x2322=((0.433012903784321)*sj5);
IkReal x2323=(cj1*r10);
IkReal x2324=(r22*sj1);
IkReal x2325=((0.433012903784321)*r10);
IkReal x2326=((0.433012903784321)*cj5);
IkReal x2327=(cj1*r21);
IkReal x2328=(cj1*r11);
IkReal x2329=(r11*sj1);
IkReal x2330=(cj1*cj4*x2322);
IkReal x2331=(cj5*sj1*x2318);
IkReal x2332=(cj4*r21*x2326);
if( IKabs((((x2316*x2324))+((cj4*x2320*x2321))+((x2322*x2323))+(((-1.0)*x2320*x2321))+(((-1.0)*cj5*x2318*x2323))+(((-1.0)*cj4*x2322*x2323))+((sj1*x2332))+(((-1.0)*r21*sj1*x2326))+(((-1.0)*r21*x2318*x2320))+(((-1.0)*cj1*r12*x2316))+(((-1.0)*cj4*x2326*x2328))+((x2326*x2328))+(((-1.0)*cj1*x2315))+((sj5*x2318*x2328))+((r20*x2331))+(((0.250000349687704)*x2324)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x2318*x2327))+((x2316*x2317))+((cj5*x2318*x2319))+((cj4*x2320*x2325))+((r12*sj1*x2316))+(((-1.0)*x2320*x2325))+(((-1.0)*r11*x2318*x2320))+(((-1.0)*x2319*x2322))+((sj1*x2315))+((cj4*x2326*x2327))+((cj4*x2326*x2329))+(((-1.0)*x2326*x2329))+(((-1.0)*x2326*x2327))+((cj4*x2319*x2322))+(((0.250000349687704)*x2317))+((r10*x2331)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2316*x2324))+((cj4*x2320*x2321))+((x2322*x2323))+(((-1.0)*x2320*x2321))+(((-1.0)*cj5*x2318*x2323))+(((-1.0)*cj4*x2322*x2323))+((sj1*x2332))+(((-1.0)*r21*sj1*x2326))+(((-1.0)*r21*x2318*x2320))+(((-1.0)*cj1*r12*x2316))+(((-1.0)*cj4*x2326*x2328))+((x2326*x2328))+(((-1.0)*cj1*x2315))+((sj5*x2318*x2328))+((r20*x2331))+(((0.250000349687704)*x2324))))+IKsqr(((((-1.0)*sj5*x2318*x2327))+((x2316*x2317))+((cj5*x2318*x2319))+((cj4*x2320*x2325))+((r12*sj1*x2316))+(((-1.0)*x2320*x2325))+(((-1.0)*r11*x2318*x2320))+(((-1.0)*x2319*x2322))+((sj1*x2315))+((cj4*x2326*x2327))+((cj4*x2326*x2329))+(((-1.0)*x2326*x2329))+(((-1.0)*x2326*x2327))+((cj4*x2319*x2322))+(((0.250000349687704)*x2317))+((r10*x2331))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2316*x2324))+((cj4*x2320*x2321))+((x2322*x2323))+(((-1.0)*x2320*x2321))+(((-1.0)*cj5*x2318*x2323))+(((-1.0)*cj4*x2322*x2323))+((sj1*x2332))+(((-1.0)*r21*sj1*x2326))+(((-1.0)*r21*x2318*x2320))+(((-1.0)*cj1*r12*x2316))+(((-1.0)*cj4*x2326*x2328))+((x2326*x2328))+(((-1.0)*cj1*x2315))+((sj5*x2318*x2328))+((r20*x2331))+(((0.250000349687704)*x2324))), ((((-1.0)*sj5*x2318*x2327))+((x2316*x2317))+((cj5*x2318*x2319))+((cj4*x2320*x2325))+((r12*sj1*x2316))+(((-1.0)*x2320*x2325))+(((-1.0)*r11*x2318*x2320))+(((-1.0)*x2319*x2322))+((sj1*x2315))+((cj4*x2326*x2327))+((cj4*x2326*x2329))+(((-1.0)*x2326*x2329))+(((-1.0)*x2326*x2327))+((cj4*x2319*x2322))+(((0.250000349687704)*x2317))+((r10*x2331))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2333=IKcos(j2);
IkReal x2334=IKsin(j2);
IkReal x2335=(cj5*r11);
IkReal x2336=((0.433012903784321)*cj4);
IkReal x2337=(r21*sj5);
IkReal x2338=((0.500000349687582)*sj4);
IkReal x2339=((0.749999650312296)*sj3);
IkReal x2340=(cj3*cj4);
IkReal x2341=(cj5*r10);
IkReal x2342=((0.0185150129489311)*sj4);
IkReal x2343=(r20*sj5);
IkReal x2344=(cj4*r22);
IkReal x2345=(r10*sj5);
IkReal x2346=(r12*sj3);
IkReal x2347=(r11*sj5);
IkReal x2348=(r22*sj3);
IkReal x2349=((0.27144)*sj1);
IkReal x2350=((0.00925751294893567)*cj4);
IkReal x2351=(cj5*r20);
IkReal x2352=(cj5*r21);
IkReal x2353=(cj4*r12);
IkReal x2354=((0.866025201892125)*sj4);
IkReal x2355=(sj1*x2333);
IkReal x2356=(cj1*x2333);
IkReal x2357=(cj1*x2334);
IkReal x2358=((0.250000349687704)*cj4*sj3);
IkReal x2359=(cj3*x2354);
IkReal x2360=(sj1*x2334);
IkReal x2361=((1.0)*x2357);
evalcond[0]=((((-0.250000349687704)*r22))+x2360+x2356+(((0.433012903784321)*x2352))+(((0.433012903784321)*x2343))+(((-1.0)*x2336*x2352))+((x2337*x2354))+(((-1.0)*x2336*x2343))+(((-0.749999650312296)*x2344))+(((-1.0)*x2351*x2354)));
evalcond[1]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x2335))+x2355+(((-1.0)*x2361))+(((-1.0)*x2341*x2354))+(((0.433012903784321)*x2345))+(((-1.0)*x2336*x2345))+(((-1.0)*x2335*x2336))+(((-0.749999650312296)*x2353))+((x2347*x2354)));
evalcond[2]=((((-1.0)*x2337*x2342))+(((-0.27144)*x2356))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x2334*x2349))+(((0.0160344678271334)*x2344))+((x2350*x2352))+(((-1.0)*pz))+((x2343*x2350))+((x2342*x2351))+(((0.0648043305514941)*x2352))+(((0.0648043305514941)*x2343)));
evalcond[3]=((((-1.0)*x2333*x2349))+((x2341*x2342))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0160344678271334)*x2353))+((x2345*x2350))+(((-1.0)*py))+(((0.27144)*x2357))+(((0.0648043305514941)*x2335))+(((0.0648043305514941)*x2345))+(((-1.0)*x2342*x2347))+((x2335*x2350)));
evalcond[4]=(x2355+(((-1.0)*x2361))+((r22*x2359))+((sj3*x2338*x2351))+((x2352*x2358))+(((-1.0)*sj3*x2337*x2338))+(((-0.433012903784321)*x2348))+((cj3*x2338*x2352))+(((-1.0)*x2340*x2351))+((cj3*x2338*x2343))+((x2337*x2340))+((x2339*x2352))+((x2343*x2358))+((x2339*x2343))+((x2336*x2348)));
evalcond[5]=(((x2340*x2347))+(((-1.0)*x2356))+((r12*x2359))+((sj3*x2338*x2341))+(((-1.0)*x2360))+(((-0.433012903784321)*x2346))+((cj3*x2335*x2338))+((x2335*x2339))+((x2345*x2358))+((cj3*x2338*x2345))+(((-1.0)*x2340*x2341))+((x2339*x2345))+(((-1.0)*sj3*x2338*x2347))+((x2335*x2358))+((x2336*x2346)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2362=(cj4*sj1);
IkReal x2363=((0.433012903784321)*sj0);
IkReal x2364=(cj5*r21);
IkReal x2365=(cj1*r12);
IkReal x2366=(r20*sj5);
IkReal x2367=(r20*sj0);
IkReal x2368=(r10*sj1);
IkReal x2369=((0.749999650312296)*cj4);
IkReal x2370=(r21*sj0);
IkReal x2371=((0.433012903784321)*sj5);
IkReal x2372=(cj1*cj4);
IkReal x2373=(r22*sj0);
IkReal x2374=((0.250000349687704)*x2373);
IkReal x2375=((0.866025201892125)*cj5*sj4);
IkReal x2376=((0.433012903784321)*cj5*r11);
IkReal x2377=(cj1*r10*x2371);
IkReal x2378=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2379=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2380=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2380.valid){
continue;
}
CheckValue<IkReal> x2381 = IKatan2WithCheck(IkReal((((x2372*x2376))+((x2362*x2363*x2366))+((x2362*x2363*x2364))+((sj1*x2374))+((sj1*x2367*x2375))+(((0.749999650312296)*x2362*x2373))+((x2365*x2369))+(((-1.0)*x2377))+((cj1*r10*x2375))+(((-1.0)*sj1*x2363*x2364))+(((-1.0)*sj1*x2363*x2366))+(((0.250000349687704)*x2365))+(((-1.0)*x2370*x2378))+((r10*x2371*x2372))+(((-1.0)*cj1*x2376))+(((-1.0)*r11*x2379)))),IkReal(((((-0.749999650312296)*r12*x2362))+((x2368*x2371))+(((-1.0)*cj1*x2363*x2364))+(((-1.0)*cj1*x2363*x2366))+(((-0.250000349687704)*r12*sj1))+((sj1*x2376))+(((-1.0)*r10*x2362*x2371))+((x2363*x2364*x2372))+(((-1.0)*x2368*x2375))+((cj1*x2374))+((cj1*x2367*x2375))+(((-1.0)*x2362*x2376))+(((-1.0)*x2370*x2379))+((x2363*x2366*x2372))+((cj1*x2369*x2373))+((r11*x2378)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2381.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2380.value)))+(x2381.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2382=IKsin(j2);
IkReal x2383=IKcos(j2);
IkReal x2384=(cj4*sj5);
IkReal x2385=(cj3*r21);
IkReal x2386=((0.433012903784321)*r20);
IkReal x2387=((0.749999650312296)*cj4);
IkReal x2388=(cj4*cj5);
IkReal x2389=((1.0)*cj3);
IkReal x2390=((0.433012903784321)*r01);
IkReal x2391=(sj4*sj5);
IkReal x2392=((0.749999650312296)*sj3);
IkReal x2393=(r10*sj5);
IkReal x2394=((0.500000349687582)*sj3);
IkReal x2395=(cj0*sj1);
IkReal x2396=((0.500000349687582)*cj3);
IkReal x2397=((0.0160344678271334)*r22);
IkReal x2398=(r20*sj3);
IkReal x2399=(r00*sj5);
IkReal x2400=(cj3*r11);
IkReal x2401=((0.0160344678271334)*r12);
IkReal x2402=((0.433012903784321)*r11);
IkReal x2403=(cj5*r11);
IkReal x2404=(r10*sj3);
IkReal x2405=(r00*sj3);
IkReal x2406=((0.433012903784321)*sj3);
IkReal x2407=(cj5*sj4);
IkReal x2408=(r20*sj5);
IkReal x2409=((0.433012903784321)*r21);
IkReal x2410=(sj0*sj1);
IkReal x2411=(cj3*r01);
IkReal x2412=(cj5*r21);
IkReal x2413=((0.0160344678271334)*r02);
IkReal x2414=(cj5*r01);
IkReal x2415=((0.250000349687704)*sj3);
IkReal x2416=(cj1*x2382);
IkReal x2417=((0.500000349687582)*x2407);
IkReal x2418=((0.27144)*x2383);
IkReal x2419=(cj4*x2406);
IkReal x2420=(sj1*x2382);
IkReal x2421=((0.866025201892125)*cj3*sj4);
IkReal x2422=(cj1*x2383);
IkReal x2423=((1.0)*x2383);
evalcond[0]=(x2420+x2422+(((-0.250000349687704)*r22))+(((-1.0)*r22*x2387))+((sj5*x2386))+(((0.866025201892125)*r21*x2391))+(((-1.0)*x2388*x2409))+((cj5*x2409))+(((-1.0)*x2384*x2386))+(((-0.866025201892125)*r20*x2407)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*r02*x2387))+(((0.866025201892125)*r01*x2391))+((cj0*x2416))+(((0.433012903784321)*x2399))+(((-0.433012903784321)*r00*x2384))+(((-0.866025201892125)*r00*x2407))+(((-1.0)*x2388*x2390))+(((-1.0)*x2395*x2423))+((cj5*x2390)));
evalcond[2]=((((-1.0)*r12*x2387))+(((-0.250000349687704)*r12))+((sj0*x2416))+(((-1.0)*x2410*x2423))+(((0.433012903784321)*x2393))+(((0.866025201892125)*r11*x2391))+(((-1.0)*x2388*x2402))+(((-0.433012903784321)*r10*x2384))+((cj5*x2402))+(((-0.866025201892125)*r10*x2407)));
evalcond[3]=((((0.0185150129489311)*r20*x2407))+(((0.00925751294893567)*r20*x2384))+(((0.41)*cj1))+(((-0.27144)*x2420))+(((0.00925751294893567)*r21*x2388))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x2391))+(((-1.0)*x2397))+(((-1.0)*cj1*x2418))+(((0.0648043305514941)*x2412))+(((0.0648043305514941)*x2408))+((cj4*x2397)));
evalcond[4]=((((0.0648043305514941)*x2399))+((x2395*x2418))+(((-1.0)*px))+(((-0.41)*x2395))+(((-0.0185150129489311)*r01*x2391))+(((-1.0)*x2413))+(((-0.27144)*cj0*x2416))+(((0.00925751294893567)*r00*x2384))+((cj4*x2413))+(((0.00925751294893567)*r01*x2388))+(((0.0648043305514941)*x2414))+(((0.0185150129489311)*r00*x2407))+(((0.0098)*sj0)));
evalcond[5]=((((-0.41)*x2410))+(((0.0648043305514941)*x2393))+(((0.00925751294893567)*r10*x2384))+(((-1.0)*x2401))+((x2410*x2418))+(((-0.27144)*sj0*x2416))+(((0.0185150129489311)*r10*x2407))+(((-1.0)*py))+(((-0.0185150129489311)*r11*x2391))+((cj4*x2401))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2403))+(((0.00925751294893567)*r11*x2388)));
evalcond[6]=(((r22*x2419))+((r20*x2394*x2407))+((r22*x2421))+((r21*x2388*x2415))+(((-1.0)*r20*x2388*x2389))+((x2384*x2385))+(((-1.0)*x2416))+((x2392*x2412))+(((-1.0)*r21*x2391*x2394))+(((0.250000349687704)*x2384*x2398))+((x2385*x2417))+((r20*x2391*x2396))+((x2392*x2408))+((sj1*x2383))+(((-1.0)*r22*x2406)));
evalcond[7]=(((r00*x2394*x2407))+((x2392*x2399))+((r01*x2396*x2407))+(((0.250000349687704)*x2384*x2405))+((r01*x2388*x2415))+((x2392*x2414))+(((-1.0)*r02*x2406))+((r00*x2391*x2396))+((x2382*x2395))+(((-1.0)*r00*x2388*x2389))+((r02*x2419))+((cj0*x2422))+((x2384*x2411))+((r02*x2421))+(((-1.0)*r01*x2391*x2394)));
evalcond[8]=(((x2384*x2400))+((x2392*x2393))+((sj4*x2396*x2403))+(((0.250000349687704)*x2384*x2404))+((r10*x2394*x2407))+((r10*x2391*x2396))+((r11*x2388*x2415))+((sj0*x2422))+((x2382*x2410))+((r12*x2421))+(((-1.0)*r10*x2388*x2389))+(((-1.0)*r11*x2391*x2394))+((x2392*x2403))+((r12*x2419))+(((-1.0)*r12*x2406)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2424=(cj0*r20);
IkReal x2425=(cj1*r00);
IkReal x2426=(r02*sj1);
IkReal x2427=(r00*sj1);
IkReal x2428=((0.433012903784321)*sj5);
IkReal x2429=(cj4*sj1);
IkReal x2430=((0.749999650312296)*cj4);
IkReal x2431=(cj0*r22);
IkReal x2432=(r01*sj1);
IkReal x2433=(cj1*cj4);
IkReal x2434=(cj0*r21);
IkReal x2435=(cj1*r02);
IkReal x2436=((0.866025201892125)*cj5*sj4);
IkReal x2437=((0.866025201892125)*sj4*sj5);
IkReal x2438=((0.433012903784321)*cj5*r01);
IkReal x2439=((0.433012903784321)*cj5*x2434);
CheckValue<IkReal> x2440=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2440.valid){
continue;
}
CheckValue<IkReal> x2441 = IKatan2WithCheck(IkReal((((x2429*x2439))+((sj1*x2424*x2436))+(((0.250000349687704)*x2435))+((x2425*x2436))+(((0.250000349687704)*sj1*x2431))+((cj4*x2425*x2428))+(((-1.0)*sj1*x2434*x2437))+(((-1.0)*x2425*x2428))+(((-1.0)*cj1*r01*x2437))+(((-1.0)*sj1*x2439))+((x2424*x2428*x2429))+(((-1.0)*cj1*x2438))+((x2433*x2438))+(((-1.0)*sj1*x2424*x2428))+((x2430*x2435))+(((0.749999650312296)*x2429*x2431)))),IkReal((((cj1*x2424*x2436))+(((-0.250000349687704)*x2426))+((x2424*x2428*x2433))+((cj1*x2430*x2431))+(((-1.0)*x2426*x2430))+(((0.433012903784321)*cj5*x2432))+((x2427*x2428))+(((-1.0)*x2427*x2436))+((x2432*x2437))+(((-1.0)*cj1*x2439))+(((-1.0)*cj1*x2434*x2437))+(((-1.0)*cj1*x2424*x2428))+(((0.250000349687704)*cj1*x2431))+(((-1.0)*cj4*x2427*x2428))+(((-1.0)*x2429*x2438))+((x2433*x2439)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2441.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2440.value)))+(x2441.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2442=IKsin(j2);
IkReal x2443=IKcos(j2);
IkReal x2444=(cj4*sj5);
IkReal x2445=(cj3*r21);
IkReal x2446=((0.433012903784321)*r20);
IkReal x2447=((0.749999650312296)*cj4);
IkReal x2448=(cj4*cj5);
IkReal x2449=((1.0)*cj3);
IkReal x2450=((0.433012903784321)*r01);
IkReal x2451=(sj4*sj5);
IkReal x2452=((0.749999650312296)*sj3);
IkReal x2453=(r10*sj5);
IkReal x2454=((0.500000349687582)*sj3);
IkReal x2455=(cj0*sj1);
IkReal x2456=((0.500000349687582)*cj3);
IkReal x2457=((0.0160344678271334)*r22);
IkReal x2458=(r20*sj3);
IkReal x2459=(r00*sj5);
IkReal x2460=(cj3*r11);
IkReal x2461=((0.0160344678271334)*r12);
IkReal x2462=((0.433012903784321)*r11);
IkReal x2463=(cj5*r11);
IkReal x2464=(r10*sj3);
IkReal x2465=(r00*sj3);
IkReal x2466=((0.433012903784321)*sj3);
IkReal x2467=(cj5*sj4);
IkReal x2468=(r20*sj5);
IkReal x2469=((0.433012903784321)*r21);
IkReal x2470=(sj0*sj1);
IkReal x2471=(cj3*r01);
IkReal x2472=(cj5*r21);
IkReal x2473=((0.0160344678271334)*r02);
IkReal x2474=(cj5*r01);
IkReal x2475=((0.250000349687704)*sj3);
IkReal x2476=(cj1*x2442);
IkReal x2477=((0.500000349687582)*x2467);
IkReal x2478=((0.27144)*x2443);
IkReal x2479=(cj4*x2466);
IkReal x2480=(sj1*x2442);
IkReal x2481=((0.866025201892125)*cj3*sj4);
IkReal x2482=(cj1*x2443);
IkReal x2483=((1.0)*x2443);
evalcond[0]=(((sj5*x2446))+x2482+x2480+(((-0.250000349687704)*r22))+(((-1.0)*x2448*x2469))+(((-1.0)*x2444*x2446))+((cj5*x2469))+(((0.866025201892125)*r21*x2451))+(((-1.0)*r22*x2447))+(((-0.866025201892125)*r20*x2467)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*r00*x2444))+(((0.433012903784321)*x2459))+(((0.866025201892125)*r01*x2451))+(((-1.0)*x2448*x2450))+((cj5*x2450))+((cj0*x2476))+(((-0.866025201892125)*r00*x2467))+(((-1.0)*r02*x2447))+(((-1.0)*x2455*x2483)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-1.0)*x2448*x2462))+(((0.433012903784321)*x2453))+(((0.866025201892125)*r11*x2451))+((sj0*x2476))+(((-1.0)*r12*x2447))+((cj5*x2462))+(((-0.433012903784321)*r10*x2444))+(((-0.866025201892125)*r10*x2467))+(((-1.0)*x2470*x2483)));
evalcond[3]=((((0.0185150129489311)*r20*x2467))+(((-0.0185150129489311)*r21*x2451))+(((-0.27144)*x2480))+(((0.0648043305514941)*x2468))+(((0.41)*cj1))+((cj4*x2457))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2448))+(((0.0648043305514941)*x2472))+(((0.00925751294893567)*r20*x2444))+(((-1.0)*x2457))+(((-1.0)*cj1*x2478)));
evalcond[4]=((((0.00925751294893567)*r00*x2444))+(((0.0185150129489311)*r00*x2467))+(((-1.0)*x2473))+((cj4*x2473))+(((-1.0)*px))+(((0.0648043305514941)*x2459))+(((0.0648043305514941)*x2474))+(((-0.0185150129489311)*r01*x2451))+(((-0.27144)*cj0*x2476))+(((-0.41)*x2455))+((x2455*x2478))+(((0.0098)*sj0))+(((0.00925751294893567)*r01*x2448)));
evalcond[5]=((((0.0185150129489311)*r10*x2467))+(((0.00925751294893567)*r11*x2448))+(((-0.27144)*sj0*x2476))+(((0.0648043305514941)*x2463))+(((-1.0)*py))+(((0.0648043305514941)*x2453))+(((-0.0185150129489311)*r11*x2451))+((cj4*x2461))+(((-1.0)*x2461))+(((0.00925751294893567)*r10*x2444))+(((-0.0098)*cj0))+(((-0.41)*x2470))+((x2470*x2478)));
evalcond[6]=((((0.250000349687704)*x2444*x2458))+(((-1.0)*r22*x2466))+((sj1*x2443))+((r22*x2481))+(((-1.0)*r20*x2448*x2449))+((r20*x2451*x2456))+((x2452*x2472))+(((-1.0)*x2476))+(((-1.0)*r21*x2451*x2454))+((x2445*x2477))+((x2452*x2468))+((r21*x2448*x2475))+((x2444*x2445))+((r22*x2479))+((r20*x2454*x2467)));
evalcond[7]=(((x2442*x2455))+((r01*x2456*x2467))+((r02*x2481))+((x2452*x2459))+((x2452*x2474))+(((0.250000349687704)*x2444*x2465))+((x2444*x2471))+((r00*x2451*x2456))+((r02*x2479))+(((-1.0)*r01*x2451*x2454))+((r00*x2454*x2467))+(((-1.0)*r00*x2448*x2449))+(((-1.0)*r02*x2466))+((cj0*x2482))+((r01*x2448*x2475)));
evalcond[8]=(((r12*x2479))+((sj0*x2482))+((x2442*x2470))+((sj4*x2456*x2463))+(((-1.0)*r11*x2451*x2454))+((x2452*x2453))+(((-1.0)*r12*x2466))+(((0.250000349687704)*x2444*x2464))+((x2452*x2463))+((x2444*x2460))+((r11*x2448*x2475))+((r12*x2481))+(((-1.0)*r10*x2448*x2449))+((r10*x2451*x2456))+((r10*x2454*x2467)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2484=((0.26409636501044)*cj4);
IkReal x2485=(r20*sj5);
IkReal x2486=(cj5*r21);
IkReal x2487=(r10*sj5);
IkReal x2488=(cj5*r11);
IkReal x2489=((0.528192360616262)*sj4);
IkReal x2490=((0.18234135315471)*sj0);
IkReal x2491=(r12*sj0);
IkReal x2492=((0.10827950965428)*cj4*sj0);
IkReal x2493=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x2494=IKPowWithIntegerCheck(sj0,-2);
if(!x2494.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2494.value)*((((x2488*x2490))+(((-0.0098)*cj0*sj0))+((x2487*x2490))+(((-1.0)*cj5*r10*x2493))+(((-1.0)*x2488*x2492))+(((-1.0)*py*sj0))+((r11*sj5*x2493))+(((-1.0)*x2487*x2492))+(((-0.0838945627463637)*x2491))+(((-0.187545437253636)*cj4*x2491)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x2489))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2489))+((x2484*x2486))+((x2484*x2485))+(((-0.444735007694415)*x2485))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2494.value)*((((x2488*x2490))+(((-0.0098)*cj0*sj0))+((x2487*x2490))+(((-1.0)*cj5*r10*x2493))+(((-1.0)*x2488*x2492))+(((-1.0)*py*sj0))+((r11*sj5*x2493))+(((-1.0)*x2487*x2492))+(((-0.0838945627463637)*x2491))+(((-0.187545437253636)*cj4*x2491))))))+IKsqr(((((-1.0)*r21*sj5*x2489))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2489))+((x2484*x2486))+((x2484*x2485))+(((-0.444735007694415)*x2485))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2494.value)*((((x2488*x2490))+(((-0.0098)*cj0*sj0))+((x2487*x2490))+(((-1.0)*cj5*r10*x2493))+(((-1.0)*x2488*x2492))+(((-1.0)*py*sj0))+((r11*sj5*x2493))+(((-1.0)*x2487*x2492))+(((-0.0838945627463637)*x2491))+(((-0.187545437253636)*cj4*x2491))))), ((((-1.0)*r21*sj5*x2489))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2489))+((x2484*x2486))+((x2484*x2485))+(((-0.444735007694415)*x2485))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2495=IKsin(j1);
IkReal x2496=IKcos(j1);
IkReal x2497=sj0*sj0;
IkReal x2498=cj0*cj0;
IkReal x2499=((0.0098)*cj0);
IkReal x2500=(cj0*cj5);
IkReal x2501=(cj5*sj0);
IkReal x2502=((0.0648043305514941)*r21);
IkReal x2503=(r00*sj5);
IkReal x2504=((0.20357990508077)*sj3);
IkReal x2505=((0.135720094919197)*r21);
IkReal x2506=((1.0)*px);
IkReal x2507=((0.117537022603216)*sj3);
IkReal x2508=((0.00925751294893567)*cj4);
IkReal x2509=(r10*sj4);
IkReal x2510=(sj0*sj5);
IkReal x2511=(cj4*sj0);
IkReal x2512=(r20*sj5);
IkReal x2513=((0.10827950965428)*cj4);
IkReal x2514=(cj3*sj4);
IkReal x2515=((0.135720094919197)*sj5);
IkReal x2516=((0.117537022603216)*r11);
IkReal x2517=(cj5*r01);
IkReal x2518=(cj4*r02);
IkReal x2519=((0.117537022603216)*cj4);
IkReal x2520=((0.0160344678271334)*r02);
IkReal x2521=((0.0648043305514941)*r11);
IkReal x2522=((0.0160344678271334)*r12);
IkReal x2523=(cj0*cj4);
IkReal x2524=(cj5*sj3);
IkReal x2525=((0.0678600949192303)*cj4);
IkReal x2526=(r10*sj5);
IkReal x2527=((1.0)*py);
IkReal x2528=(cj5*r00);
IkReal x2529=(cj0*r21);
IkReal x2530=(r11*sj5);
IkReal x2531=((0.0160344678271334)*r22);
IkReal x2532=(r00*sj4);
IkReal x2533=((1.0)*pz);
IkReal x2534=(r22*sj0);
IkReal x2535=(sj3*sj4);
IkReal x2536=(cj5*r21);
IkReal x2537=(r21*sj3);
IkReal x2538=(cj0*r22);
IkReal x2539=((0.0185150129489311)*sj4);
IkReal x2540=(cj5*r11);
IkReal x2541=(r01*sj5);
IkReal x2542=((0.216558867852667)*sj4);
IkReal x2543=((0.135720094919197)*r20);
IkReal x2544=(sj0*x2499);
IkReal x2545=(sj4*x2510);
IkReal x2546=((0.27144)*cj3*cj4);
IkReal x2547=(r11*x2508);
IkReal x2548=((0.41)*x2495);
IkReal x2549=(cj0*x2526);
IkReal x2550=(sj5*x2539);
IkReal x2551=((0.41)*x2496);
IkReal x2552=(cj0*sj0*x2548);
evalcond[0]=(((cj5*r20*x2542))+((x2512*x2513))+(((-0.18234135315471)*x2512))+(((-0.18234135315471)*x2536))+((x2513*x2536))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x2542))+pz+(((-1.0)*x2551))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*sj0*x2527))+(((-1.0)*r10*x2510*x2513))+(((-1.0)*x2497*x2548))+(((-1.0)*r11*x2501*x2513))+(((-0.187545437253636)*r12*x2511))+(((-0.216558867852667)*x2501*x2509))+(((0.18234135315471)*r11*x2501))+(((0.18234135315471)*r10*x2510))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x2544))+((r11*x2510*x2542)));
evalcond[2]=(x2544+((cj0*x2541*x2542))+(((-1.0)*cj0*x2503*x2513))+(((-0.0838945627463637)*cj0*r02))+(((0.18234135315471)*r01*x2500))+(((-0.187545437253636)*cj0*x2518))+(((0.18234135315471)*cj0*x2503))+(((-0.216558867852667)*x2500*x2532))+(((-1.0)*cj0*x2506))+(((-1.0)*x2498*x2548))+(((-1.0)*r01*x2500*x2513)));
evalcond[3]=((((0.235073880801598)*r12*x2514))+((r20*x2501*x2539))+(((0.135720094919197)*x2514*x2540))+((x2501*x2502))+(((-1.0)*r21*x2510*x2539))+((x2504*x2540))+((x2511*x2531))+(((-1.0)*r12*x2507))+(((-1.0)*sj0*x2533))+(((-1.0)*sj0*x2531))+((x2530*x2546))+((x2504*x2526))+(((-1.0)*cj5*r10*x2546))+((cj3*x2509*x2515))+((r11*x2524*x2525))+((sj0*x2551))+((r21*x2501*x2508))+((sj3*x2525*x2526))+((r20*x2508*x2510))+(((0.135720094919197)*x2509*x2524))+(((0.0648043305514941)*r20*x2510))+(((-1.0)*r11*x2515*x2535))+((cj4*r12*x2507)));
evalcond[4]=(((cj0*x2508*x2512))+(((0.135720094919197)*x2524*x2532))+((x2504*x2517))+(((-1.0)*r02*x2507))+((x2500*x2502))+(((-1.0)*x2529*x2550))+(((-1.0)*x2528*x2546))+((x2523*x2531))+(((0.0648043305514941)*cj0*x2512))+(((0.235073880801598)*r02*x2514))+((r21*x2500*x2508))+(((-1.0)*cj0*x2533))+(((-1.0)*cj0*x2531))+((x2507*x2518))+((cj0*x2551))+(((-1.0)*r01*x2515*x2535))+(((0.135720094919197)*x2503*x2514))+((sj3*x2517*x2525))+((x2503*x2504))+(((0.135720094919197)*x2514*x2517))+((sj3*x2503*x2525))+((r20*x2500*x2539))+((x2541*x2546)));
evalcond[5]=((((-0.235073880801598)*x2514*x2534))+(((0.0648043305514941)*x2526))+(((-1.0)*r21*x2501*x2504))+(((-1.0)*sj0*x2548))+(((-1.0)*x2501*x2505*x2514))+((x2505*x2510*x2535))+((x2508*x2540))+(((0.0185150129489311)*cj5*x2509))+(((-1.0)*x2499))+((x2508*x2526))+(((-1.0)*x2530*x2539))+(((-1.0)*r21*x2510*x2546))+((cj5*x2521))+((cj4*x2522))+(((-1.0)*x2501*x2535*x2543))+(((-1.0)*x2501*x2525*x2537))+(((-1.0)*r22*x2507*x2511))+(((-1.0)*r20*x2504*x2510))+(((-1.0)*r20*sj3*x2510*x2525))+(((-1.0)*x2510*x2514*x2543))+((r20*x2501*x2546))+(((-1.0)*x2527))+(((-1.0)*x2522))+((x2507*x2534)));
evalcond[6]=((((-1.0)*x2506))+((cj0*sj5*x2505*x2535))+(((-0.235073880801598)*x2514*x2538))+(((-1.0)*x2500*x2535*x2543))+(((-0.0678600949192303)*sj3*x2512*x2523))+(((-1.0)*cj0*x2548))+(((-1.0)*cj0*x2504*x2512))+(((0.0160344678271334)*x2518))+(((-0.27144)*cj3*r21*sj5*x2523))+(((-1.0)*r21*x2500*x2504))+((r20*x2500*x2546))+(((-1.0)*x2539*x2541))+(((-0.135720094919197)*cj0*x2512*x2514))+(((-1.0)*x2500*x2505*x2514))+(((0.0648043305514941)*x2503))+((x2508*x2517))+(((-1.0)*r22*x2507*x2523))+(((0.0098)*sj0))+(((-1.0)*x2520))+((x2507*x2538))+(((0.0648043305514941)*x2517))+(((-1.0)*x2500*x2525*x2537))+((x2503*x2508))+((x2528*x2539)));
evalcond[7]=((((-1.0)*sj0*x2520))+(((0.0185150129489311)*x2501*x2532))+(((0.0648043305514941)*r01*x2501))+(((0.235073880801598)*cj0*sj4*x2530))+(((-0.0678600949192303)*cj0*r12))+(((-0.20357990508077)*r12*x2523))+(((0.0648043305514941)*sj0*x2503))+((sj0*x2503*x2508))+((r01*x2501*x2508))+((x2500*x2516))+(((0.0098)*x2497))+(((-0.235073880801598)*x2500*x2509))+(((-1.0)*x2552))+((x2511*x2520))+(((-1.0)*r01*x2510*x2539))+(((-1.0)*x2519*x2549))+(((-1.0)*sj0*x2506))+(((0.117537022603216)*x2549))+(((-1.0)*cj4*x2500*x2516)));
evalcond[8]=((((-0.235073880801598)*x2501*x2532))+(((-1.0)*cj0*x2522))+(((-1.0)*cj0*x2527))+(((-1.0)*r01*x2501*x2519))+(((-0.0098)*x2498))+((x2500*x2521))+(((-1.0)*cj0*x2530*x2539))+((x2508*x2549))+((x2522*x2523))+(((0.117537022603216)*r01*x2501))+(((0.117537022603216)*sj0*x2503))+(((0.235073880801598)*r01*x2545))+(((-0.20357990508077)*r02*x2511))+(((-1.0)*x2552))+(((0.0185150129489311)*x2500*x2509))+(((-0.0678600949192303)*r02*sj0))+(((-0.117537022603216)*x2503*x2511))+((x2500*x2547))+(((0.0648043305514941)*x2549)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2553=((0.250000349687704)*sj1);
IkReal x2554=(cj1*cj4);
IkReal x2555=((0.749999650312296)*r22);
IkReal x2556=(cj4*sj1);
IkReal x2557=((0.749999650312296)*r02);
IkReal x2558=((0.250000349687704)*cj1);
IkReal x2559=((0.433012903784321)*r00*sj5);
IkReal x2560=((0.433012903784321)*r20*sj5);
IkReal x2561=((0.433012903784321)*cj5*r01);
IkReal x2562=((0.433012903784321)*cj5*r21);
IkReal x2563=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2564=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2565=((0.866025201892125)*r01*sj4*sj5);
IkReal x2566=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2565))+((r00*x2564))+((r22*x2553))+((x2554*x2561))+((x2556*x2560))+((x2556*x2562))+((r20*x2563))+((x2555*x2556))+(((-1.0)*cj1*x2559))+(((-1.0)*sj1*x2566))+(((-1.0)*sj1*x2562))+(((-1.0)*sj1*x2560))+((x2554*x2559))+((x2554*x2557))+((r02*x2558)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*x2563))+(((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r22*x2558))+((x2554*x2562))+((x2554*x2560))+(((-1.0)*x2556*x2557))+(((-1.0)*x2556*x2559))+(((-1.0)*x2556*x2561))+((r20*x2564))+(((-1.0)*r02*x2553))+((sj1*x2559))+((sj1*x2565))+((sj1*x2561))+((x2554*x2555)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2565))+((r00*x2564))+((r22*x2553))+((x2554*x2561))+((x2556*x2560))+((x2556*x2562))+((r20*x2563))+((x2555*x2556))+(((-1.0)*cj1*x2559))+(((-1.0)*sj1*x2566))+(((-1.0)*sj1*x2562))+(((-1.0)*sj1*x2560))+((x2554*x2559))+((x2554*x2557))+((r02*x2558))))+IKsqr(((((-1.0)*r00*x2563))+(((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r22*x2558))+((x2554*x2562))+((x2554*x2560))+(((-1.0)*x2556*x2557))+(((-1.0)*x2556*x2559))+(((-1.0)*x2556*x2561))+((r20*x2564))+(((-1.0)*r02*x2553))+((sj1*x2559))+((sj1*x2565))+((sj1*x2561))+((x2554*x2555))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2565))+((r00*x2564))+((r22*x2553))+((x2554*x2561))+((x2556*x2560))+((x2556*x2562))+((r20*x2563))+((x2555*x2556))+(((-1.0)*cj1*x2559))+(((-1.0)*sj1*x2566))+(((-1.0)*sj1*x2562))+(((-1.0)*sj1*x2560))+((x2554*x2559))+((x2554*x2557))+((r02*x2558))), ((((-1.0)*r00*x2563))+(((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r22*x2558))+((x2554*x2562))+((x2554*x2560))+(((-1.0)*x2556*x2557))+(((-1.0)*x2556*x2559))+(((-1.0)*x2556*x2561))+((r20*x2564))+(((-1.0)*r02*x2553))+((sj1*x2559))+((sj1*x2565))+((sj1*x2561))+((x2554*x2555))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2567=IKsin(j2);
IkReal x2568=IKcos(j2);
IkReal x2569=((0.749999650312296)*sj3);
IkReal x2570=(cj5*r01);
IkReal x2571=(r00*sj5);
IkReal x2572=(cj4*cj5);
IkReal x2573=((1.0)*cj3);
IkReal x2574=(r21*sj3);
IkReal x2575=(cj4*sj5);
IkReal x2576=(cj3*r21);
IkReal x2577=((0.500000349687582)*sj4);
IkReal x2578=((0.433012903784321)*r20);
IkReal x2579=(cj4*r22);
IkReal x2580=((0.433012903784321)*sj3);
IkReal x2581=((0.433012903784321)*cj4);
IkReal x2582=(r01*sj5);
IkReal x2583=(r20*sj5);
IkReal x2584=((0.0160344678271334)*r02);
IkReal x2585=(cj4*r02);
IkReal x2586=((0.00925751294893567)*cj4);
IkReal x2587=((0.0185150129489311)*sj4);
IkReal x2588=(r21*sj5);
IkReal x2589=(cj5*r21);
IkReal x2590=((0.866025201892125)*sj4);
IkReal x2591=(cj5*r20);
IkReal x2592=(cj5*r00);
IkReal x2593=((0.250000349687704)*sj3);
IkReal x2594=(cj1*x2568);
IkReal x2595=(sj1*x2567);
IkReal x2596=(cj1*x2567);
IkReal x2597=(sj1*x2568);
IkReal x2598=(x2594+x2595);
evalcond[0]=((((-1.0)*x2575*x2578))+x2598+(((-0.250000349687704)*r22))+(((-1.0)*x2590*x2591))+(((-0.433012903784321)*r21*x2572))+(((0.433012903784321)*x2589))+((sj5*x2578))+(((-0.749999650312296)*x2579))+((x2588*x2590)));
evalcond[1]=((((-0.250000349687704)*r02))+x2596+(((-1.0)*x2590*x2592))+(((-1.0)*x2570*x2581))+(((-1.0)*x2597))+(((0.433012903784321)*x2570))+(((0.433012903784321)*x2571))+((x2582*x2590))+(((-1.0)*x2571*x2581))+(((-0.749999650312296)*x2585)));
evalcond[2]=((((0.41)*cj1))+(((0.0648043305514941)*x2583))+(((0.0648043305514941)*x2589))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2575))+(((0.00925751294893567)*r21*x2572))+(((-1.0)*pz))+(((-1.0)*x2587*x2588))+(((0.0160344678271334)*x2579))+(((-0.27144)*x2594))+(((-0.27144)*x2595))+((x2587*x2591)));
evalcond[3]=((((0.0648043305514941)*x2571))+(((0.0648043305514941)*x2570))+(((-0.41)*sj1))+(((-1.0)*x2584))+(((-1.0)*px))+(((0.27144)*x2597))+((cj4*x2584))+((x2570*x2586))+((x2571*x2586))+(((-0.27144)*x2596))+(((-1.0)*x2582*x2587))+((x2587*x2592)));
evalcond[4]=(((sj3*x2577*x2592))+x2598+((cj3*r02*x2590))+(((-1.0)*r02*x2580))+((cj3*x2571*x2577))+((x2580*x2585))+((cj3*r01*x2575))+((cj4*x2570*x2593))+((cj4*x2571*x2593))+(((-1.0)*sj3*x2577*x2582))+((x2569*x2570))+((x2569*x2571))+(((-1.0)*r00*x2572*x2573))+((cj3*x2570*x2577)));
evalcond[5]=(((sj3*x2577*x2591))+x2597+((x2575*x2576))+(((-1.0)*x2596))+((x2569*x2583))+((x2569*x2589))+((cj3*r22*x2590))+(((0.250000349687704)*x2572*x2574))+(((-1.0)*r20*x2572*x2573))+((cj5*x2576*x2577))+(((-1.0)*sj5*x2574*x2577))+((x2579*x2580))+((cj3*x2577*x2583))+((r20*x2575*x2593))+(((-1.0)*r22*x2580)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2599=(r02*sj1);
IkReal x2600=(cj1*cj4);
IkReal x2601=((0.749999650312296)*r22);
IkReal x2602=(cj4*sj1);
IkReal x2603=((0.250000349687704)*r22);
IkReal x2604=((0.433012903784321)*r00*sj5);
IkReal x2605=((0.433012903784321)*r20*sj5);
IkReal x2606=((0.433012903784321)*cj5*r01);
IkReal x2607=((0.433012903784321)*cj5*r21);
IkReal x2608=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2609=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2610=((0.866025201892125)*r01*sj4*sj5);
IkReal x2611=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+(((-0.749999650312296)*r02*x2600))+((r20*x2608))+((x2602*x2607))+((x2602*x2605))+(((-1.0)*x2600*x2604))+(((-1.0)*x2600*x2606))+((cj1*x2604))+((cj1*x2606))+((cj1*x2610))+((x2601*x2602))+((sj1*x2603))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x2609)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x2599))+(((-1.0)*sj1*x2610))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2604))+((r20*x2609))+((x2602*x2606))+((x2602*x2604))+((cj1*x2603))+((x2600*x2605))+((x2600*x2607))+((x2600*x2601))+(((-1.0)*cj1*x2605))+(((-1.0)*cj1*x2607))+(((-1.0)*cj1*x2611))+(((0.749999650312296)*cj4*x2599))+((r00*x2608)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+(((-0.749999650312296)*r02*x2600))+((r20*x2608))+((x2602*x2607))+((x2602*x2605))+(((-1.0)*x2600*x2604))+(((-1.0)*x2600*x2606))+((cj1*x2604))+((cj1*x2606))+((cj1*x2610))+((x2601*x2602))+((sj1*x2603))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x2609))))+IKsqr(((((0.250000349687704)*x2599))+(((-1.0)*sj1*x2610))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2604))+((r20*x2609))+((x2602*x2606))+((x2602*x2604))+((cj1*x2603))+((x2600*x2605))+((x2600*x2607))+((x2600*x2601))+(((-1.0)*cj1*x2605))+(((-1.0)*cj1*x2607))+(((-1.0)*cj1*x2611))+(((0.749999650312296)*cj4*x2599))+((r00*x2608))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+(((-0.749999650312296)*r02*x2600))+((r20*x2608))+((x2602*x2607))+((x2602*x2605))+(((-1.0)*x2600*x2604))+(((-1.0)*x2600*x2606))+((cj1*x2604))+((cj1*x2606))+((cj1*x2610))+((x2601*x2602))+((sj1*x2603))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x2609))), ((((0.250000349687704)*x2599))+(((-1.0)*sj1*x2610))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2604))+((r20*x2609))+((x2602*x2606))+((x2602*x2604))+((cj1*x2603))+((x2600*x2605))+((x2600*x2607))+((x2600*x2601))+(((-1.0)*cj1*x2605))+(((-1.0)*cj1*x2607))+(((-1.0)*cj1*x2611))+(((0.749999650312296)*cj4*x2599))+((r00*x2608))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2612=IKcos(j2);
IkReal x2613=IKsin(j2);
IkReal x2614=((0.433012903784321)*sj3);
IkReal x2615=((0.749999650312296)*sj3);
IkReal x2616=(r00*sj5);
IkReal x2617=(cj4*cj5);
IkReal x2618=((1.0)*cj3);
IkReal x2619=(cj5*r01);
IkReal x2620=(r21*sj3);
IkReal x2621=(cj4*sj5);
IkReal x2622=(cj3*r21);
IkReal x2623=((0.500000349687582)*sj4);
IkReal x2624=((0.433012903784321)*r20);
IkReal x2625=(cj4*r22);
IkReal x2626=(r20*sj5);
IkReal x2627=((0.0160344678271334)*r02);
IkReal x2628=(cj4*r02);
IkReal x2629=(r01*sj5);
IkReal x2630=(cj5*r00);
IkReal x2631=((0.0185150129489311)*sj4);
IkReal x2632=(r21*sj5);
IkReal x2633=(cj5*r21);
IkReal x2634=((0.866025201892125)*sj4);
IkReal x2635=(cj5*r20);
IkReal x2636=((0.250000349687704)*sj3);
IkReal x2637=(sj1*x2612);
IkReal x2638=(cj1*x2612);
IkReal x2639=(sj1*x2613);
IkReal x2640=(cj1*x2613);
IkReal x2641=((1.0)*x2640);
evalcond[0]=(((sj5*x2624))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x2617))+((x2632*x2634))+(((-1.0)*x2634*x2635))+(((0.433012903784321)*x2633))+(((-0.749999650312296)*x2625))+x2639+x2638+(((-1.0)*x2621*x2624)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*cj4*x2616))+(((0.433012903784321)*x2619))+(((0.433012903784321)*x2616))+(((-0.433012903784321)*r01*x2617))+(((-1.0)*x2641))+(((-1.0)*x2630*x2634))+(((-0.749999650312296)*x2628))+((x2629*x2634))+x2637);
evalcond[2]=((((0.0160344678271334)*x2625))+(((0.00925751294893567)*r21*x2617))+(((0.00925751294893567)*r20*x2621))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2633))+(((-1.0)*pz))+((x2631*x2635))+(((-1.0)*x2631*x2632))+(((-0.27144)*x2639))+(((-0.27144)*x2638))+(((0.0648043305514941)*x2626)));
evalcond[3]=(((cj4*x2627))+(((0.41)*sj1))+(((-1.0)*px))+(((-1.0)*x2629*x2631))+(((0.27144)*x2640))+(((-1.0)*x2627))+(((0.00925751294893567)*r01*x2617))+((x2630*x2631))+(((0.0648043305514941)*x2616))+(((0.0648043305514941)*x2619))+(((-0.27144)*x2637))+(((0.00925751294893567)*cj4*x2616)));
evalcond[4]=(((x2615*x2633))+(((-1.0)*r20*x2617*x2618))+((sj3*x2623*x2635))+((cj5*x2622*x2623))+(((0.250000349687704)*x2617*x2620))+(((-1.0)*sj5*x2620*x2623))+((x2614*x2625))+((x2615*x2626))+((cj3*r22*x2634))+(((-1.0)*r22*x2614))+((x2621*x2622))+((r20*x2621*x2636))+(((-1.0)*x2641))+((cj3*x2623*x2626))+x2637);
evalcond[5]=(((r01*x2617*x2636))+(((-1.0)*sj3*x2623*x2629))+((sj3*x2623*x2630))+((cj3*x2616*x2623))+((x2614*x2628))+((x2615*x2619))+((x2615*x2616))+((cj3*r02*x2634))+(((-1.0)*r00*x2617*x2618))+((cj3*x2619*x2623))+((cj4*x2616*x2636))+(((-1.0)*r02*x2614))+((cj3*r01*x2621))+(((-1.0)*x2639))+(((-1.0)*x2638)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2642=((0.250000349687704)*r12);
IkReal x2643=((0.749999650312296)*cj4);
IkReal x2644=((0.433012903784321)*sj5);
IkReal x2645=(cj1*r10);
IkReal x2646=(cj1*r22);
IkReal x2647=(cj1*r20);
IkReal x2648=((0.866025201892125)*sj4);
IkReal x2649=(r20*sj1);
IkReal x2650=(r22*sj1);
IkReal x2651=(r10*sj1);
IkReal x2652=(r11*sj1);
IkReal x2653=((0.433012903784321)*cj5);
IkReal x2654=(r21*sj1);
IkReal x2655=(cj1*r21);
IkReal x2656=(cj1*r11);
IkReal x2657=(cj5*sj1*x2648);
IkReal x2658=(cj4*r21*x2653);
if( IKabs((((cj1*r12*x2643))+((cj5*x2645*x2648))+((cj1*x2642))+(((-1.0)*x2644*x2649))+(((-1.0)*x2644*x2645))+(((0.250000349687704)*x2650))+(((-1.0)*sj5*x2648*x2656))+(((-1.0)*sj5*x2648*x2654))+((cj4*x2653*x2656))+((cj4*x2653*x2654))+((cj4*x2644*x2645))+((cj4*x2644*x2649))+((cj5*x2648*x2649))+((x2643*x2650))+(((-1.0)*x2653*x2656))+(((-1.0)*x2653*x2654)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2644*x2647))+(((-1.0)*cj5*x2648*x2651))+(((-1.0)*sj5*x2648*x2655))+(((0.250000349687704)*x2646))+((sj5*x2648*x2652))+(((-1.0)*cj4*x2644*x2651))+(((-1.0)*cj4*x2652*x2653))+((x2644*x2651))+((cj4*x2653*x2655))+((cj5*x2647*x2648))+((cj4*x2644*x2647))+((x2652*x2653))+(((-1.0)*sj1*x2642))+(((-1.0)*r12*sj1*x2643))+(((-1.0)*x2653*x2655))+((x2643*x2646)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r12*x2643))+((cj5*x2645*x2648))+((cj1*x2642))+(((-1.0)*x2644*x2649))+(((-1.0)*x2644*x2645))+(((0.250000349687704)*x2650))+(((-1.0)*sj5*x2648*x2656))+(((-1.0)*sj5*x2648*x2654))+((cj4*x2653*x2656))+((cj4*x2653*x2654))+((cj4*x2644*x2645))+((cj4*x2644*x2649))+((cj5*x2648*x2649))+((x2643*x2650))+(((-1.0)*x2653*x2656))+(((-1.0)*x2653*x2654))))+IKsqr(((((-1.0)*x2644*x2647))+(((-1.0)*cj5*x2648*x2651))+(((-1.0)*sj5*x2648*x2655))+(((0.250000349687704)*x2646))+((sj5*x2648*x2652))+(((-1.0)*cj4*x2644*x2651))+(((-1.0)*cj4*x2652*x2653))+((x2644*x2651))+((cj4*x2653*x2655))+((cj5*x2647*x2648))+((cj4*x2644*x2647))+((x2652*x2653))+(((-1.0)*sj1*x2642))+(((-1.0)*r12*sj1*x2643))+(((-1.0)*x2653*x2655))+((x2643*x2646))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r12*x2643))+((cj5*x2645*x2648))+((cj1*x2642))+(((-1.0)*x2644*x2649))+(((-1.0)*x2644*x2645))+(((0.250000349687704)*x2650))+(((-1.0)*sj5*x2648*x2656))+(((-1.0)*sj5*x2648*x2654))+((cj4*x2653*x2656))+((cj4*x2653*x2654))+((cj4*x2644*x2645))+((cj4*x2644*x2649))+((cj5*x2648*x2649))+((x2643*x2650))+(((-1.0)*x2653*x2656))+(((-1.0)*x2653*x2654))), ((((-1.0)*x2644*x2647))+(((-1.0)*cj5*x2648*x2651))+(((-1.0)*sj5*x2648*x2655))+(((0.250000349687704)*x2646))+((sj5*x2648*x2652))+(((-1.0)*cj4*x2644*x2651))+(((-1.0)*cj4*x2652*x2653))+((x2644*x2651))+((cj4*x2653*x2655))+((cj5*x2647*x2648))+((cj4*x2644*x2647))+((x2652*x2653))+(((-1.0)*sj1*x2642))+(((-1.0)*r12*sj1*x2643))+(((-1.0)*x2653*x2655))+((x2643*x2646))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2659=IKsin(j2);
IkReal x2660=IKcos(j2);
IkReal x2661=(cj5*r11);
IkReal x2662=((0.433012903784321)*cj4);
IkReal x2663=(r21*sj5);
IkReal x2664=((0.500000349687582)*sj4);
IkReal x2665=((0.749999650312296)*sj3);
IkReal x2666=(cj3*cj4);
IkReal x2667=(cj5*r10);
IkReal x2668=((0.0185150129489311)*sj4);
IkReal x2669=(r20*sj5);
IkReal x2670=(cj4*r22);
IkReal x2671=(r10*sj5);
IkReal x2672=(r22*sj3);
IkReal x2673=(r11*sj5);
IkReal x2674=((0.00925751294893567)*cj4);
IkReal x2675=(cj5*r21);
IkReal x2676=(r12*sj3);
IkReal x2677=(cj4*r12);
IkReal x2678=(cj5*r20);
IkReal x2679=((0.866025201892125)*sj4);
IkReal x2680=(cj1*x2660);
IkReal x2681=(sj1*x2659);
IkReal x2682=(cj1*x2659);
IkReal x2683=((0.250000349687704)*cj4*sj3);
IkReal x2684=(sj1*x2660);
IkReal x2685=(cj3*x2679);
IkReal x2686=(x2680+x2681);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x2670))+((x2663*x2679))+(((-1.0)*x2678*x2679))+(((-1.0)*x2662*x2669))+(((-1.0)*x2662*x2675))+(((0.433012903784321)*x2669))+(((0.433012903784321)*x2675))+x2686);
evalcond[1]=(((x2673*x2679))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x2677))+(((-1.0)*x2662*x2671))+(((0.433012903784321)*x2661))+(((0.433012903784321)*x2671))+(((-1.0)*x2684))+(((-1.0)*x2667*x2679))+(((-1.0)*x2661*x2662))+x2682);
evalcond[2]=((((0.0648043305514941)*x2675))+(((0.0648043305514941)*x2669))+((x2668*x2678))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x2663*x2668))+(((-1.0)*pz))+((x2669*x2674))+(((0.0160344678271334)*x2670))+(((-0.27144)*x2680))+(((-0.27144)*x2681))+((x2674*x2675)));
evalcond[3]=(((x2661*x2674))+(((0.0648043305514941)*x2671))+(((0.0648043305514941)*x2661))+(((0.27144)*x2684))+(((-0.0160344678271334)*r12))+((x2667*x2668))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x2677))+((x2671*x2674))+(((-0.27144)*x2682))+(((-1.0)*x2668*x2673)));
evalcond[4]=(((x2661*x2665))+((cj3*x2661*x2664))+((x2662*x2676))+((x2661*x2683))+((cj3*x2664*x2671))+(((-0.433012903784321)*x2676))+((x2666*x2673))+((x2671*x2683))+((sj3*x2664*x2667))+(((-1.0)*sj3*x2664*x2673))+(((-1.0)*x2666*x2667))+((r12*x2685))+x2686+((x2665*x2671)));
evalcond[5]=(((cj3*x2664*x2669))+((x2662*x2672))+((cj3*x2664*x2675))+((x2663*x2666))+(((-0.433012903784321)*x2672))+((r22*x2685))+((x2675*x2683))+(((-1.0)*x2682))+((sj3*x2664*x2678))+(((-1.0)*x2666*x2678))+((x2669*x2683))+(((-1.0)*sj3*x2663*x2664))+((x2665*x2669))+x2684+((x2665*x2675)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2687=((0.250000349687704)*r12);
IkReal x2688=((0.749999650312296)*cj4);
IkReal x2689=(cj1*r22);
IkReal x2690=((0.866025201892125)*sj4);
IkReal x2691=(cj1*r20);
IkReal x2692=(sj1*sj5);
IkReal x2693=((0.433012903784321)*r20);
IkReal x2694=((0.433012903784321)*sj5);
IkReal x2695=(cj1*r10);
IkReal x2696=(r22*sj1);
IkReal x2697=((0.433012903784321)*r10);
IkReal x2698=((0.433012903784321)*cj5);
IkReal x2699=(cj1*r21);
IkReal x2700=(cj1*r11);
IkReal x2701=(r11*sj1);
IkReal x2702=(cj1*cj4*x2694);
IkReal x2703=(cj5*sj1*x2690);
IkReal x2704=(cj4*r21*x2698);
if( IKabs(((((-1.0)*x2692*x2693))+(((-1.0)*cj1*x2687))+((x2698*x2700))+(((-1.0)*r21*x2690*x2692))+(((-1.0)*cj5*x2690*x2695))+((r20*x2703))+((cj4*x2692*x2693))+(((-1.0)*cj4*x2694*x2695))+(((-1.0)*cj1*r12*x2688))+(((0.250000349687704)*x2696))+((x2694*x2695))+(((-1.0)*cj4*x2698*x2700))+((sj5*x2690*x2700))+((sj1*x2704))+((x2688*x2696))+(((-1.0)*r21*sj1*x2698)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2692*x2697))+(((-1.0)*x2691*x2694))+((cj4*x2698*x2699))+((cj4*x2698*x2701))+((r10*x2703))+((cj4*x2691*x2694))+((sj1*x2687))+(((0.250000349687704)*x2689))+(((-1.0)*sj5*x2690*x2699))+(((-1.0)*x2698*x2699))+((cj4*x2692*x2697))+(((-1.0)*r11*x2690*x2692))+((r12*sj1*x2688))+((x2688*x2689))+((cj5*x2690*x2691))+(((-1.0)*x2698*x2701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2692*x2693))+(((-1.0)*cj1*x2687))+((x2698*x2700))+(((-1.0)*r21*x2690*x2692))+(((-1.0)*cj5*x2690*x2695))+((r20*x2703))+((cj4*x2692*x2693))+(((-1.0)*cj4*x2694*x2695))+(((-1.0)*cj1*r12*x2688))+(((0.250000349687704)*x2696))+((x2694*x2695))+(((-1.0)*cj4*x2698*x2700))+((sj5*x2690*x2700))+((sj1*x2704))+((x2688*x2696))+(((-1.0)*r21*sj1*x2698))))+IKsqr(((((-1.0)*x2692*x2697))+(((-1.0)*x2691*x2694))+((cj4*x2698*x2699))+((cj4*x2698*x2701))+((r10*x2703))+((cj4*x2691*x2694))+((sj1*x2687))+(((0.250000349687704)*x2689))+(((-1.0)*sj5*x2690*x2699))+(((-1.0)*x2698*x2699))+((cj4*x2692*x2697))+(((-1.0)*r11*x2690*x2692))+((r12*sj1*x2688))+((x2688*x2689))+((cj5*x2690*x2691))+(((-1.0)*x2698*x2701))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2692*x2693))+(((-1.0)*cj1*x2687))+((x2698*x2700))+(((-1.0)*r21*x2690*x2692))+(((-1.0)*cj5*x2690*x2695))+((r20*x2703))+((cj4*x2692*x2693))+(((-1.0)*cj4*x2694*x2695))+(((-1.0)*cj1*r12*x2688))+(((0.250000349687704)*x2696))+((x2694*x2695))+(((-1.0)*cj4*x2698*x2700))+((sj5*x2690*x2700))+((sj1*x2704))+((x2688*x2696))+(((-1.0)*r21*sj1*x2698))), ((((-1.0)*x2692*x2697))+(((-1.0)*x2691*x2694))+((cj4*x2698*x2699))+((cj4*x2698*x2701))+((r10*x2703))+((cj4*x2691*x2694))+((sj1*x2687))+(((0.250000349687704)*x2689))+(((-1.0)*sj5*x2690*x2699))+(((-1.0)*x2698*x2699))+((cj4*x2692*x2697))+(((-1.0)*r11*x2690*x2692))+((r12*sj1*x2688))+((x2688*x2689))+((cj5*x2690*x2691))+(((-1.0)*x2698*x2701))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2705=IKcos(j2);
IkReal x2706=IKsin(j2);
IkReal x2707=(cj5*r11);
IkReal x2708=((0.433012903784321)*cj4);
IkReal x2709=(r21*sj5);
IkReal x2710=((0.500000349687582)*sj4);
IkReal x2711=((0.749999650312296)*sj3);
IkReal x2712=(cj3*cj4);
IkReal x2713=(cj5*r10);
IkReal x2714=((0.0185150129489311)*sj4);
IkReal x2715=(r20*sj5);
IkReal x2716=(cj4*r22);
IkReal x2717=(r10*sj5);
IkReal x2718=(r12*sj3);
IkReal x2719=(r11*sj5);
IkReal x2720=(r22*sj3);
IkReal x2721=((0.27144)*sj1);
IkReal x2722=((0.00925751294893567)*cj4);
IkReal x2723=(cj5*r20);
IkReal x2724=(cj5*r21);
IkReal x2725=(cj4*r12);
IkReal x2726=((0.866025201892125)*sj4);
IkReal x2727=(sj1*x2705);
IkReal x2728=(cj1*x2705);
IkReal x2729=(cj1*x2706);
IkReal x2730=((0.250000349687704)*cj4*sj3);
IkReal x2731=(cj3*x2726);
IkReal x2732=(sj1*x2706);
IkReal x2733=((1.0)*x2729);
evalcond[0]=(x2732+x2728+(((0.433012903784321)*x2724))+(((-0.250000349687704)*r22))+(((-1.0)*x2708*x2724))+(((-1.0)*x2708*x2715))+((x2709*x2726))+(((-1.0)*x2723*x2726))+(((0.433012903784321)*x2715))+(((-0.749999650312296)*x2716)));
evalcond[1]=(x2727+(((-0.250000349687704)*r12))+(((-1.0)*x2708*x2717))+(((0.433012903784321)*x2707))+(((-1.0)*x2713*x2726))+(((-0.749999650312296)*x2725))+(((-1.0)*x2707*x2708))+((x2719*x2726))+(((0.433012903784321)*x2717))+(((-1.0)*x2733)));
evalcond[2]=(((x2715*x2722))+(((0.0648043305514941)*x2715))+((x2714*x2723))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2724))+(((-1.0)*pz))+(((0.0160344678271334)*x2716))+(((-1.0)*x2709*x2714))+((x2722*x2724))+(((-1.0)*x2706*x2721))+(((-0.27144)*x2728)));
evalcond[3]=((((0.0648043305514941)*x2717))+(((0.0160344678271334)*x2725))+((x2717*x2722))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+(((-1.0)*x2714*x2719))+((x2713*x2714))+(((0.27144)*x2729))+(((0.0648043305514941)*x2707))+((x2707*x2722))+(((-1.0)*x2705*x2721)));
evalcond[4]=(((sj3*x2710*x2723))+x2727+(((-1.0)*x2712*x2723))+((x2715*x2730))+((x2709*x2712))+((x2708*x2720))+(((-0.433012903784321)*x2720))+((r22*x2731))+((x2724*x2730))+((x2711*x2715))+((cj3*x2710*x2724))+(((-1.0)*sj3*x2709*x2710))+(((-1.0)*x2733))+((cj3*x2710*x2715))+((x2711*x2724)));
evalcond[5]=(((cj3*x2707*x2710))+((x2707*x2730))+((x2717*x2730))+((x2708*x2718))+((x2707*x2711))+(((-0.433012903784321)*x2718))+((x2712*x2719))+(((-1.0)*x2732))+(((-1.0)*x2728))+((x2711*x2717))+((sj3*x2710*x2713))+(((-1.0)*sj3*x2710*x2719))+((r12*x2731))+(((-1.0)*x2712*x2713))+((cj3*x2710*x2717)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2734=(cj4*sj1);
IkReal x2735=((0.433012903784321)*sj0);
IkReal x2736=(cj5*r21);
IkReal x2737=(cj1*r12);
IkReal x2738=(r20*sj5);
IkReal x2739=(r20*sj0);
IkReal x2740=(r10*sj1);
IkReal x2741=((0.749999650312296)*cj4);
IkReal x2742=(r21*sj0);
IkReal x2743=((0.433012903784321)*sj5);
IkReal x2744=(cj1*cj4);
IkReal x2745=(r22*sj0);
IkReal x2746=((0.250000349687704)*x2745);
IkReal x2747=((0.866025201892125)*cj5*sj4);
IkReal x2748=((0.433012903784321)*cj5*r11);
IkReal x2749=(cj1*r10*x2743);
IkReal x2750=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2751=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2752=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2752.valid){
continue;
}
CheckValue<IkReal> x2753 = IKatan2WithCheck(IkReal(((((0.749999650312296)*x2734*x2745))+((cj1*r10*x2747))+((x2734*x2735*x2736))+((x2734*x2735*x2738))+((x2744*x2748))+((r10*x2743*x2744))+(((-1.0)*sj1*x2735*x2736))+(((-1.0)*sj1*x2735*x2738))+(((0.250000349687704)*x2737))+(((-1.0)*r11*x2751))+((sj1*x2746))+((x2737*x2741))+((sj1*x2739*x2747))+(((-1.0)*cj1*x2748))+(((-1.0)*x2749))+(((-1.0)*x2742*x2750)))),IkReal((((r11*x2750))+(((-0.250000349687704)*r12*sj1))+((cj1*x2741*x2745))+(((-1.0)*r10*x2734*x2743))+((cj1*x2739*x2747))+(((-1.0)*x2740*x2747))+((x2735*x2738*x2744))+(((-1.0)*cj1*x2735*x2738))+(((-1.0)*cj1*x2735*x2736))+(((-1.0)*x2734*x2748))+((x2740*x2743))+((sj1*x2748))+((cj1*x2746))+(((-0.749999650312296)*r12*x2734))+(((-1.0)*x2742*x2751))+((x2735*x2736*x2744)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2753.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2752.value)))+(x2753.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2754=IKsin(j2);
IkReal x2755=IKcos(j2);
IkReal x2756=(cj4*sj5);
IkReal x2757=(cj3*r21);
IkReal x2758=((0.433012903784321)*r20);
IkReal x2759=((0.749999650312296)*cj4);
IkReal x2760=(cj4*cj5);
IkReal x2761=((1.0)*cj3);
IkReal x2762=((0.433012903784321)*r01);
IkReal x2763=(sj4*sj5);
IkReal x2764=((0.749999650312296)*sj3);
IkReal x2765=(r10*sj5);
IkReal x2766=((0.500000349687582)*sj3);
IkReal x2767=(cj0*sj1);
IkReal x2768=((0.500000349687582)*cj3);
IkReal x2769=((0.0160344678271334)*r22);
IkReal x2770=(r20*sj3);
IkReal x2771=(r00*sj5);
IkReal x2772=(cj3*r11);
IkReal x2773=((0.0160344678271334)*r12);
IkReal x2774=((0.433012903784321)*r11);
IkReal x2775=(cj5*r11);
IkReal x2776=(r10*sj3);
IkReal x2777=(r00*sj3);
IkReal x2778=((0.433012903784321)*sj3);
IkReal x2779=(cj5*sj4);
IkReal x2780=(r20*sj5);
IkReal x2781=((0.433012903784321)*r21);
IkReal x2782=(sj0*sj1);
IkReal x2783=(cj3*r01);
IkReal x2784=(cj5*r21);
IkReal x2785=((0.0160344678271334)*r02);
IkReal x2786=(cj5*r01);
IkReal x2787=((0.250000349687704)*sj3);
IkReal x2788=(cj1*x2754);
IkReal x2789=((0.500000349687582)*x2779);
IkReal x2790=((0.27144)*x2755);
IkReal x2791=(cj4*x2778);
IkReal x2792=(sj1*x2754);
IkReal x2793=((0.866025201892125)*cj3*sj4);
IkReal x2794=(cj1*x2755);
IkReal x2795=((1.0)*x2755);
evalcond[0]=(x2792+x2794+(((-1.0)*r22*x2759))+(((-0.866025201892125)*r20*x2779))+(((-0.250000349687704)*r22))+(((0.866025201892125)*r21*x2763))+((sj5*x2758))+(((-1.0)*x2756*x2758))+(((-1.0)*x2760*x2781))+((cj5*x2781)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.866025201892125)*r00*x2779))+((cj5*x2762))+(((-0.433012903784321)*r00*x2756))+(((-1.0)*x2760*x2762))+(((0.433012903784321)*x2771))+(((0.866025201892125)*r01*x2763))+((cj0*x2788))+(((-1.0)*r02*x2759))+(((-1.0)*x2767*x2795)));
evalcond[2]=((((0.866025201892125)*r11*x2763))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x2765))+((cj5*x2774))+((sj0*x2788))+(((-1.0)*x2760*x2774))+(((-1.0)*x2782*x2795))+(((-1.0)*r12*x2759))+(((-0.866025201892125)*r10*x2779))+(((-0.433012903784321)*r10*x2756)));
evalcond[3]=(((cj4*x2769))+(((0.00925751294893567)*r21*x2760))+(((0.41)*cj1))+(((0.0648043305514941)*x2780))+(((0.0648043305514941)*x2784))+(((0.0185150129489311)*r20*x2779))+(((-0.0185150129489311)*r21*x2763))+(((-1.0)*x2769))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x2756))+(((-0.27144)*x2792))+(((-1.0)*cj1*x2790)));
evalcond[4]=((((-1.0)*x2785))+(((-0.27144)*cj0*x2788))+(((-0.41)*x2767))+((x2767*x2790))+(((0.00925751294893567)*r01*x2760))+(((0.0648043305514941)*x2786))+(((-1.0)*px))+(((0.00925751294893567)*r00*x2756))+(((0.0185150129489311)*r00*x2779))+(((-0.0185150129489311)*r01*x2763))+(((0.0648043305514941)*x2771))+((cj4*x2785))+(((0.0098)*sj0)));
evalcond[5]=((((0.00925751294893567)*r10*x2756))+((cj4*x2773))+(((-0.27144)*sj0*x2788))+((x2782*x2790))+(((-1.0)*py))+(((-1.0)*x2773))+(((0.0185150129489311)*r10*x2779))+(((0.0648043305514941)*x2765))+(((-0.41)*x2782))+(((-0.0185150129489311)*r11*x2763))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2775))+(((0.00925751294893567)*r11*x2760)));
evalcond[6]=(((x2764*x2784))+((x2764*x2780))+((x2756*x2757))+(((-1.0)*r21*x2763*x2766))+((x2757*x2789))+((r20*x2766*x2779))+((r20*x2763*x2768))+((r22*x2793))+((r22*x2791))+((sj1*x2755))+(((-1.0)*x2788))+(((-1.0)*r20*x2760*x2761))+((r21*x2760*x2787))+(((0.250000349687704)*x2756*x2770))+(((-1.0)*r22*x2778)));
evalcond[7]=(((r01*x2760*x2787))+((x2754*x2767))+((x2764*x2786))+(((-1.0)*r02*x2778))+((r00*x2766*x2779))+(((-1.0)*r01*x2763*x2766))+((r02*x2793))+((r02*x2791))+((x2756*x2783))+((r00*x2763*x2768))+((r01*x2768*x2779))+((x2764*x2771))+((cj0*x2794))+(((-1.0)*r00*x2760*x2761))+(((0.250000349687704)*x2756*x2777)));
evalcond[8]=(((x2756*x2772))+(((-1.0)*r12*x2778))+((r12*x2791))+((r12*x2793))+((r10*x2763*x2768))+((r11*x2760*x2787))+((sj0*x2794))+((x2754*x2782))+(((-1.0)*r10*x2760*x2761))+((r10*x2766*x2779))+((x2764*x2775))+((sj4*x2768*x2775))+((x2764*x2765))+(((0.250000349687704)*x2756*x2776))+(((-1.0)*r11*x2763*x2766)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2796=(cj0*r20);
IkReal x2797=(cj1*r00);
IkReal x2798=(r02*sj1);
IkReal x2799=(r00*sj1);
IkReal x2800=((0.433012903784321)*sj5);
IkReal x2801=(cj4*sj1);
IkReal x2802=((0.749999650312296)*cj4);
IkReal x2803=(cj0*r22);
IkReal x2804=(r01*sj1);
IkReal x2805=(cj1*cj4);
IkReal x2806=(cj0*r21);
IkReal x2807=(cj1*r02);
IkReal x2808=((0.866025201892125)*cj5*sj4);
IkReal x2809=((0.866025201892125)*sj4*sj5);
IkReal x2810=((0.433012903784321)*cj5*r01);
IkReal x2811=((0.433012903784321)*cj5*x2806);
CheckValue<IkReal> x2812 = IKatan2WithCheck(IkReal((((x2797*x2808))+(((0.250000349687704)*sj1*x2803))+(((-1.0)*cj1*x2810))+((x2801*x2811))+((sj1*x2796*x2808))+(((-1.0)*sj1*x2806*x2809))+(((0.749999650312296)*x2801*x2803))+((cj4*x2797*x2800))+(((0.250000349687704)*x2807))+(((-1.0)*sj1*x2811))+((x2802*x2807))+(((-1.0)*x2797*x2800))+((x2805*x2810))+(((-1.0)*cj1*r01*x2809))+((x2796*x2800*x2801))+(((-1.0)*sj1*x2796*x2800)))),IkReal(((((-1.0)*cj1*x2796*x2800))+(((-1.0)*cj1*x2811))+((cj1*x2796*x2808))+(((-1.0)*cj4*x2799*x2800))+((x2804*x2809))+(((0.433012903784321)*cj5*x2804))+(((-1.0)*x2799*x2808))+(((-1.0)*cj1*x2806*x2809))+((x2805*x2811))+((x2799*x2800))+((cj1*x2802*x2803))+(((-1.0)*x2801*x2810))+(((-1.0)*x2798*x2802))+(((-0.250000349687704)*x2798))+((x2796*x2800*x2805))+(((0.250000349687704)*cj1*x2803)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2812.valid){
continue;
}
CheckValue<IkReal> x2813=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2813.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2812.value)+(((1.5707963267949)*(x2813.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2814=IKsin(j2);
IkReal x2815=IKcos(j2);
IkReal x2816=(cj4*sj5);
IkReal x2817=(cj3*r21);
IkReal x2818=((0.433012903784321)*r20);
IkReal x2819=((0.749999650312296)*cj4);
IkReal x2820=(cj4*cj5);
IkReal x2821=((1.0)*cj3);
IkReal x2822=((0.433012903784321)*r01);
IkReal x2823=(sj4*sj5);
IkReal x2824=((0.749999650312296)*sj3);
IkReal x2825=(r10*sj5);
IkReal x2826=((0.500000349687582)*sj3);
IkReal x2827=(cj0*sj1);
IkReal x2828=((0.500000349687582)*cj3);
IkReal x2829=((0.0160344678271334)*r22);
IkReal x2830=(r20*sj3);
IkReal x2831=(r00*sj5);
IkReal x2832=(cj3*r11);
IkReal x2833=((0.0160344678271334)*r12);
IkReal x2834=((0.433012903784321)*r11);
IkReal x2835=(cj5*r11);
IkReal x2836=(r10*sj3);
IkReal x2837=(r00*sj3);
IkReal x2838=((0.433012903784321)*sj3);
IkReal x2839=(cj5*sj4);
IkReal x2840=(r20*sj5);
IkReal x2841=((0.433012903784321)*r21);
IkReal x2842=(sj0*sj1);
IkReal x2843=(cj3*r01);
IkReal x2844=(cj5*r21);
IkReal x2845=((0.0160344678271334)*r02);
IkReal x2846=(cj5*r01);
IkReal x2847=((0.250000349687704)*sj3);
IkReal x2848=(cj1*x2814);
IkReal x2849=((0.500000349687582)*x2839);
IkReal x2850=((0.27144)*x2815);
IkReal x2851=(cj4*x2838);
IkReal x2852=(sj1*x2814);
IkReal x2853=((0.866025201892125)*cj3*sj4);
IkReal x2854=(cj1*x2815);
IkReal x2855=((1.0)*x2815);
evalcond[0]=((((-0.250000349687704)*r22))+((cj5*x2841))+(((-1.0)*r22*x2819))+(((0.866025201892125)*r21*x2823))+x2852+x2854+((sj5*x2818))+(((-1.0)*x2820*x2841))+(((-1.0)*x2816*x2818))+(((-0.866025201892125)*r20*x2839)));
evalcond[1]=((((-1.0)*x2820*x2822))+(((-0.250000349687704)*r02))+(((-1.0)*r02*x2819))+(((-0.433012903784321)*r00*x2816))+(((0.433012903784321)*x2831))+((cj5*x2822))+(((-0.866025201892125)*r00*x2839))+((cj0*x2848))+(((-1.0)*x2827*x2855))+(((0.866025201892125)*r01*x2823)));
evalcond[2]=((((-1.0)*r12*x2819))+(((-0.433012903784321)*r10*x2816))+(((-1.0)*x2842*x2855))+(((-0.250000349687704)*r12))+(((0.866025201892125)*r11*x2823))+((sj0*x2848))+((cj5*x2834))+(((0.433012903784321)*x2825))+(((-1.0)*x2820*x2834))+(((-0.866025201892125)*r10*x2839)));
evalcond[3]=((((-1.0)*cj1*x2850))+(((-0.27144)*x2852))+(((0.0185150129489311)*r20*x2839))+(((0.41)*cj1))+(((-0.0185150129489311)*r21*x2823))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x2816))+((cj4*x2829))+(((0.00925751294893567)*r21*x2820))+(((-1.0)*x2829))+(((0.0648043305514941)*x2840))+(((0.0648043305514941)*x2844)));
evalcond[4]=((((0.00925751294893567)*r00*x2816))+(((-0.27144)*cj0*x2848))+(((0.00925751294893567)*r01*x2820))+(((0.0185150129489311)*r00*x2839))+(((-1.0)*px))+((cj4*x2845))+(((-0.0185150129489311)*r01*x2823))+((x2827*x2850))+(((0.0648043305514941)*x2831))+(((0.0098)*sj0))+(((-0.41)*x2827))+(((-1.0)*x2845))+(((0.0648043305514941)*x2846)));
evalcond[5]=((((-0.41)*x2842))+(((-1.0)*x2833))+(((0.0185150129489311)*r10*x2839))+((cj4*x2833))+(((0.00925751294893567)*r11*x2820))+(((-0.27144)*sj0*x2848))+(((0.00925751294893567)*r10*x2816))+(((-1.0)*py))+((x2842*x2850))+(((0.0648043305514941)*x2835))+(((-0.0185150129489311)*r11*x2823))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2825)));
evalcond[6]=((((-1.0)*r21*x2823*x2826))+(((0.250000349687704)*x2816*x2830))+((x2817*x2849))+((sj1*x2815))+((r22*x2851))+((r22*x2853))+(((-1.0)*r22*x2838))+(((-1.0)*r20*x2820*x2821))+((x2824*x2840))+((x2824*x2844))+(((-1.0)*x2848))+((r20*x2823*x2828))+((x2816*x2817))+((r20*x2826*x2839))+((r21*x2820*x2847)));
evalcond[7]=(((x2814*x2827))+((r01*x2828*x2839))+(((0.250000349687704)*x2816*x2837))+((x2816*x2843))+(((-1.0)*r01*x2823*x2826))+((r00*x2826*x2839))+(((-1.0)*r00*x2820*x2821))+((cj0*x2854))+((x2824*x2846))+((r01*x2820*x2847))+((r00*x2823*x2828))+((x2824*x2831))+((r02*x2851))+((r02*x2853))+(((-1.0)*r02*x2838)));
evalcond[8]=((((-1.0)*r10*x2820*x2821))+(((-1.0)*r11*x2823*x2826))+((sj0*x2854))+(((0.250000349687704)*x2816*x2836))+((r12*x2851))+((r12*x2853))+((x2824*x2825))+((x2814*x2842))+((x2816*x2832))+((sj4*x2828*x2835))+((r11*x2820*x2847))+(((-1.0)*r12*x2838))+((x2824*x2835))+((r10*x2826*x2839))+((r10*x2823*x2828)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2856=((0.433012903784321)*cj5);
IkReal x2857=(sj4*sj5);
IkReal x2858=((0.500000349687582)*sj0);
IkReal x2859=(r22*sj0);
IkReal x2860=((0.866025201892125)*sj4);
IkReal x2861=((0.433012903784321)*cj4);
IkReal x2862=((0.250000349687704)*cj4);
IkReal x2863=(cj5*sj4);
IkReal x2864=(cj4*sj0);
IkReal x2865=(cj5*r21*sj0);
IkReal x2866=(r20*sj0*sj5);
CheckValue<IkReal> x2867=IKPowWithIntegerCheck(IKsign((((r11*(((((-1.0)*cj4*x2856))+(((0.866025201892125)*x2857))+x2856))))+((r10*(((((-1.0)*cj5*x2860))+(((-1.0)*sj5*x2861))+(((0.433012903784321)*sj5))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4)))))))),-1);
if(!x2867.valid){
continue;
}
CheckValue<IkReal> x2868 = IKatan2WithCheck(IkReal((((r21*x2857*x2858))+(((-1.0)*x2862*x2865))+(((-1.0)*x2862*x2866))+(((-1.0)*r20*x2858*x2863))+(((-1.0)*x2859*x2861))+(((0.433012903784321)*x2859))+(((-0.749999650312296)*x2866))+(((-0.749999650312296)*x2865)))),IkReal(((((-1.0)*r20*x2857*x2858))+(((-1.0)*r21*x2858*x2863))+(((-1.0)*x2859*x2860))+((cj5*r20*x2864))+(((-1.0)*r21*sj5*x2864)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2868.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2867.value)))+(x2868.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2869=IKsin(j3);
IkReal x2870=IKcos(j3);
IkReal x2871=(r11*sj5);
IkReal x2872=(cj5*r20);
IkReal x2873=(cj4*cj5);
IkReal x2874=(r00*sj5);
IkReal x2875=(cj5*r01);
IkReal x2876=(r10*sj5);
IkReal x2877=(r21*sj5);
IkReal x2878=(r20*sj5);
IkReal x2879=(cj5*r21);
IkReal x2880=(cj5*r11);
IkReal x2881=(r01*sj5);
IkReal x2882=((1.0)*x2869);
IkReal x2883=((0.250000349687704)*x2870);
IkReal x2884=((0.749999650312296)*x2870);
IkReal x2885=(cj4*x2869);
IkReal x2886=((0.500000349687582)*sj4*x2870);
IkReal x2887=((0.433012903784321)*r12*x2870);
IkReal x2888=((0.500000349687582)*sj4*x2869);
IkReal x2889=((0.433012903784321)*r02*x2870);
IkReal x2890=((0.866025201892125)*sj4*x2869);
IkReal x2891=((0.433012903784321)*r22*x2870);
evalcond[0]=(((x2877*x2885))+((x2877*x2886))+(((-1.0)*cj4*x2872*x2882))+((r22*x2890))+(((-1.0)*r21*x2873*x2883))+((x2879*x2888))+(((-1.0)*x2879*x2884))+((x2878*x2888))+(((-1.0)*x2878*x2884))+x2891+(((-1.0)*cj4*x2891))+(((-1.0)*cj4*x2878*x2883))+(((-1.0)*x2872*x2886)));
evalcond[1]=(cj0+(((-1.0)*r10*x2873*x2882))+((x2880*x2888))+((x2876*x2888))+(((-1.0)*x2876*x2884))+(((-1.0)*r11*x2873*x2883))+((r12*x2890))+(((-1.0)*cj5*r10*x2886))+(((-1.0)*cj4*x2876*x2883))+x2887+((x2871*x2886))+((x2871*x2885))+(((-1.0)*x2880*x2884))+(((-1.0)*cj4*x2887)));
evalcond[2]=((((-1.0)*sj0))+(((-1.0)*cj4*x2874*x2883))+(((-1.0)*r00*x2873*x2882))+(((-1.0)*r01*x2873*x2883))+(((-1.0)*x2874*x2884))+((x2881*x2886))+((x2881*x2885))+((r02*x2890))+((x2875*x2888))+((x2874*x2888))+x2889+(((-1.0)*x2875*x2884))+(((-1.0)*cj4*x2889))+(((-1.0)*cj5*r00*x2886)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2892=((0.528192360616262)*sj4);
IkReal x2893=(r20*sj5);
IkReal x2894=((0.26409636501044)*cj4);
IkReal x2895=((0.444735007694415)*cj5);
IkReal x2896=((0.457427895740576)*cj4);
IkReal x2897=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+((r11*sj5*x2892))+(((-0.204620884747229)*r12))+((r11*x2895))+(((-1.0)*cj5*r11*x2894))+(((-1.0)*cj5*r10*x2892))+(((0.444735007694415)*x2897))+(((-1.0)*x2894*x2897))+(((-1.0)*r12*x2896)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x2892))+(((0.204620884747229)*r22))+((r22*x2896))+(((-0.444735007694415)*x2893))+((x2893*x2894))+(((-1.0)*r21*sj5*x2892))+((cj5*r21*x2894))+(((-1.0)*r21*x2895))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+((r11*sj5*x2892))+(((-0.204620884747229)*r12))+((r11*x2895))+(((-1.0)*cj5*r11*x2894))+(((-1.0)*cj5*r10*x2892))+(((0.444735007694415)*x2897))+(((-1.0)*x2894*x2897))+(((-1.0)*r12*x2896))))+IKsqr((((cj5*r20*x2892))+(((0.204620884747229)*r22))+((r22*x2896))+(((-0.444735007694415)*x2893))+((x2893*x2894))+(((-1.0)*r21*sj5*x2892))+((cj5*r21*x2894))+(((-1.0)*r21*x2895))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+((r11*sj5*x2892))+(((-0.204620884747229)*r12))+((r11*x2895))+(((-1.0)*cj5*r11*x2894))+(((-1.0)*cj5*r10*x2892))+(((0.444735007694415)*x2897))+(((-1.0)*x2894*x2897))+(((-1.0)*r12*x2896))), (((cj5*r20*x2892))+(((0.204620884747229)*r22))+((r22*x2896))+(((-0.444735007694415)*x2893))+((x2893*x2894))+(((-1.0)*r21*sj5*x2892))+((cj5*r21*x2894))+(((-1.0)*r21*x2895))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2898=((1.0)*py);
IkReal x2899=(cj5*r11);
IkReal x2900=(cj5*sj3);
IkReal x2901=(r20*sj5);
IkReal x2902=((0.135720094919197)*sj4);
IkReal x2903=(r21*sj5);
IkReal x2904=((0.0185150129489311)*sj4);
IkReal x2905=((0.135720094919197)*sj3);
IkReal x2906=((0.00925751294893567)*cj4);
IkReal x2907=(cj4*cj5);
IkReal x2908=(cj3*r10);
IkReal x2909=((0.0678600949192303)*cj4);
IkReal x2910=(r10*sj5);
IkReal x2911=((0.10827950965428)*cj4);
IkReal x2912=(cj4*r22);
IkReal x2913=((0.0160344678271334)*r12);
IkReal x2914=((0.20357990508077)*sj3);
IkReal x2915=(cj5*r20);
IkReal x2916=((0.216558867852667)*sj4);
IkReal x2917=((0.117537022603216)*sj3);
IkReal x2918=((0.27144)*cj3);
IkReal x2919=(cj5*r21);
IkReal x2920=(cj4*r12);
IkReal x2921=((0.41)*(IKsin(j1)));
IkReal x2922=((0.41)*(IKcos(j1)));
IkReal x2923=(cj5*r10*sj4);
IkReal x2924=(r11*sj4*sj5);
IkReal x2925=((0.235073880801598)*cj3*sj4);
IkReal x2926=(x2898+x2921);
evalcond[0]=((((-0.18234135315471)*x2901))+(((-1.0)*x2922))+((x2915*x2916))+pz+(((-0.18234135315471)*x2919))+(((-1.0)*x2903*x2916))+((x2901*x2911))+(((0.187545437253636)*x2912))+(((0.0838945627463637)*r22))+(((0.10827950965428)*r21*x2907)));
evalcond[1]=((((-0.187545437253636)*x2920))+((r11*sj5*x2916))+(((-1.0)*x2899*x2911))+(((-1.0)*cj5*r10*x2916))+(((-1.0)*x2926))+(((0.18234135315471)*x2910))+(((-0.0838945627463637)*r12))+(((-1.0)*x2910*x2911))+(((0.18234135315471)*x2899)));
evalcond[2]=((((-0.20357990508077)*r21*x2900))+(((0.0648043305514941)*x2910))+((x2899*x2906))+(((-1.0)*x2912*x2917))+((sj3*x2902*x2903))+(((-1.0)*x2926))+(((-1.0)*cj3*x2901*x2902))+(((0.0648043305514941)*x2899))+(((-1.0)*cj3*x2902*x2919))+(((-1.0)*r21*x2900*x2909))+(((-1.0)*sj3*x2901*x2909))+(((-1.0)*r11*sj5*x2904))+((cj5*r10*x2904))+((x2906*x2910))+((cj4*x2913))+(((-1.0)*x2901*x2914))+(((-1.0)*r20*x2900*x2902))+(((-1.0)*r22*x2925))+((r22*x2917))+(((-1.0)*x2913))+(((-1.0)*cj4*x2903*x2918))+((r20*x2907*x2918)));
evalcond[3]=((((0.0648043305514941)*x2919))+(((-0.27144)*x2907*x2908))+(((-1.0)*r11*sj3*sj5*x2902))+((x2901*x2906))+((sj5*x2902*x2908))+(((-0.0160344678271334)*r22))+(((-1.0)*r12*x2917))+((sj3*x2899*x2909))+((x2917*x2920))+((sj3*x2909*x2910))+(((-1.0)*pz))+((cj3*x2899*x2902))+((x2904*x2915))+((cj4*r11*sj5*x2918))+(((-1.0)*x2903*x2904))+((x2906*x2919))+((r10*x2900*x2902))+((x2910*x2914))+(((0.0648043305514941)*x2901))+(((0.0160344678271334)*x2912))+((x2899*x2914))+x2922+((r12*x2925)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2927=((0.250000349687704)*r12);
IkReal x2928=((0.749999650312296)*cj4);
IkReal x2929=((0.433012903784321)*sj5);
IkReal x2930=(cj1*r10);
IkReal x2931=(cj1*r22);
IkReal x2932=(cj1*r20);
IkReal x2933=((0.866025201892125)*sj4);
IkReal x2934=(r20*sj1);
IkReal x2935=(r22*sj1);
IkReal x2936=(r10*sj1);
IkReal x2937=(r11*sj1);
IkReal x2938=((0.433012903784321)*cj5);
IkReal x2939=(r21*sj1);
IkReal x2940=(cj1*r21);
IkReal x2941=(cj1*r11);
IkReal x2942=(cj5*sj1*x2933);
IkReal x2943=(cj4*r21*x2938);
if( IKabs((((cj4*x2929*x2930))+((cj4*x2929*x2934))+((x2928*x2935))+(((-1.0)*sj5*x2933*x2939))+((cj5*x2930*x2933))+(((-1.0)*x2938*x2939))+((cj5*x2933*x2934))+(((-1.0)*sj5*x2933*x2941))+(((-1.0)*x2929*x2930))+(((-1.0)*x2929*x2934))+((cj4*x2938*x2941))+((cj4*x2938*x2939))+((cj1*r12*x2928))+((cj1*x2927))+(((0.250000349687704)*x2935))+(((-1.0)*x2938*x2941)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2929*x2936))+((cj4*x2929*x2932))+((x2928*x2931))+((cj5*x2932*x2933))+(((-1.0)*sj5*x2933*x2940))+(((-1.0)*x2929*x2932))+(((-1.0)*sj1*x2927))+(((-1.0)*r12*sj1*x2928))+((x2937*x2938))+((cj4*x2938*x2940))+(((-1.0)*cj4*x2937*x2938))+(((-1.0)*cj4*x2929*x2936))+(((-1.0)*cj5*x2933*x2936))+((sj5*x2933*x2937))+(((0.250000349687704)*x2931))+(((-1.0)*x2938*x2940)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x2929*x2930))+((cj4*x2929*x2934))+((x2928*x2935))+(((-1.0)*sj5*x2933*x2939))+((cj5*x2930*x2933))+(((-1.0)*x2938*x2939))+((cj5*x2933*x2934))+(((-1.0)*sj5*x2933*x2941))+(((-1.0)*x2929*x2930))+(((-1.0)*x2929*x2934))+((cj4*x2938*x2941))+((cj4*x2938*x2939))+((cj1*r12*x2928))+((cj1*x2927))+(((0.250000349687704)*x2935))+(((-1.0)*x2938*x2941))))+IKsqr((((x2929*x2936))+((cj4*x2929*x2932))+((x2928*x2931))+((cj5*x2932*x2933))+(((-1.0)*sj5*x2933*x2940))+(((-1.0)*x2929*x2932))+(((-1.0)*sj1*x2927))+(((-1.0)*r12*sj1*x2928))+((x2937*x2938))+((cj4*x2938*x2940))+(((-1.0)*cj4*x2937*x2938))+(((-1.0)*cj4*x2929*x2936))+(((-1.0)*cj5*x2933*x2936))+((sj5*x2933*x2937))+(((0.250000349687704)*x2931))+(((-1.0)*x2938*x2940))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x2929*x2930))+((cj4*x2929*x2934))+((x2928*x2935))+(((-1.0)*sj5*x2933*x2939))+((cj5*x2930*x2933))+(((-1.0)*x2938*x2939))+((cj5*x2933*x2934))+(((-1.0)*sj5*x2933*x2941))+(((-1.0)*x2929*x2930))+(((-1.0)*x2929*x2934))+((cj4*x2938*x2941))+((cj4*x2938*x2939))+((cj1*r12*x2928))+((cj1*x2927))+(((0.250000349687704)*x2935))+(((-1.0)*x2938*x2941))), (((x2929*x2936))+((cj4*x2929*x2932))+((x2928*x2931))+((cj5*x2932*x2933))+(((-1.0)*sj5*x2933*x2940))+(((-1.0)*x2929*x2932))+(((-1.0)*sj1*x2927))+(((-1.0)*r12*sj1*x2928))+((x2937*x2938))+((cj4*x2938*x2940))+(((-1.0)*cj4*x2937*x2938))+(((-1.0)*cj4*x2929*x2936))+(((-1.0)*cj5*x2933*x2936))+((sj5*x2933*x2937))+(((0.250000349687704)*x2931))+(((-1.0)*x2938*x2940))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2944=IKsin(j2);
IkReal x2945=IKcos(j2);
IkReal x2946=(cj5*r11);
IkReal x2947=((0.433012903784321)*cj4);
IkReal x2948=(r21*sj5);
IkReal x2949=((0.500000349687582)*sj4);
IkReal x2950=((0.749999650312296)*sj3);
IkReal x2951=(cj3*cj4);
IkReal x2952=(cj5*r10);
IkReal x2953=((0.0185150129489311)*sj4);
IkReal x2954=(r20*sj5);
IkReal x2955=(cj4*r22);
IkReal x2956=(r10*sj5);
IkReal x2957=(r22*sj3);
IkReal x2958=(r11*sj5);
IkReal x2959=((0.00925751294893567)*cj4);
IkReal x2960=(cj5*r21);
IkReal x2961=(r12*sj3);
IkReal x2962=(cj4*r12);
IkReal x2963=(cj5*r20);
IkReal x2964=((0.866025201892125)*sj4);
IkReal x2965=(cj1*x2945);
IkReal x2966=(sj1*x2944);
IkReal x2967=(cj1*x2944);
IkReal x2968=((0.250000349687704)*cj4*sj3);
IkReal x2969=(sj1*x2945);
IkReal x2970=(cj3*x2964);
IkReal x2971=(x2965+x2966);
evalcond[0]=((((-1.0)*x2947*x2954))+((x2948*x2964))+(((-1.0)*x2963*x2964))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x2955))+(((-1.0)*x2947*x2960))+(((0.433012903784321)*x2960))+x2971+(((0.433012903784321)*x2954)));
evalcond[1]=((((-1.0)*x2947*x2956))+(((-0.250000349687704)*r12))+(((-1.0)*x2969))+(((-1.0)*x2946*x2947))+((x2958*x2964))+(((0.433012903784321)*x2946))+x2967+(((-1.0)*x2952*x2964))+(((0.433012903784321)*x2956))+(((-0.749999650312296)*x2962)));
evalcond[2]=(((x2954*x2959))+(((0.0160344678271334)*x2955))+(((-1.0)*x2948*x2953))+(((-0.27144)*x2966))+(((-0.27144)*x2965))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2960))+(((-1.0)*pz))+((x2959*x2960))+(((0.0648043305514941)*x2954))+((x2953*x2963)));
evalcond[3]=((((-1.0)*x2953*x2958))+((x2946*x2959))+(((0.0160344678271334)*x2962))+(((-0.27144)*x2967))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-1.0)*py))+((x2952*x2953))+(((0.0648043305514941)*x2946))+(((0.0648043305514941)*x2956))+(((0.27144)*x2969))+((x2956*x2959)));
evalcond[4]=(((x2947*x2961))+((x2951*x2958))+((x2950*x2956))+((x2956*x2968))+((x2946*x2950))+((cj3*x2946*x2949))+((cj3*x2949*x2956))+((r12*x2970))+((sj3*x2949*x2952))+(((-0.433012903784321)*x2961))+(((-1.0)*sj3*x2949*x2958))+(((-1.0)*x2951*x2952))+x2971+((x2946*x2968)));
evalcond[5]=(((x2950*x2954))+((sj3*x2949*x2963))+(((-1.0)*x2967))+((cj3*x2949*x2954))+((x2947*x2957))+((cj3*x2949*x2960))+((x2954*x2968))+((x2948*x2951))+((x2960*x2968))+((r22*x2970))+(((-0.433012903784321)*x2957))+x2969+(((-1.0)*x2951*x2963))+((x2950*x2960))+(((-1.0)*sj3*x2948*x2949)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2972=((0.528192360616262)*sj4);
IkReal x2973=((0.26409636501044)*cj4);
IkReal x2974=(r20*sj5);
IkReal x2975=((0.444735007694415)*cj5);
IkReal x2976=((0.457427895740576)*cj4);
IkReal x2977=(r10*sj5);
if( IKabs((((cj5*r11*x2973))+(((-1.0)*r11*x2975))+(((-1.0)*r11*sj5*x2972))+((r12*x2976))+((cj5*r10*x2972))+(((-0.444735007694415)*x2977))+(((0.204620884747229)*r12))+((x2973*x2977))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x2972))+(((0.204620884747229)*r22))+(((-1.0)*r21*x2975))+(((-1.0)*r21*sj5*x2972))+(((-0.444735007694415)*x2974))+((r22*x2976))+((cj5*r21*x2973))+((x2973*x2974))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r11*x2973))+(((-1.0)*r11*x2975))+(((-1.0)*r11*sj5*x2972))+((r12*x2976))+((cj5*r10*x2972))+(((-0.444735007694415)*x2977))+(((0.204620884747229)*r12))+((x2973*x2977))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x2972))+(((0.204620884747229)*r22))+(((-1.0)*r21*x2975))+(((-1.0)*r21*sj5*x2972))+(((-0.444735007694415)*x2974))+((r22*x2976))+((cj5*r21*x2973))+((x2973*x2974))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r11*x2973))+(((-1.0)*r11*x2975))+(((-1.0)*r11*sj5*x2972))+((r12*x2976))+((cj5*r10*x2972))+(((-0.444735007694415)*x2977))+(((0.204620884747229)*r12))+((x2973*x2977))+(((2.4390243902439)*py))), (((cj5*r20*x2972))+(((0.204620884747229)*r22))+(((-1.0)*r21*x2975))+(((-1.0)*r21*sj5*x2972))+(((-0.444735007694415)*x2974))+((r22*x2976))+((cj5*r21*x2973))+((x2973*x2974))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2978=(cj5*sj4);
IkReal x2979=((0.135720094919197)*sj3);
IkReal x2980=(cj5*r11);
IkReal x2981=(cj5*r21);
IkReal x2982=((0.20357990508077)*sj3);
IkReal x2983=(r20*sj5);
IkReal x2984=((0.00925751294893567)*cj4);
IkReal x2985=(cj4*r10);
IkReal x2986=((0.27144)*cj3);
IkReal x2987=((0.10827950965428)*cj4);
IkReal x2988=((0.117537022603216)*sj3);
IkReal x2989=(cj4*r22);
IkReal x2990=(cj3*sj4);
IkReal x2991=(cj4*r12);
IkReal x2992=(r10*sj5);
IkReal x2993=(cj4*sj5);
IkReal x2994=((0.135720094919197)*cj3);
IkReal x2995=((0.41)*(IKcos(j1)));
IkReal x2996=((0.41)*(IKsin(j1)));
IkReal x2997=(r11*sj4*sj5);
IkReal x2998=((0.0678600949192303)*cj4*sj3);
IkReal x2999=(r21*sj4*sj5);
evalcond[0]=((((-1.0)*x2996))+(((0.10827950965428)*sj5*x2985))+(((-0.18234135315471)*x2980))+((x2980*x2987))+py+(((-0.216558867852667)*x2997))+(((-0.18234135315471)*x2992))+(((0.216558867852667)*r10*x2978))+(((0.0838945627463637)*r12))+(((0.187545437253636)*x2991)));
evalcond[1]=((((-1.0)*x2995))+((x2983*x2987))+(((-0.18234135315471)*x2981))+(((-0.18234135315471)*x2983))+((x2981*x2987))+(((0.216558867852667)*r20*x2978))+pz+(((-0.216558867852667)*x2999))+(((0.187545437253636)*x2989))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*x2995))+((r10*x2978*x2979))+(((-0.0160344678271334)*x2989))+((x2980*x2998))+(((0.235073880801598)*r12*x2990))+(((-1.0)*x2981*x2984))+(((-0.0648043305514941)*x2983))+(((-0.0648043305514941)*x2981))+(((-1.0)*r12*x2988))+((x2982*x2992))+(((0.0678600949192303)*sj3*sj5*x2985))+(((0.0185150129489311)*x2999))+(((-1.0)*cj5*x2985*x2986))+((x2980*x2982))+pz+((r11*x2978*x2994))+(((0.0160344678271334)*r22))+(((-1.0)*x2979*x2997))+(((-1.0)*x2983*x2984))+((x2988*x2991))+(((-0.0185150129489311)*r20*x2978))+(((0.135720094919197)*x2990*x2992))+((r11*x2986*x2993)));
evalcond[3]=((((0.135720094919197)*x2983*x2990))+((r20*x2978*x2979))+((x2981*x2998))+(((-1.0)*cj4*cj5*r20*x2986))+((x2988*x2989))+(((-0.0160344678271334)*r12))+(((0.235073880801598)*r22*x2990))+(((-0.0185150129489311)*x2997))+((x2981*x2982))+(((-1.0)*py))+((x2980*x2984))+(((0.0185150129489311)*r10*x2978))+((r21*x2978*x2994))+(((-1.0)*r22*x2988))+((x2982*x2983))+(((-1.0)*x2979*x2999))+(((0.0648043305514941)*x2980))+(((0.0160344678271334)*x2991))+((r21*x2986*x2993))+((x2984*x2992))+((x2983*x2998))+x2996+(((0.0648043305514941)*x2992)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3000=((0.250000349687704)*r12);
IkReal x3001=((0.749999650312296)*cj4);
IkReal x3002=(cj1*r22);
IkReal x3003=((0.866025201892125)*sj4);
IkReal x3004=(cj1*r20);
IkReal x3005=(sj1*sj5);
IkReal x3006=((0.433012903784321)*r20);
IkReal x3007=((0.433012903784321)*sj5);
IkReal x3008=(cj1*r10);
IkReal x3009=(r22*sj1);
IkReal x3010=((0.433012903784321)*r10);
IkReal x3011=((0.433012903784321)*cj5);
IkReal x3012=(cj1*r21);
IkReal x3013=(cj1*r11);
IkReal x3014=(r11*sj1);
IkReal x3015=(cj1*cj4*x3007);
IkReal x3016=(cj5*sj1*x3003);
IkReal x3017=(cj4*r21*x3011);
if( IKabs((((cj4*x3005*x3006))+((x3011*x3013))+(((-1.0)*cj1*r12*x3001))+(((-1.0)*cj4*x3011*x3013))+((x3001*x3009))+(((-1.0)*r21*x3003*x3005))+(((-1.0)*r21*sj1*x3011))+(((-1.0)*cj1*x3000))+(((-1.0)*cj4*x3007*x3008))+((sj1*x3017))+((x3007*x3008))+((r20*x3016))+(((-1.0)*cj5*x3003*x3008))+(((-1.0)*x3005*x3006))+(((0.250000349687704)*x3009))+((sj5*x3003*x3013)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x3003*x3005))+((cj4*x3005*x3010))+((cj4*x3011*x3014))+((cj4*x3011*x3012))+(((-1.0)*sj5*x3003*x3012))+((x3001*x3002))+((r10*x3016))+((sj1*x3000))+(((-1.0)*x3011*x3014))+(((-1.0)*x3011*x3012))+((r12*sj1*x3001))+(((-1.0)*x3004*x3007))+((cj4*x3004*x3007))+(((0.250000349687704)*x3002))+(((-1.0)*x3005*x3010))+((cj5*x3003*x3004)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x3005*x3006))+((x3011*x3013))+(((-1.0)*cj1*r12*x3001))+(((-1.0)*cj4*x3011*x3013))+((x3001*x3009))+(((-1.0)*r21*x3003*x3005))+(((-1.0)*r21*sj1*x3011))+(((-1.0)*cj1*x3000))+(((-1.0)*cj4*x3007*x3008))+((sj1*x3017))+((x3007*x3008))+((r20*x3016))+(((-1.0)*cj5*x3003*x3008))+(((-1.0)*x3005*x3006))+(((0.250000349687704)*x3009))+((sj5*x3003*x3013))))+IKsqr(((((-1.0)*r11*x3003*x3005))+((cj4*x3005*x3010))+((cj4*x3011*x3014))+((cj4*x3011*x3012))+(((-1.0)*sj5*x3003*x3012))+((x3001*x3002))+((r10*x3016))+((sj1*x3000))+(((-1.0)*x3011*x3014))+(((-1.0)*x3011*x3012))+((r12*sj1*x3001))+(((-1.0)*x3004*x3007))+((cj4*x3004*x3007))+(((0.250000349687704)*x3002))+(((-1.0)*x3005*x3010))+((cj5*x3003*x3004))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x3005*x3006))+((x3011*x3013))+(((-1.0)*cj1*r12*x3001))+(((-1.0)*cj4*x3011*x3013))+((x3001*x3009))+(((-1.0)*r21*x3003*x3005))+(((-1.0)*r21*sj1*x3011))+(((-1.0)*cj1*x3000))+(((-1.0)*cj4*x3007*x3008))+((sj1*x3017))+((x3007*x3008))+((r20*x3016))+(((-1.0)*cj5*x3003*x3008))+(((-1.0)*x3005*x3006))+(((0.250000349687704)*x3009))+((sj5*x3003*x3013))), ((((-1.0)*r11*x3003*x3005))+((cj4*x3005*x3010))+((cj4*x3011*x3014))+((cj4*x3011*x3012))+(((-1.0)*sj5*x3003*x3012))+((x3001*x3002))+((r10*x3016))+((sj1*x3000))+(((-1.0)*x3011*x3014))+(((-1.0)*x3011*x3012))+((r12*sj1*x3001))+(((-1.0)*x3004*x3007))+((cj4*x3004*x3007))+(((0.250000349687704)*x3002))+(((-1.0)*x3005*x3010))+((cj5*x3003*x3004))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3018=IKcos(j2);
IkReal x3019=IKsin(j2);
IkReal x3020=(cj5*r11);
IkReal x3021=((0.433012903784321)*cj4);
IkReal x3022=(r21*sj5);
IkReal x3023=((0.500000349687582)*sj4);
IkReal x3024=((0.749999650312296)*sj3);
IkReal x3025=(cj3*cj4);
IkReal x3026=(cj5*r10);
IkReal x3027=((0.0185150129489311)*sj4);
IkReal x3028=(r20*sj5);
IkReal x3029=(cj4*r22);
IkReal x3030=(r10*sj5);
IkReal x3031=(r12*sj3);
IkReal x3032=(r11*sj5);
IkReal x3033=(r22*sj3);
IkReal x3034=((0.27144)*sj1);
IkReal x3035=((0.00925751294893567)*cj4);
IkReal x3036=(cj5*r20);
IkReal x3037=(cj5*r21);
IkReal x3038=(cj4*r12);
IkReal x3039=((0.866025201892125)*sj4);
IkReal x3040=(sj1*x3018);
IkReal x3041=(cj1*x3018);
IkReal x3042=(cj1*x3019);
IkReal x3043=((0.250000349687704)*cj4*sj3);
IkReal x3044=(cj3*x3039);
IkReal x3045=(sj1*x3019);
IkReal x3046=((1.0)*x3042);
evalcond[0]=((((-0.250000349687704)*r22))+x3041+x3045+(((-1.0)*x3021*x3028))+((x3022*x3039))+(((-1.0)*x3036*x3039))+(((-1.0)*x3021*x3037))+(((0.433012903784321)*x3037))+(((0.433012903784321)*x3028))+(((-0.749999650312296)*x3029)));
evalcond[1]=((((-0.250000349687704)*r12))+x3040+(((-1.0)*x3020*x3021))+(((-1.0)*x3046))+(((-1.0)*x3026*x3039))+(((-1.0)*x3021*x3030))+(((0.433012903784321)*x3030))+(((0.433012903784321)*x3020))+(((-0.749999650312296)*x3038))+((x3032*x3039)));
evalcond[2]=((((-0.27144)*x3041))+((x3028*x3035))+(((-1.0)*x3019*x3034))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3035*x3037))+(((-1.0)*pz))+(((0.0160344678271334)*x3029))+(((0.0648043305514941)*x3028))+(((-1.0)*x3022*x3027))+(((0.0648043305514941)*x3037))+((x3027*x3036)));
evalcond[3]=((((0.0160344678271334)*x3038))+((x3030*x3035))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.27144)*x3042))+(((-1.0)*py))+(((-1.0)*x3027*x3032))+(((0.0648043305514941)*x3020))+((x3020*x3035))+(((0.0648043305514941)*x3030))+(((-1.0)*x3018*x3034))+((x3026*x3027)));
evalcond[4]=((((-1.0)*sj3*x3022*x3023))+((r22*x3044))+((x3037*x3043))+(((-1.0)*x3025*x3036))+x3040+(((-0.433012903784321)*x3033))+(((-1.0)*x3046))+((cj3*x3023*x3028))+((x3024*x3037))+((cj3*x3023*x3037))+((sj3*x3023*x3036))+((x3028*x3043))+((x3024*x3028))+((x3021*x3033))+((x3022*x3025)));
evalcond[5]=(((cj3*x3020*x3023))+(((-0.433012903784321)*x3031))+((x3020*x3043))+(((-1.0)*x3025*x3026))+((x3024*x3030))+((x3020*x3024))+((cj3*x3023*x3030))+((sj3*x3023*x3026))+((x3030*x3043))+((x3025*x3032))+(((-1.0)*x3041))+(((-1.0)*x3045))+(((-1.0)*sj3*x3023*x3032))+((x3021*x3031))+((r12*x3044)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3047=((0.26409636501044)*cj4);
IkReal x3048=(r20*sj5);
IkReal x3049=(cj5*r21);
IkReal x3050=((0.457427895740576)*cj4);
IkReal x3051=(r00*sj5);
IkReal x3052=((0.528192360616262)*sj4);
IkReal x3053=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x3047*x3053))+(((-1.0)*x3047*x3051))+(((0.444735007694415)*x3051))+(((0.444735007694415)*x3053))+((r01*sj5*x3052))+(((-1.0)*r02*x3050))+(((-1.0)*cj5*r00*x3052)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((x3047*x3049))+((x3047*x3048))+(((-0.444735007694415)*x3048))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3052))+((r22*x3050))+((cj5*r20*x3052))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x3047*x3053))+(((-1.0)*x3047*x3051))+(((0.444735007694415)*x3051))+(((0.444735007694415)*x3053))+((r01*sj5*x3052))+(((-1.0)*r02*x3050))+(((-1.0)*cj5*r00*x3052))))+IKsqr(((((0.204620884747229)*r22))+((x3047*x3049))+((x3047*x3048))+(((-0.444735007694415)*x3048))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3052))+((r22*x3050))+((cj5*r20*x3052))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x3047*x3053))+(((-1.0)*x3047*x3051))+(((0.444735007694415)*x3051))+(((0.444735007694415)*x3053))+((r01*sj5*x3052))+(((-1.0)*r02*x3050))+(((-1.0)*cj5*r00*x3052))), ((((0.204620884747229)*r22))+((x3047*x3049))+((x3047*x3048))+(((-0.444735007694415)*x3048))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3052))+((r22*x3050))+((cj5*r20*x3052))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3054=((1.0)*px);
IkReal x3055=((0.187545437253636)*cj4);
IkReal x3056=(r20*sj5);
IkReal x3057=(r01*sj3);
IkReal x3058=(cj5*r21);
IkReal x3059=(cj3*r00);
IkReal x3060=((0.0185150129489311)*sj4);
IkReal x3061=(r21*sj5);
IkReal x3062=((0.20357990508077)*sj3);
IkReal x3063=(cj5*sj4);
IkReal x3064=((0.135720094919197)*sj3);
IkReal x3065=(cj4*cj5);
IkReal x3066=(r00*sj5);
IkReal x3067=((0.00925751294893567)*cj4);
IkReal x3068=((0.10827950965428)*cj4);
IkReal x3069=(cj4*r22);
IkReal x3070=((0.117537022603216)*sj3);
IkReal x3071=(cj5*r01);
IkReal x3072=((0.135720094919197)*cj3);
IkReal x3073=(r01*sj5);
IkReal x3074=((0.216558867852667)*sj4);
IkReal x3075=(cj4*r02);
IkReal x3076=((0.27144)*cj3);
IkReal x3077=((0.41)*(IKsin(j1)));
IkReal x3078=((0.41)*(IKcos(j1)));
IkReal x3079=((0.135720094919197)*sj4*sj5);
IkReal x3080=((0.0678600949192303)*cj4*sj3);
IkReal x3081=((0.235073880801598)*cj3*sj4);
IkReal x3082=(x3077+x3054);
evalcond[0]=((((-1.0)*x3061*x3074))+((x3058*x3068))+(((0.216558867852667)*r20*x3063))+(((-0.18234135315471)*x3058))+(((-0.18234135315471)*x3056))+(((-1.0)*x3078))+((r22*x3055))+pz+((x3056*x3068))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*x3066))+(((-1.0)*x3082))+(((-1.0)*x3066*x3068))+(((0.18234135315471)*x3071))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x3063))+(((-1.0)*r02*x3055))+((x3073*x3074))+(((-0.10827950965428)*r01*x3065)));
evalcond[2]=((((-1.0)*x3082))+(((-1.0)*x3058*x3062))+(((0.0648043305514941)*x3071))+(((0.00925751294893567)*r01*x3065))+(((-0.0160344678271334)*r02))+(((-1.0)*cj4*x3061*x3076))+(((-1.0)*x3060*x3073))+(((-1.0)*x3058*x3080))+((r22*x3070))+((sj4*x3061*x3064))+(((-1.0)*sj4*x3056*x3072))+(((-1.0)*x3056*x3080))+(((-1.0)*r20*x3063*x3064))+(((-1.0)*sj4*x3058*x3072))+((x3066*x3067))+((r20*x3065*x3076))+(((-1.0)*r22*x3081))+(((-1.0)*x3069*x3070))+((cj5*r00*x3060))+(((-1.0)*x3056*x3062))+(((0.0160344678271334)*x3075))+(((0.0648043305514941)*x3066)));
evalcond[3]=((((-1.0)*x3057*x3079))+(((-0.27144)*x3059*x3065))+(((-1.0)*x3060*x3061))+((r00*x3063*x3064))+x3078+(((-1.0)*r02*x3070))+((r01*x3063*x3072))+((x3058*x3067))+((cj5*r20*x3060))+(((-0.0160344678271334)*r22))+((x3066*x3080))+(((0.20357990508077)*cj5*x3057))+((r02*x3081))+((cj4*x3073*x3076))+(((-1.0)*pz))+((x3059*x3079))+(((0.0678600949192303)*x3057*x3065))+((x3056*x3067))+(((0.0160344678271334)*x3069))+((x3070*x3075))+(((0.0648043305514941)*x3058))+(((0.0648043305514941)*x3056))+((x3062*x3066)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3083=((0.250000349687704)*sj1);
IkReal x3084=(cj1*cj4);
IkReal x3085=((0.749999650312296)*r22);
IkReal x3086=(cj4*sj1);
IkReal x3087=((0.749999650312296)*r02);
IkReal x3088=((0.250000349687704)*cj1);
IkReal x3089=((0.433012903784321)*r00*sj5);
IkReal x3090=((0.433012903784321)*r20*sj5);
IkReal x3091=((0.433012903784321)*cj5*r01);
IkReal x3092=((0.433012903784321)*cj5*r21);
IkReal x3093=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3094=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3095=((0.866025201892125)*r01*sj4*sj5);
IkReal x3096=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x3089))+((r00*x3094))+((r20*x3093))+((x3086*x3090))+((x3086*x3092))+((x3084*x3091))+((r02*x3088))+(((-1.0)*sj1*x3096))+(((-1.0)*sj1*x3090))+(((-1.0)*sj1*x3092))+((x3085*x3086))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3095))+((x3084*x3089))+((x3084*x3087))+((r22*x3083)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x3095))+((sj1*x3091))+((sj1*x3089))+((r20*x3094))+((x3084*x3090))+((x3084*x3092))+(((-1.0)*r00*x3093))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+(((-1.0)*r02*x3083))+((x3084*x3085))+((r22*x3088))+(((-1.0)*x3086*x3091))+(((-1.0)*x3086*x3089))+(((-1.0)*x3086*x3087)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x3089))+((r00*x3094))+((r20*x3093))+((x3086*x3090))+((x3086*x3092))+((x3084*x3091))+((r02*x3088))+(((-1.0)*sj1*x3096))+(((-1.0)*sj1*x3090))+(((-1.0)*sj1*x3092))+((x3085*x3086))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3095))+((x3084*x3089))+((x3084*x3087))+((r22*x3083))))+IKsqr((((sj1*x3095))+((sj1*x3091))+((sj1*x3089))+((r20*x3094))+((x3084*x3090))+((x3084*x3092))+(((-1.0)*r00*x3093))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+(((-1.0)*r02*x3083))+((x3084*x3085))+((r22*x3088))+(((-1.0)*x3086*x3091))+(((-1.0)*x3086*x3089))+(((-1.0)*x3086*x3087))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x3089))+((r00*x3094))+((r20*x3093))+((x3086*x3090))+((x3086*x3092))+((x3084*x3091))+((r02*x3088))+(((-1.0)*sj1*x3096))+(((-1.0)*sj1*x3090))+(((-1.0)*sj1*x3092))+((x3085*x3086))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3095))+((x3084*x3089))+((x3084*x3087))+((r22*x3083))), (((sj1*x3095))+((sj1*x3091))+((sj1*x3089))+((r20*x3094))+((x3084*x3090))+((x3084*x3092))+(((-1.0)*r00*x3093))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+(((-1.0)*r02*x3083))+((x3084*x3085))+((r22*x3088))+(((-1.0)*x3086*x3091))+(((-1.0)*x3086*x3089))+(((-1.0)*x3086*x3087))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3097=IKsin(j2);
IkReal x3098=IKcos(j2);
IkReal x3099=((0.749999650312296)*sj3);
IkReal x3100=(cj5*r01);
IkReal x3101=(r00*sj5);
IkReal x3102=(cj4*cj5);
IkReal x3103=((1.0)*cj3);
IkReal x3104=(r21*sj3);
IkReal x3105=(cj4*sj5);
IkReal x3106=(cj3*r21);
IkReal x3107=((0.500000349687582)*sj4);
IkReal x3108=((0.433012903784321)*r20);
IkReal x3109=(cj4*r22);
IkReal x3110=((0.433012903784321)*sj3);
IkReal x3111=((0.433012903784321)*cj4);
IkReal x3112=(r01*sj5);
IkReal x3113=(r20*sj5);
IkReal x3114=((0.0160344678271334)*r02);
IkReal x3115=(cj4*r02);
IkReal x3116=((0.00925751294893567)*cj4);
IkReal x3117=((0.0185150129489311)*sj4);
IkReal x3118=(r21*sj5);
IkReal x3119=(cj5*r21);
IkReal x3120=((0.866025201892125)*sj4);
IkReal x3121=(cj5*r20);
IkReal x3122=(cj5*r00);
IkReal x3123=((0.250000349687704)*sj3);
IkReal x3124=(cj1*x3098);
IkReal x3125=(sj1*x3097);
IkReal x3126=(cj1*x3097);
IkReal x3127=(sj1*x3098);
IkReal x3128=(x3124+x3125);
evalcond[0]=(x3128+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x3102))+((sj5*x3108))+(((-0.749999650312296)*x3109))+((x3118*x3120))+(((-1.0)*x3105*x3108))+(((-1.0)*x3120*x3121))+(((0.433012903784321)*x3119)));
evalcond[1]=((((-0.250000349687704)*r02))+x3126+(((0.433012903784321)*x3100))+(((0.433012903784321)*x3101))+(((-0.749999650312296)*x3115))+(((-1.0)*x3127))+(((-1.0)*x3101*x3111))+(((-1.0)*x3120*x3122))+((x3112*x3120))+(((-1.0)*x3100*x3111)));
evalcond[2]=((((0.0648043305514941)*x3113))+(((0.0648043305514941)*x3119))+(((-1.0)*x3117*x3118))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-0.27144)*x3124))+(((-0.27144)*x3125))+(((0.00925751294893567)*r20*x3105))+(((0.00925751294893567)*r21*x3102))+(((0.0160344678271334)*x3109))+((x3117*x3121)));
evalcond[3]=(((x3101*x3116))+(((0.0648043305514941)*x3100))+(((0.0648043305514941)*x3101))+(((-1.0)*x3114))+(((-0.41)*sj1))+(((-1.0)*px))+(((-0.27144)*x3126))+(((-1.0)*x3112*x3117))+(((0.27144)*x3127))+((cj4*x3114))+((x3117*x3122))+((x3100*x3116)));
evalcond[4]=(((cj3*x3101*x3107))+x3128+((cj3*x3100*x3107))+((x3099*x3101))+((x3099*x3100))+((sj3*x3107*x3122))+(((-1.0)*r02*x3110))+((cj4*x3100*x3123))+((cj4*x3101*x3123))+((cj3*r02*x3120))+((cj3*r01*x3105))+(((-1.0)*sj3*x3107*x3112))+((x3110*x3115))+(((-1.0)*r00*x3102*x3103)));
evalcond[5]=(x3127+((sj3*x3107*x3121))+((cj3*r22*x3120))+(((-1.0)*r20*x3102*x3103))+((x3099*x3119))+((x3099*x3113))+(((-1.0)*x3126))+((cj5*x3106*x3107))+((x3109*x3110))+(((0.250000349687704)*x3102*x3104))+((r20*x3105*x3123))+(((-1.0)*r22*x3110))+(((-1.0)*sj5*x3104*x3107))+((x3105*x3106))+((cj3*x3107*x3113)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3129=(cj5*r21);
IkReal x3130=((0.26409636501044)*cj4);
IkReal x3131=((0.457427895740576)*cj4);
IkReal x3132=((0.528192360616262)*sj4);
IkReal x3133=(cj5*r01);
IkReal x3134=((0.444735007694415)*sj5);
if( IKabs(((((-1.0)*r01*sj5*x3132))+((x3130*x3133))+((cj5*r00*x3132))+(((-0.444735007694415)*x3133))+((r02*x3131))+(((0.204620884747229)*r02))+((r00*sj5*x3130))+(((-1.0)*r00*x3134))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x3132))+(((-1.0)*r20*x3134))+(((-1.0)*r21*sj5*x3132))+((r20*sj5*x3130))+(((-0.444735007694415)*x3129))+((r22*x3131))+((x3129*x3130))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r01*sj5*x3132))+((x3130*x3133))+((cj5*r00*x3132))+(((-0.444735007694415)*x3133))+((r02*x3131))+(((0.204620884747229)*r02))+((r00*sj5*x3130))+(((-1.0)*r00*x3134))+(((2.4390243902439)*px))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x3132))+(((-1.0)*r20*x3134))+(((-1.0)*r21*sj5*x3132))+((r20*sj5*x3130))+(((-0.444735007694415)*x3129))+((r22*x3131))+((x3129*x3130))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r01*sj5*x3132))+((x3130*x3133))+((cj5*r00*x3132))+(((-0.444735007694415)*x3133))+((r02*x3131))+(((0.204620884747229)*r02))+((r00*sj5*x3130))+(((-1.0)*r00*x3134))+(((2.4390243902439)*px))), ((((0.204620884747229)*r22))+((cj5*r20*x3132))+(((-1.0)*r20*x3134))+(((-1.0)*r21*sj5*x3132))+((r20*sj5*x3130))+(((-0.444735007694415)*x3129))+((r22*x3131))+((x3129*x3130))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3135=((0.187545437253636)*cj4);
IkReal x3136=(cj5*r20);
IkReal x3137=(r01*sj5);
IkReal x3138=(cj5*r21);
IkReal x3139=(cj3*r00);
IkReal x3140=(sj4*sj5);
IkReal x3141=((0.20357990508077)*sj3);
IkReal x3142=(r20*sj5);
IkReal x3143=(cj4*cj5);
IkReal x3144=((0.00925751294893567)*cj4);
IkReal x3145=((0.117537022603216)*sj3);
IkReal x3146=((0.10827950965428)*cj4);
IkReal x3147=(r00*sj5);
IkReal x3148=(cj4*r22);
IkReal x3149=(r21*sj5);
IkReal x3150=((0.216558867852667)*sj4);
IkReal x3151=((0.0185150129489311)*sj4);
IkReal x3152=(cj3*sj4);
IkReal x3153=(cj4*r02);
IkReal x3154=(cj5*r01);
IkReal x3155=((0.41)*(IKcos(j1)));
IkReal x3156=((0.41)*(IKsin(j1)));
IkReal x3157=((0.135720094919197)*sj3*sj4);
IkReal x3158=((0.0678600949192303)*cj4*sj3);
IkReal x3159=(cj5*r00*sj4);
IkReal x3160=((0.27144)*cj3*cj4);
evalcond[0]=((((-1.0)*x3156))+((x3146*x3147))+(((0.10827950965428)*r01*x3143))+((cj5*r00*x3150))+((r02*x3135))+px+(((-1.0)*x3137*x3150))+(((-0.18234135315471)*x3154))+(((-0.18234135315471)*x3147))+(((0.0838945627463637)*r02)));
evalcond[1]=((((-1.0)*x3155))+((x3142*x3146))+(((-0.18234135315471)*x3138))+((r22*x3135))+pz+(((-0.216558867852667)*r21*x3140))+((x3138*x3146))+((x3136*x3150))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x3142)));
evalcond[2]=((((-1.0)*x3155))+(((-0.0648043305514941)*x3142))+(((-1.0)*x3142*x3144))+(((0.235073880801598)*r02*x3152))+((x3147*x3158))+(((0.135720094919197)*x3139*x3140))+(((-1.0)*x3136*x3151))+(((0.0185150129489311)*r21*x3140))+(((-0.0160344678271334)*x3148))+((cj5*r00*x3157))+(((-0.0648043305514941)*x3138))+((x3145*x3153))+(((-1.0)*r02*x3145))+pz+(((-1.0)*x3137*x3157))+(((-1.0)*x3138*x3144))+(((0.0160344678271334)*r22))+((x3141*x3154))+(((0.0678600949192303)*r01*sj3*x3143))+((x3141*x3147))+((x3137*x3160))+(((-0.27144)*x3139*x3143))+(((0.135720094919197)*x3152*x3154)));
evalcond[3]=((((0.235073880801598)*r22*x3152))+((x3142*x3158))+x3156+(((-1.0)*r22*x3145))+((x3149*x3160))+(((-0.0160344678271334)*r02))+((x3144*x3147))+((x3145*x3148))+(((0.0160344678271334)*x3153))+(((-1.0)*x3136*x3160))+((cj5*r00*x3151))+(((0.0648043305514941)*x3154))+(((0.00925751294893567)*r01*x3143))+(((-0.135720094919197)*r21*sj3*x3140))+(((-1.0)*px))+(((0.135720094919197)*cj3*r20*x3140))+(((0.0648043305514941)*x3147))+(((-1.0)*x3137*x3151))+((x3138*x3141))+((x3136*x3157))+((x3141*x3142))+((x3138*x3158))+(((0.135720094919197)*x3138*x3152)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3161=(r02*sj1);
IkReal x3162=(cj1*cj4);
IkReal x3163=((0.749999650312296)*r22);
IkReal x3164=(cj4*sj1);
IkReal x3165=((0.250000349687704)*r22);
IkReal x3166=((0.433012903784321)*r00*sj5);
IkReal x3167=((0.433012903784321)*r20*sj5);
IkReal x3168=((0.433012903784321)*cj5*r01);
IkReal x3169=((0.433012903784321)*cj5*r21);
IkReal x3170=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3171=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3172=((0.866025201892125)*r01*sj4*sj5);
IkReal x3173=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((cj1*x3168))+((cj1*x3166))+(((-1.0)*x3162*x3166))+(((-1.0)*x3162*x3168))+((cj1*x3172))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3171))+((x3163*x3164))+((sj1*x3165))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((-0.749999650312296)*r02*x3162))+(((-0.250000349687704)*cj1*r02))+((r20*x3170))+((x3164*x3169))+((x3164*x3167)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x3165))+(((-1.0)*cj1*x3169))+(((-1.0)*cj1*x3167))+(((-1.0)*sj1*x3172))+(((-1.0)*cj1*x3173))+((x3162*x3163))+((x3162*x3169))+((x3162*x3167))+(((0.749999650312296)*cj4*x3161))+(((-1.0)*sj1*x3166))+(((-1.0)*sj1*x3168))+(((0.250000349687704)*x3161))+((r00*x3170))+((r20*x3171))+((x3164*x3166))+((x3164*x3168)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x3168))+((cj1*x3166))+(((-1.0)*x3162*x3166))+(((-1.0)*x3162*x3168))+((cj1*x3172))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3171))+((x3163*x3164))+((sj1*x3165))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((-0.749999650312296)*r02*x3162))+(((-0.250000349687704)*cj1*r02))+((r20*x3170))+((x3164*x3169))+((x3164*x3167))))+IKsqr((((cj1*x3165))+(((-1.0)*cj1*x3169))+(((-1.0)*cj1*x3167))+(((-1.0)*sj1*x3172))+(((-1.0)*cj1*x3173))+((x3162*x3163))+((x3162*x3169))+((x3162*x3167))+(((0.749999650312296)*cj4*x3161))+(((-1.0)*sj1*x3166))+(((-1.0)*sj1*x3168))+(((0.250000349687704)*x3161))+((r00*x3170))+((r20*x3171))+((x3164*x3166))+((x3164*x3168))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x3168))+((cj1*x3166))+(((-1.0)*x3162*x3166))+(((-1.0)*x3162*x3168))+((cj1*x3172))+(((-1.0)*sj1*x3173))+(((-1.0)*r00*x3171))+((x3163*x3164))+((sj1*x3165))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((-0.749999650312296)*r02*x3162))+(((-0.250000349687704)*cj1*r02))+((r20*x3170))+((x3164*x3169))+((x3164*x3167))), (((cj1*x3165))+(((-1.0)*cj1*x3169))+(((-1.0)*cj1*x3167))+(((-1.0)*sj1*x3172))+(((-1.0)*cj1*x3173))+((x3162*x3163))+((x3162*x3169))+((x3162*x3167))+(((0.749999650312296)*cj4*x3161))+(((-1.0)*sj1*x3166))+(((-1.0)*sj1*x3168))+(((0.250000349687704)*x3161))+((r00*x3170))+((r20*x3171))+((x3164*x3166))+((x3164*x3168))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3174=IKcos(j2);
IkReal x3175=IKsin(j2);
IkReal x3176=((0.433012903784321)*sj3);
IkReal x3177=((0.749999650312296)*sj3);
IkReal x3178=(r00*sj5);
IkReal x3179=(cj4*cj5);
IkReal x3180=((1.0)*cj3);
IkReal x3181=(cj5*r01);
IkReal x3182=(r21*sj3);
IkReal x3183=(cj4*sj5);
IkReal x3184=(cj3*r21);
IkReal x3185=((0.500000349687582)*sj4);
IkReal x3186=((0.433012903784321)*r20);
IkReal x3187=(cj4*r22);
IkReal x3188=(r20*sj5);
IkReal x3189=((0.0160344678271334)*r02);
IkReal x3190=(cj4*r02);
IkReal x3191=(r01*sj5);
IkReal x3192=(cj5*r00);
IkReal x3193=((0.0185150129489311)*sj4);
IkReal x3194=(r21*sj5);
IkReal x3195=(cj5*r21);
IkReal x3196=((0.866025201892125)*sj4);
IkReal x3197=(cj5*r20);
IkReal x3198=((0.250000349687704)*sj3);
IkReal x3199=(sj1*x3174);
IkReal x3200=(cj1*x3174);
IkReal x3201=(sj1*x3175);
IkReal x3202=(cj1*x3175);
IkReal x3203=((1.0)*x3202);
evalcond[0]=((((-0.749999650312296)*x3187))+(((-0.433012903784321)*r21*x3179))+(((-1.0)*x3196*x3197))+(((-0.250000349687704)*r22))+(((-1.0)*x3183*x3186))+x3201+x3200+(((0.433012903784321)*x3195))+((x3194*x3196))+((sj5*x3186)));
evalcond[1]=((((0.433012903784321)*x3178))+(((-0.250000349687704)*r02))+x3199+(((-0.433012903784321)*cj4*x3178))+(((-1.0)*x3192*x3196))+(((-0.433012903784321)*r01*x3179))+(((0.433012903784321)*x3181))+(((-1.0)*x3203))+((x3191*x3196))+(((-0.749999650312296)*x3190)));
evalcond[2]=((((0.00925751294893567)*r20*x3183))+(((0.41)*cj1))+(((-1.0)*x3193*x3194))+(((0.0160344678271334)*x3187))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x3179))+(((-0.27144)*x3201))+(((-0.27144)*x3200))+(((0.0648043305514941)*x3195))+(((0.0648043305514941)*x3188))+((x3193*x3197)));
evalcond[3]=((((0.00925751294893567)*r01*x3179))+(((-1.0)*x3191*x3193))+(((0.0648043305514941)*x3178))+(((0.27144)*x3202))+(((-0.27144)*x3199))+(((0.41)*sj1))+((cj4*x3189))+(((-1.0)*px))+((x3192*x3193))+(((0.0648043305514941)*x3181))+(((-1.0)*x3189))+(((0.00925751294893567)*cj4*x3178)));
evalcond[4]=(((r20*x3183*x3198))+x3199+((cj3*x3185*x3188))+((sj3*x3185*x3197))+(((-1.0)*sj5*x3182*x3185))+((x3176*x3187))+((cj3*r22*x3196))+((x3177*x3195))+((x3177*x3188))+((cj5*x3184*x3185))+(((-1.0)*r20*x3179*x3180))+(((0.250000349687704)*x3179*x3182))+(((-1.0)*x3203))+((x3183*x3184))+(((-1.0)*r22*x3176)));
evalcond[5]=(((r01*x3179*x3198))+((x3177*x3178))+((sj3*x3185*x3192))+((cj4*x3178*x3198))+((x3176*x3190))+((cj3*x3178*x3185))+(((-1.0)*r00*x3179*x3180))+(((-1.0)*x3201))+(((-1.0)*x3200))+((cj3*x3181*x3185))+((cj3*r02*x3196))+((x3177*x3181))+(((-1.0)*sj3*x3185*x3191))+((cj3*r01*x3183))+(((-1.0)*r02*x3176)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3204=(cj4*sj5);
IkReal x3205=(cj0*r00);
IkReal x3206=(cj0*r02);
IkReal x3207=(cj5*r21);
IkReal x3208=((0.216558867852667)*sj4);
IkReal x3209=((0.528192360616262)*sj4);
IkReal x3210=(cj0*cj5*r01);
CheckValue<IkReal> x3211=IKPowWithIntegerCheck(cj0,-2);
if(!x3211.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3211.value)*(((((-0.187545437253636)*cj4*x3206))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3208))+(((-0.0838945627463637)*x3206))+(((-0.10827950965428)*cj4*x3210))+(((0.18234135315471)*x3210))+(((-1.0)*cj5*x3205*x3208))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x3204*x3205))+(((0.18234135315471)*sj5*x3205)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.26409636501044)*cj4*x3207))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x3209))+(((-1.0)*r21*sj5*x3209))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3204))+(((-0.444735007694415)*x3207))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3211.value)*(((((-0.187545437253636)*cj4*x3206))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3208))+(((-0.0838945627463637)*x3206))+(((-0.10827950965428)*cj4*x3210))+(((0.18234135315471)*x3210))+(((-1.0)*cj5*x3205*x3208))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x3204*x3205))+(((0.18234135315471)*sj5*x3205))))))+IKsqr(((((0.26409636501044)*cj4*x3207))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x3209))+(((-1.0)*r21*sj5*x3209))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3204))+(((-0.444735007694415)*x3207))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3211.value)*(((((-0.187545437253636)*cj4*x3206))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3208))+(((-0.0838945627463637)*x3206))+(((-0.10827950965428)*cj4*x3210))+(((0.18234135315471)*x3210))+(((-1.0)*cj5*x3205*x3208))+(((-1.0)*cj0*px))+(((-0.10827950965428)*x3204*x3205))+(((0.18234135315471)*sj5*x3205))))), ((((0.26409636501044)*cj4*x3207))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x3209))+(((-1.0)*r21*sj5*x3209))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3204))+(((-0.444735007694415)*x3207))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3212=IKsin(j1);
IkReal x3213=IKcos(j1);
IkReal x3214=sj0*sj0;
IkReal x3215=cj0*cj0;
IkReal x3216=((0.0098)*cj0);
IkReal x3217=(cj0*cj5);
IkReal x3218=(cj5*sj0);
IkReal x3219=((0.0648043305514941)*r21);
IkReal x3220=(r00*sj5);
IkReal x3221=((0.20357990508077)*sj3);
IkReal x3222=((0.135720094919197)*r21);
IkReal x3223=((1.0)*px);
IkReal x3224=((0.117537022603216)*sj3);
IkReal x3225=((0.00925751294893567)*cj4);
IkReal x3226=(r10*sj4);
IkReal x3227=(sj0*sj5);
IkReal x3228=(cj4*sj0);
IkReal x3229=(r20*sj5);
IkReal x3230=((0.10827950965428)*cj4);
IkReal x3231=(cj3*sj4);
IkReal x3232=((0.135720094919197)*sj5);
IkReal x3233=((0.117537022603216)*r11);
IkReal x3234=(cj5*r01);
IkReal x3235=(cj4*r02);
IkReal x3236=((0.117537022603216)*cj4);
IkReal x3237=((0.0160344678271334)*r02);
IkReal x3238=((0.0648043305514941)*r11);
IkReal x3239=((0.0160344678271334)*r12);
IkReal x3240=(cj0*cj4);
IkReal x3241=(cj5*sj3);
IkReal x3242=((0.0678600949192303)*cj4);
IkReal x3243=(r10*sj5);
IkReal x3244=((1.0)*py);
IkReal x3245=(cj5*r00);
IkReal x3246=(cj0*r21);
IkReal x3247=(r11*sj5);
IkReal x3248=((0.0160344678271334)*r22);
IkReal x3249=(r00*sj4);
IkReal x3250=((1.0)*pz);
IkReal x3251=(r22*sj0);
IkReal x3252=(sj3*sj4);
IkReal x3253=(cj5*r21);
IkReal x3254=(r21*sj3);
IkReal x3255=(cj0*r22);
IkReal x3256=((0.0185150129489311)*sj4);
IkReal x3257=(cj5*r11);
IkReal x3258=(r01*sj5);
IkReal x3259=((0.216558867852667)*sj4);
IkReal x3260=((0.135720094919197)*r20);
IkReal x3261=(sj0*x3216);
IkReal x3262=(sj4*x3227);
IkReal x3263=((0.27144)*cj3*cj4);
IkReal x3264=(r11*x3225);
IkReal x3265=((0.41)*x3212);
IkReal x3266=(cj0*x3243);
IkReal x3267=(sj5*x3256);
IkReal x3268=((0.41)*x3213);
IkReal x3269=(cj0*sj0*x3265);
evalcond[0]=((((-1.0)*x3268))+(((0.187545437253636)*cj4*r22))+(((-0.18234135315471)*x3253))+(((-0.18234135315471)*x3229))+pz+((x3230*x3253))+(((-1.0)*r21*sj5*x3259))+((x3229*x3230))+((cj5*r20*x3259))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*r11*x3218*x3230))+(((-1.0)*sj0*x3244))+(((-0.187545437253636)*r12*x3228))+(((-1.0)*x3261))+(((0.18234135315471)*r10*x3227))+(((0.18234135315471)*r11*x3218))+(((-0.0838945627463637)*r12*sj0))+((r11*x3227*x3259))+(((-1.0)*x3214*x3265))+(((-0.216558867852667)*x3218*x3226))+(((-1.0)*r10*x3227*x3230)));
evalcond[2]=((((-0.0838945627463637)*cj0*r02))+(((-1.0)*cj0*x3223))+x3261+(((0.18234135315471)*cj0*x3220))+(((-0.187545437253636)*cj0*x3235))+(((-1.0)*r01*x3217*x3230))+((cj0*x3258*x3259))+(((-1.0)*cj0*x3220*x3230))+(((-1.0)*x3215*x3265))+(((0.18234135315471)*r01*x3217))+(((-0.216558867852667)*x3217*x3249)));
evalcond[3]=(((x3221*x3243))+(((-1.0)*cj5*r10*x3263))+((sj0*x3268))+(((-1.0)*r11*x3232*x3252))+((sj3*x3242*x3243))+(((-1.0)*sj0*x3248))+(((0.135720094919197)*x3226*x3241))+(((0.135720094919197)*x3231*x3257))+(((0.0648043305514941)*r20*x3227))+(((-1.0)*r21*x3227*x3256))+((cj3*x3226*x3232))+(((0.235073880801598)*r12*x3231))+((r21*x3218*x3225))+((r20*x3225*x3227))+((r11*x3241*x3242))+((x3221*x3257))+(((-1.0)*sj0*x3250))+((x3228*x3248))+((cj4*r12*x3224))+(((-1.0)*r12*x3224))+((x3218*x3219))+((r20*x3218*x3256))+((x3247*x3263)));
evalcond[4]=(((x3224*x3235))+(((0.135720094919197)*x3241*x3249))+(((-1.0)*r02*x3224))+(((0.235073880801598)*r02*x3231))+((r20*x3217*x3256))+(((-1.0)*cj0*x3250))+(((0.135720094919197)*x3220*x3231))+((cj0*x3225*x3229))+((x3220*x3221))+((r21*x3217*x3225))+((sj3*x3234*x3242))+(((-1.0)*r01*x3232*x3252))+((x3221*x3234))+(((-1.0)*x3246*x3267))+(((0.135720094919197)*x3231*x3234))+(((0.0648043305514941)*cj0*x3229))+((x3258*x3263))+(((-1.0)*cj0*x3248))+(((-1.0)*x3245*x3263))+((x3240*x3248))+((sj3*x3220*x3242))+((x3217*x3219))+((cj0*x3268)));
evalcond[5]=((((-1.0)*x3218*x3242*x3254))+((cj5*x3238))+(((-1.0)*x3218*x3222*x3231))+((x3225*x3243))+(((-1.0)*r20*sj3*x3227*x3242))+(((-1.0)*x3247*x3256))+(((-1.0)*sj0*x3265))+(((-1.0)*r22*x3224*x3228))+(((-1.0)*x3227*x3231*x3260))+(((-1.0)*x3218*x3252*x3260))+((r20*x3218*x3263))+(((-1.0)*r21*x3218*x3221))+(((-1.0)*r21*x3227*x3263))+(((-1.0)*x3244))+(((-1.0)*x3239))+((x3222*x3227*x3252))+((x3224*x3251))+((x3225*x3257))+(((-1.0)*r20*x3221*x3227))+(((-1.0)*x3216))+(((-0.235073880801598)*x3231*x3251))+(((0.0185150129489311)*cj5*x3226))+((cj4*x3239))+(((0.0648043305514941)*x3243)));
evalcond[6]=((((-1.0)*x3217*x3252*x3260))+(((-1.0)*x3217*x3242*x3254))+((x3225*x3234))+(((-1.0)*cj0*x3221*x3229))+(((0.0160344678271334)*x3235))+(((-1.0)*r21*x3217*x3221))+(((-0.135720094919197)*cj0*x3229*x3231))+((cj0*sj5*x3222*x3252))+(((-0.27144)*cj3*r21*sj5*x3240))+((x3245*x3256))+((x3220*x3225))+(((-0.0678600949192303)*sj3*x3229*x3240))+(((0.0648043305514941)*x3220))+(((-1.0)*x3237))+((x3224*x3255))+(((-1.0)*x3217*x3222*x3231))+(((0.0648043305514941)*x3234))+(((-1.0)*x3256*x3258))+(((-0.235073880801598)*x3231*x3255))+(((0.0098)*sj0))+(((-1.0)*cj0*x3265))+(((-1.0)*x3223))+(((-1.0)*r22*x3224*x3240))+((r20*x3217*x3263)));
evalcond[7]=((((-1.0)*sj0*x3237))+(((-1.0)*cj4*x3217*x3233))+(((0.117537022603216)*x3266))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*x3236*x3266))+(((-0.20357990508077)*r12*x3240))+(((-1.0)*x3269))+(((-1.0)*sj0*x3223))+(((0.0648043305514941)*r01*x3218))+(((0.0185150129489311)*x3218*x3249))+((x3228*x3237))+(((0.235073880801598)*cj0*sj4*x3247))+(((0.0648043305514941)*sj0*x3220))+((sj0*x3220*x3225))+((x3217*x3233))+(((-0.235073880801598)*x3217*x3226))+(((0.0098)*x3214))+(((-1.0)*r01*x3227*x3256))+((r01*x3218*x3225)));
evalcond[8]=((((-0.117537022603216)*x3220*x3228))+(((-1.0)*cj0*x3247*x3256))+(((-1.0)*r01*x3218*x3236))+(((0.235073880801598)*r01*x3262))+(((-1.0)*cj0*x3239))+((x3225*x3266))+(((0.117537022603216)*r01*x3218))+(((-0.0098)*x3215))+(((-1.0)*x3269))+(((0.117537022603216)*sj0*x3220))+((x3239*x3240))+(((-1.0)*cj0*x3244))+(((-0.235073880801598)*x3218*x3249))+(((0.0648043305514941)*x3266))+((x3217*x3238))+(((-0.20357990508077)*r02*x3228))+(((-0.0678600949192303)*r02*sj0))+(((0.0185150129489311)*x3217*x3226))+((x3217*x3264)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3270=((0.250000349687704)*sj1);
IkReal x3271=(cj1*cj4);
IkReal x3272=((0.749999650312296)*r22);
IkReal x3273=(cj4*sj1);
IkReal x3274=((0.749999650312296)*r02);
IkReal x3275=((0.250000349687704)*cj1);
IkReal x3276=((0.433012903784321)*r00*sj5);
IkReal x3277=((0.433012903784321)*r20*sj5);
IkReal x3278=((0.433012903784321)*cj5*r01);
IkReal x3279=((0.433012903784321)*cj5*r21);
IkReal x3280=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3281=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3282=((0.866025201892125)*r01*sj4*sj5);
IkReal x3283=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r00*x3281))+((r20*x3280))+((x3272*x3273))+((x3273*x3279))+((x3273*x3277))+(((-1.0)*cj1*x3282))+(((-1.0)*cj1*x3278))+(((-1.0)*cj1*x3276))+(((-1.0)*sj1*x3279))+(((-1.0)*sj1*x3277))+((r02*x3275))+((r22*x3270))+((x3271*x3278))+((x3271*x3276))+((x3271*x3274))+(((-1.0)*sj1*x3283)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3281))+((sj1*x3276))+((sj1*x3278))+(((-1.0)*x3273*x3278))+(((-1.0)*x3273*x3274))+(((-1.0)*x3273*x3276))+(((-1.0)*cj1*x3283))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+((sj1*x3282))+(((-1.0)*r00*x3280))+((r22*x3275))+(((-1.0)*r02*x3270))+((x3271*x3279))+((x3271*x3277))+((x3271*x3272)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3281))+((r20*x3280))+((x3272*x3273))+((x3273*x3279))+((x3273*x3277))+(((-1.0)*cj1*x3282))+(((-1.0)*cj1*x3278))+(((-1.0)*cj1*x3276))+(((-1.0)*sj1*x3279))+(((-1.0)*sj1*x3277))+((r02*x3275))+((r22*x3270))+((x3271*x3278))+((x3271*x3276))+((x3271*x3274))+(((-1.0)*sj1*x3283))))+IKsqr((((r20*x3281))+((sj1*x3276))+((sj1*x3278))+(((-1.0)*x3273*x3278))+(((-1.0)*x3273*x3274))+(((-1.0)*x3273*x3276))+(((-1.0)*cj1*x3283))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+((sj1*x3282))+(((-1.0)*r00*x3280))+((r22*x3275))+(((-1.0)*r02*x3270))+((x3271*x3279))+((x3271*x3277))+((x3271*x3272))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r00*x3281))+((r20*x3280))+((x3272*x3273))+((x3273*x3279))+((x3273*x3277))+(((-1.0)*cj1*x3282))+(((-1.0)*cj1*x3278))+(((-1.0)*cj1*x3276))+(((-1.0)*sj1*x3279))+(((-1.0)*sj1*x3277))+((r02*x3275))+((r22*x3270))+((x3271*x3278))+((x3271*x3276))+((x3271*x3274))+(((-1.0)*sj1*x3283))), (((r20*x3281))+((sj1*x3276))+((sj1*x3278))+(((-1.0)*x3273*x3278))+(((-1.0)*x3273*x3274))+(((-1.0)*x3273*x3276))+(((-1.0)*cj1*x3283))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+((sj1*x3282))+(((-1.0)*r00*x3280))+((r22*x3275))+(((-1.0)*r02*x3270))+((x3271*x3279))+((x3271*x3277))+((x3271*x3272))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3284=IKsin(j2);
IkReal x3285=IKcos(j2);
IkReal x3286=((0.749999650312296)*sj3);
IkReal x3287=(cj5*r01);
IkReal x3288=(r00*sj5);
IkReal x3289=(cj4*cj5);
IkReal x3290=((1.0)*cj3);
IkReal x3291=(r21*sj3);
IkReal x3292=(cj4*sj5);
IkReal x3293=(cj3*r21);
IkReal x3294=((0.500000349687582)*sj4);
IkReal x3295=((0.433012903784321)*r20);
IkReal x3296=(cj4*r22);
IkReal x3297=((0.433012903784321)*sj3);
IkReal x3298=((0.433012903784321)*cj4);
IkReal x3299=(r01*sj5);
IkReal x3300=(r20*sj5);
IkReal x3301=((0.0160344678271334)*r02);
IkReal x3302=(cj4*r02);
IkReal x3303=((0.00925751294893567)*cj4);
IkReal x3304=((0.0185150129489311)*sj4);
IkReal x3305=(r21*sj5);
IkReal x3306=(cj5*r21);
IkReal x3307=((0.866025201892125)*sj4);
IkReal x3308=(cj5*r20);
IkReal x3309=(cj5*r00);
IkReal x3310=((0.250000349687704)*sj3);
IkReal x3311=(cj1*x3285);
IkReal x3312=(sj1*x3284);
IkReal x3313=(cj1*x3284);
IkReal x3314=(sj1*x3285);
IkReal x3315=(x3311+x3312);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x3295))+x3315+(((-1.0)*x3292*x3295))+(((-0.749999650312296)*x3296))+(((0.433012903784321)*x3306))+((x3305*x3307))+(((-0.433012903784321)*r21*x3289))+(((-1.0)*x3307*x3308)));
evalcond[1]=((((-0.250000349687704)*r02))+x3313+(((-1.0)*x3287*x3298))+(((-0.749999650312296)*x3302))+(((-1.0)*x3288*x3298))+(((0.433012903784321)*x3287))+(((0.433012903784321)*x3288))+(((-1.0)*x3314))+((x3299*x3307))+(((-1.0)*x3307*x3309)));
evalcond[2]=((((0.0648043305514941)*x3306))+(((0.0648043305514941)*x3300))+(((-1.0)*x3304*x3305))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x3312))+(((-0.27144)*x3311))+(((-1.0)*pz))+((x3304*x3308))+(((0.00925751294893567)*r20*x3292))+(((0.00925751294893567)*r21*x3289))+(((0.0160344678271334)*x3296)));
evalcond[3]=(((cj4*x3301))+((x3287*x3303))+(((0.0648043305514941)*x3287))+(((0.0648043305514941)*x3288))+((x3288*x3303))+(((-0.27144)*x3313))+(((-0.41)*sj1))+(((-1.0)*x3301))+(((-1.0)*px))+((x3304*x3309))+(((-1.0)*x3299*x3304))+(((0.27144)*x3314)));
evalcond[4]=(((x3286*x3287))+((x3286*x3288))+((cj3*x3288*x3294))+x3315+((cj4*x3287*x3310))+((cj3*r01*x3292))+(((-1.0)*r00*x3289*x3290))+(((-1.0)*r02*x3297))+((sj3*x3294*x3309))+(((-1.0)*sj3*x3294*x3299))+((cj4*x3288*x3310))+((cj3*x3287*x3294))+((cj3*r02*x3307))+((x3297*x3302)));
evalcond[5]=(((r20*x3292*x3310))+((x3286*x3306))+((x3286*x3300))+x3314+((x3292*x3293))+(((-1.0)*r22*x3297))+((x3296*x3297))+(((0.250000349687704)*x3289*x3291))+((sj3*x3294*x3308))+((cj3*x3294*x3300))+((cj3*r22*x3307))+(((-1.0)*x3313))+(((-1.0)*r20*x3289*x3290))+((cj5*x3293*x3294))+(((-1.0)*sj5*x3291*x3294)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3316=(r02*sj1);
IkReal x3317=(cj1*cj4);
IkReal x3318=((0.749999650312296)*r22);
IkReal x3319=(cj4*sj1);
IkReal x3320=((0.250000349687704)*r22);
IkReal x3321=((0.433012903784321)*r00*sj5);
IkReal x3322=((0.433012903784321)*r20*sj5);
IkReal x3323=((0.433012903784321)*cj5*r01);
IkReal x3324=((0.433012903784321)*cj5*r21);
IkReal x3325=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3326=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3327=((0.866025201892125)*r01*sj4*sj5);
IkReal x3328=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((sj1*x3320))+((r20*x3325))+((cj1*x3321))+((cj1*x3323))+((cj1*x3327))+(((-0.749999650312296)*r02*x3317))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((-1.0)*x3317*x3323))+(((-1.0)*x3317*x3321))+((x3318*x3319))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3326))+((x3319*x3322))+((x3319*x3324)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3317*x3318))+((r00*x3325))+((r20*x3326))+((cj1*x3320))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3321))+(((-1.0)*sj1*x3327))+(((0.749999650312296)*cj4*x3316))+(((-1.0)*cj1*x3324))+(((-1.0)*cj1*x3322))+(((-1.0)*cj1*x3328))+((x3317*x3324))+((x3317*x3322))+(((0.250000349687704)*x3316))+((x3319*x3321))+((x3319*x3323)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x3320))+((r20*x3325))+((cj1*x3321))+((cj1*x3323))+((cj1*x3327))+(((-0.749999650312296)*r02*x3317))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((-1.0)*x3317*x3323))+(((-1.0)*x3317*x3321))+((x3318*x3319))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3326))+((x3319*x3322))+((x3319*x3324))))+IKsqr((((x3317*x3318))+((r00*x3325))+((r20*x3326))+((cj1*x3320))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3321))+(((-1.0)*sj1*x3327))+(((0.749999650312296)*cj4*x3316))+(((-1.0)*cj1*x3324))+(((-1.0)*cj1*x3322))+(((-1.0)*cj1*x3328))+((x3317*x3324))+((x3317*x3322))+(((0.250000349687704)*x3316))+((x3319*x3321))+((x3319*x3323))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x3320))+((r20*x3325))+((cj1*x3321))+((cj1*x3323))+((cj1*x3327))+(((-0.749999650312296)*r02*x3317))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((-1.0)*x3317*x3323))+(((-1.0)*x3317*x3321))+((x3318*x3319))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3326))+((x3319*x3322))+((x3319*x3324))), (((x3317*x3318))+((r00*x3325))+((r20*x3326))+((cj1*x3320))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3321))+(((-1.0)*sj1*x3327))+(((0.749999650312296)*cj4*x3316))+(((-1.0)*cj1*x3324))+(((-1.0)*cj1*x3322))+(((-1.0)*cj1*x3328))+((x3317*x3324))+((x3317*x3322))+(((0.250000349687704)*x3316))+((x3319*x3321))+((x3319*x3323))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3329=IKcos(j2);
IkReal x3330=IKsin(j2);
IkReal x3331=((0.433012903784321)*sj3);
IkReal x3332=((0.749999650312296)*sj3);
IkReal x3333=(r00*sj5);
IkReal x3334=(cj4*cj5);
IkReal x3335=((1.0)*cj3);
IkReal x3336=(cj5*r01);
IkReal x3337=(r21*sj3);
IkReal x3338=(cj4*sj5);
IkReal x3339=(cj3*r21);
IkReal x3340=((0.500000349687582)*sj4);
IkReal x3341=((0.433012903784321)*r20);
IkReal x3342=(cj4*r22);
IkReal x3343=(r20*sj5);
IkReal x3344=((0.0160344678271334)*r02);
IkReal x3345=(cj4*r02);
IkReal x3346=(r01*sj5);
IkReal x3347=(cj5*r00);
IkReal x3348=((0.0185150129489311)*sj4);
IkReal x3349=(r21*sj5);
IkReal x3350=(cj5*r21);
IkReal x3351=((0.866025201892125)*sj4);
IkReal x3352=(cj5*r20);
IkReal x3353=((0.250000349687704)*sj3);
IkReal x3354=(sj1*x3329);
IkReal x3355=(cj1*x3329);
IkReal x3356=(sj1*x3330);
IkReal x3357=(cj1*x3330);
IkReal x3358=((1.0)*x3357);
evalcond[0]=((((-0.250000349687704)*r22))+x3355+x3356+(((-0.433012903784321)*r21*x3334))+(((-1.0)*x3338*x3341))+(((-1.0)*x3351*x3352))+(((0.433012903784321)*x3350))+((sj5*x3341))+(((-0.749999650312296)*x3342))+((x3349*x3351)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x3336))+(((0.433012903784321)*x3333))+(((-1.0)*x3358))+(((-0.433012903784321)*r01*x3334))+x3354+(((-1.0)*x3347*x3351))+(((-0.433012903784321)*cj4*x3333))+((x3346*x3351))+(((-0.749999650312296)*x3345)));
evalcond[2]=((((-1.0)*x3348*x3349))+(((0.0648043305514941)*x3343))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0648043305514941)*x3350))+(((0.00925751294893567)*r20*x3338))+(((0.00925751294893567)*r21*x3334))+(((-0.27144)*x3356))+(((-0.27144)*x3355))+(((0.0160344678271334)*x3342))+((x3348*x3352)));
evalcond[3]=(((cj4*x3344))+((x3347*x3348))+(((-1.0)*x3346*x3348))+(((0.27144)*x3357))+(((0.00925751294893567)*r01*x3334))+(((0.41)*sj1))+(((-1.0)*x3344))+(((0.0648043305514941)*x3336))+(((0.0648043305514941)*x3333))+(((0.00925751294893567)*cj4*x3333))+(((-1.0)*px))+(((-0.27144)*x3354)));
evalcond[4]=(((r20*x3338*x3353))+(((-1.0)*x3358))+((cj3*x3340*x3343))+x3354+((x3331*x3342))+((x3332*x3343))+(((-1.0)*r22*x3331))+((cj5*x3339*x3340))+((sj3*x3340*x3352))+((cj3*r22*x3351))+((x3332*x3350))+(((-1.0)*r20*x3334*x3335))+(((-1.0)*sj5*x3337*x3340))+((x3338*x3339))+(((0.250000349687704)*x3334*x3337)));
evalcond[5]=(((cj3*x3336*x3340))+((x3332*x3336))+((x3332*x3333))+((r01*x3334*x3353))+((x3331*x3345))+((cj3*r01*x3338))+((cj3*r02*x3351))+(((-1.0)*r02*x3331))+(((-1.0)*r00*x3334*x3335))+(((-1.0)*sj3*x3340*x3346))+((cj3*x3333*x3340))+((sj3*x3340*x3347))+((cj4*x3333*x3353))+(((-1.0)*x3355))+(((-1.0)*x3356)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3359=((0.250000349687704)*r12);
IkReal x3360=((0.749999650312296)*cj4);
IkReal x3361=((0.433012903784321)*sj5);
IkReal x3362=(cj1*r10);
IkReal x3363=(cj1*r22);
IkReal x3364=(cj1*r20);
IkReal x3365=((0.866025201892125)*sj4);
IkReal x3366=(r20*sj1);
IkReal x3367=(r22*sj1);
IkReal x3368=(r10*sj1);
IkReal x3369=(r11*sj1);
IkReal x3370=((0.433012903784321)*cj5);
IkReal x3371=(r21*sj1);
IkReal x3372=(cj1*r21);
IkReal x3373=(cj1*r11);
IkReal x3374=(cj5*sj1*x3365);
IkReal x3375=(cj4*r21*x3370);
if( IKabs(((((-1.0)*x3361*x3362))+(((-1.0)*x3361*x3366))+((cj4*x3370*x3373))+((cj4*x3370*x3371))+(((-1.0)*x3370*x3371))+(((-1.0)*x3370*x3373))+((cj1*x3359))+((x3360*x3367))+((cj5*x3362*x3365))+(((0.250000349687704)*x3367))+((cj4*x3361*x3362))+((cj4*x3361*x3366))+((cj5*x3365*x3366))+(((-1.0)*sj5*x3365*x3371))+(((-1.0)*sj5*x3365*x3373))+((cj1*r12*x3360)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3361*x3364))+(((-1.0)*cj5*x3365*x3368))+((sj5*x3365*x3369))+((cj4*x3370*x3372))+(((-1.0)*cj4*x3361*x3368))+(((-1.0)*x3370*x3372))+((x3360*x3363))+((x3361*x3368))+(((-1.0)*r12*sj1*x3360))+((cj5*x3364*x3365))+((x3369*x3370))+(((-1.0)*sj1*x3359))+(((0.250000349687704)*x3363))+((cj4*x3361*x3364))+(((-1.0)*cj4*x3369*x3370))+(((-1.0)*sj5*x3365*x3372)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x3361*x3362))+(((-1.0)*x3361*x3366))+((cj4*x3370*x3373))+((cj4*x3370*x3371))+(((-1.0)*x3370*x3371))+(((-1.0)*x3370*x3373))+((cj1*x3359))+((x3360*x3367))+((cj5*x3362*x3365))+(((0.250000349687704)*x3367))+((cj4*x3361*x3362))+((cj4*x3361*x3366))+((cj5*x3365*x3366))+(((-1.0)*sj5*x3365*x3371))+(((-1.0)*sj5*x3365*x3373))+((cj1*r12*x3360))))+IKsqr(((((-1.0)*x3361*x3364))+(((-1.0)*cj5*x3365*x3368))+((sj5*x3365*x3369))+((cj4*x3370*x3372))+(((-1.0)*cj4*x3361*x3368))+(((-1.0)*x3370*x3372))+((x3360*x3363))+((x3361*x3368))+(((-1.0)*r12*sj1*x3360))+((cj5*x3364*x3365))+((x3369*x3370))+(((-1.0)*sj1*x3359))+(((0.250000349687704)*x3363))+((cj4*x3361*x3364))+(((-1.0)*cj4*x3369*x3370))+(((-1.0)*sj5*x3365*x3372))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x3361*x3362))+(((-1.0)*x3361*x3366))+((cj4*x3370*x3373))+((cj4*x3370*x3371))+(((-1.0)*x3370*x3371))+(((-1.0)*x3370*x3373))+((cj1*x3359))+((x3360*x3367))+((cj5*x3362*x3365))+(((0.250000349687704)*x3367))+((cj4*x3361*x3362))+((cj4*x3361*x3366))+((cj5*x3365*x3366))+(((-1.0)*sj5*x3365*x3371))+(((-1.0)*sj5*x3365*x3373))+((cj1*r12*x3360))), ((((-1.0)*x3361*x3364))+(((-1.0)*cj5*x3365*x3368))+((sj5*x3365*x3369))+((cj4*x3370*x3372))+(((-1.0)*cj4*x3361*x3368))+(((-1.0)*x3370*x3372))+((x3360*x3363))+((x3361*x3368))+(((-1.0)*r12*sj1*x3360))+((cj5*x3364*x3365))+((x3369*x3370))+(((-1.0)*sj1*x3359))+(((0.250000349687704)*x3363))+((cj4*x3361*x3364))+(((-1.0)*cj4*x3369*x3370))+(((-1.0)*sj5*x3365*x3372))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3376=IKsin(j2);
IkReal x3377=IKcos(j2);
IkReal x3378=(cj5*r11);
IkReal x3379=((0.433012903784321)*cj4);
IkReal x3380=(r21*sj5);
IkReal x3381=((0.500000349687582)*sj4);
IkReal x3382=((0.749999650312296)*sj3);
IkReal x3383=(cj3*cj4);
IkReal x3384=(cj5*r10);
IkReal x3385=((0.0185150129489311)*sj4);
IkReal x3386=(r20*sj5);
IkReal x3387=(cj4*r22);
IkReal x3388=(r10*sj5);
IkReal x3389=(r22*sj3);
IkReal x3390=(r11*sj5);
IkReal x3391=((0.00925751294893567)*cj4);
IkReal x3392=(cj5*r21);
IkReal x3393=(r12*sj3);
IkReal x3394=(cj4*r12);
IkReal x3395=(cj5*r20);
IkReal x3396=((0.866025201892125)*sj4);
IkReal x3397=(cj1*x3377);
IkReal x3398=(sj1*x3376);
IkReal x3399=(cj1*x3376);
IkReal x3400=((0.250000349687704)*cj4*sj3);
IkReal x3401=(sj1*x3377);
IkReal x3402=(cj3*x3396);
IkReal x3403=(x3397+x3398);
evalcond[0]=((((-0.250000349687704)*r22))+((x3380*x3396))+(((-1.0)*x3395*x3396))+x3403+(((-1.0)*x3379*x3392))+(((-1.0)*x3379*x3386))+(((0.433012903784321)*x3392))+(((-0.749999650312296)*x3387))+(((0.433012903784321)*x3386)));
evalcond[1]=((((0.433012903784321)*x3378))+(((-0.250000349687704)*r12))+(((-1.0)*x3401))+x3399+(((-1.0)*x3384*x3396))+((x3390*x3396))+(((-1.0)*x3379*x3388))+(((-0.749999650312296)*x3394))+(((-1.0)*x3378*x3379))+(((0.433012903784321)*x3388)));
evalcond[2]=((((0.0648043305514941)*x3386))+((x3386*x3391))+(((0.0160344678271334)*x3387))+((x3391*x3392))+(((-1.0)*x3380*x3385))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x3385*x3395))+(((-0.27144)*x3398))+(((-0.27144)*x3397))+(((0.0648043305514941)*x3392)));
evalcond[3]=((((0.0648043305514941)*x3388))+(((0.0648043305514941)*x3378))+(((-1.0)*x3385*x3390))+(((-0.0160344678271334)*r12))+(((0.27144)*x3401))+(((-0.41)*sj1))+((x3388*x3391))+(((-1.0)*py))+((x3378*x3391))+((x3384*x3385))+(((-0.27144)*x3399))+(((0.0160344678271334)*x3394)));
evalcond[4]=((((-0.433012903784321)*x3393))+((x3382*x3388))+((x3379*x3393))+((x3383*x3390))+((cj3*x3378*x3381))+(((-1.0)*sj3*x3381*x3390))+x3403+((cj3*x3381*x3388))+((x3378*x3400))+((r12*x3402))+((x3388*x3400))+(((-1.0)*x3383*x3384))+((x3378*x3382))+((sj3*x3381*x3384)));
evalcond[5]=(((x3382*x3386))+((x3380*x3383))+((sj3*x3381*x3395))+((r22*x3402))+(((-0.433012903784321)*x3389))+((x3386*x3400))+((cj3*x3381*x3392))+((x3379*x3389))+(((-1.0)*x3399))+((x3392*x3400))+x3401+((cj3*x3381*x3386))+(((-1.0)*sj3*x3380*x3381))+(((-1.0)*x3383*x3395))+((x3382*x3392)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3404=((0.250000349687704)*r12);
IkReal x3405=((0.749999650312296)*cj4);
IkReal x3406=(cj1*r22);
IkReal x3407=((0.866025201892125)*sj4);
IkReal x3408=(cj1*r20);
IkReal x3409=(sj1*sj5);
IkReal x3410=((0.433012903784321)*r20);
IkReal x3411=((0.433012903784321)*sj5);
IkReal x3412=(cj1*r10);
IkReal x3413=(r22*sj1);
IkReal x3414=((0.433012903784321)*r10);
IkReal x3415=((0.433012903784321)*cj5);
IkReal x3416=(cj1*r21);
IkReal x3417=(cj1*r11);
IkReal x3418=(r11*sj1);
IkReal x3419=(cj1*cj4*x3411);
IkReal x3420=(cj5*sj1*x3407);
IkReal x3421=(cj4*r21*x3415);
if( IKabs((((sj5*x3407*x3417))+((r20*x3420))+((x3411*x3412))+(((-1.0)*cj1*r12*x3405))+(((-1.0)*cj1*x3404))+(((-1.0)*r21*x3407*x3409))+(((-1.0)*cj4*x3415*x3417))+((x3415*x3417))+((sj1*x3421))+((cj4*x3409*x3410))+(((-1.0)*x3409*x3410))+(((-1.0)*r21*sj1*x3415))+((x3405*x3413))+(((0.250000349687704)*x3413))+(((-1.0)*cj4*x3411*x3412))+(((-1.0)*cj5*x3407*x3412)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x3415*x3418))+(((-1.0)*x3415*x3416))+(((0.250000349687704)*x3406))+((r10*x3420))+((sj1*x3404))+((cj4*x3408*x3411))+(((-1.0)*x3408*x3411))+((cj4*x3415*x3416))+((cj4*x3415*x3418))+((x3405*x3406))+(((-1.0)*sj5*x3407*x3416))+((cj4*x3409*x3414))+(((-1.0)*x3409*x3414))+(((-1.0)*r11*x3407*x3409))+((r12*sj1*x3405))+((cj5*x3407*x3408)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj5*x3407*x3417))+((r20*x3420))+((x3411*x3412))+(((-1.0)*cj1*r12*x3405))+(((-1.0)*cj1*x3404))+(((-1.0)*r21*x3407*x3409))+(((-1.0)*cj4*x3415*x3417))+((x3415*x3417))+((sj1*x3421))+((cj4*x3409*x3410))+(((-1.0)*x3409*x3410))+(((-1.0)*r21*sj1*x3415))+((x3405*x3413))+(((0.250000349687704)*x3413))+(((-1.0)*cj4*x3411*x3412))+(((-1.0)*cj5*x3407*x3412))))+IKsqr(((((-1.0)*x3415*x3418))+(((-1.0)*x3415*x3416))+(((0.250000349687704)*x3406))+((r10*x3420))+((sj1*x3404))+((cj4*x3408*x3411))+(((-1.0)*x3408*x3411))+((cj4*x3415*x3416))+((cj4*x3415*x3418))+((x3405*x3406))+(((-1.0)*sj5*x3407*x3416))+((cj4*x3409*x3414))+(((-1.0)*x3409*x3414))+(((-1.0)*r11*x3407*x3409))+((r12*sj1*x3405))+((cj5*x3407*x3408))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj5*x3407*x3417))+((r20*x3420))+((x3411*x3412))+(((-1.0)*cj1*r12*x3405))+(((-1.0)*cj1*x3404))+(((-1.0)*r21*x3407*x3409))+(((-1.0)*cj4*x3415*x3417))+((x3415*x3417))+((sj1*x3421))+((cj4*x3409*x3410))+(((-1.0)*x3409*x3410))+(((-1.0)*r21*sj1*x3415))+((x3405*x3413))+(((0.250000349687704)*x3413))+(((-1.0)*cj4*x3411*x3412))+(((-1.0)*cj5*x3407*x3412))), ((((-1.0)*x3415*x3418))+(((-1.0)*x3415*x3416))+(((0.250000349687704)*x3406))+((r10*x3420))+((sj1*x3404))+((cj4*x3408*x3411))+(((-1.0)*x3408*x3411))+((cj4*x3415*x3416))+((cj4*x3415*x3418))+((x3405*x3406))+(((-1.0)*sj5*x3407*x3416))+((cj4*x3409*x3414))+(((-1.0)*x3409*x3414))+(((-1.0)*r11*x3407*x3409))+((r12*sj1*x3405))+((cj5*x3407*x3408))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3422=IKcos(j2);
IkReal x3423=IKsin(j2);
IkReal x3424=(cj5*r11);
IkReal x3425=((0.433012903784321)*cj4);
IkReal x3426=(r21*sj5);
IkReal x3427=((0.500000349687582)*sj4);
IkReal x3428=((0.749999650312296)*sj3);
IkReal x3429=(cj3*cj4);
IkReal x3430=(cj5*r10);
IkReal x3431=((0.0185150129489311)*sj4);
IkReal x3432=(r20*sj5);
IkReal x3433=(cj4*r22);
IkReal x3434=(r10*sj5);
IkReal x3435=(r12*sj3);
IkReal x3436=(r11*sj5);
IkReal x3437=(r22*sj3);
IkReal x3438=((0.27144)*sj1);
IkReal x3439=((0.00925751294893567)*cj4);
IkReal x3440=(cj5*r20);
IkReal x3441=(cj5*r21);
IkReal x3442=(cj4*r12);
IkReal x3443=((0.866025201892125)*sj4);
IkReal x3444=(sj1*x3422);
IkReal x3445=(cj1*x3422);
IkReal x3446=(cj1*x3423);
IkReal x3447=((0.250000349687704)*cj4*sj3);
IkReal x3448=(cj3*x3443);
IkReal x3449=(sj1*x3423);
IkReal x3450=((1.0)*x3446);
evalcond[0]=((((-0.250000349687704)*r22))+((x3426*x3443))+(((-1.0)*x3425*x3432))+x3449+x3445+(((0.433012903784321)*x3432))+(((-1.0)*x3425*x3441))+(((0.433012903784321)*x3441))+(((-1.0)*x3440*x3443))+(((-0.749999650312296)*x3433)));
evalcond[1]=((((-1.0)*x3450))+(((-0.749999650312296)*x3442))+(((-0.250000349687704)*r12))+(((-1.0)*x3425*x3434))+(((-1.0)*x3424*x3425))+x3444+((x3436*x3443))+(((0.433012903784321)*x3434))+(((0.433012903784321)*x3424))+(((-1.0)*x3430*x3443)));
evalcond[2]=((((-1.0)*x3426*x3431))+(((0.0160344678271334)*x3433))+(((0.41)*cj1))+(((-0.27144)*x3445))+(((-0.0160344678271334)*r22))+((x3432*x3439))+((x3431*x3440))+(((-1.0)*pz))+(((-1.0)*x3423*x3438))+(((0.0648043305514941)*x3432))+((x3439*x3441))+(((0.0648043305514941)*x3441)));
evalcond[3]=(((x3424*x3439))+((x3434*x3439))+(((-1.0)*x3431*x3436))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x3430*x3431))+(((0.27144)*x3446))+(((-1.0)*py))+(((0.0648043305514941)*x3434))+(((-1.0)*x3422*x3438))+(((0.0648043305514941)*x3424))+(((0.0160344678271334)*x3442)));
evalcond[4]=(((x3425*x3437))+((cj3*x3427*x3441))+(((-1.0)*x3450))+((x3428*x3432))+(((-1.0)*sj3*x3426*x3427))+x3444+((r22*x3448))+(((-1.0)*x3429*x3440))+((cj3*x3427*x3432))+(((-0.433012903784321)*x3437))+((x3426*x3429))+((sj3*x3427*x3440))+((x3441*x3447))+((x3432*x3447))+((x3428*x3441)));
evalcond[5]=(((x3425*x3435))+((x3424*x3428))+((x3429*x3436))+((r12*x3448))+((x3428*x3434))+((x3434*x3447))+((sj3*x3427*x3430))+((x3424*x3447))+(((-1.0)*x3445))+(((-1.0)*x3449))+((cj3*x3427*x3434))+(((-0.433012903784321)*x3435))+(((-1.0)*x3429*x3430))+((cj3*x3424*x3427))+(((-1.0)*sj3*x3427*x3436)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3451=(cj4*sj1);
IkReal x3452=((0.433012903784321)*sj0);
IkReal x3453=(cj5*r21);
IkReal x3454=(cj1*r12);
IkReal x3455=(r20*sj5);
IkReal x3456=(r20*sj0);
IkReal x3457=(r10*sj1);
IkReal x3458=((0.749999650312296)*cj4);
IkReal x3459=(r21*sj0);
IkReal x3460=((0.433012903784321)*sj5);
IkReal x3461=(cj1*cj4);
IkReal x3462=(r22*sj0);
IkReal x3463=((0.250000349687704)*x3462);
IkReal x3464=((0.866025201892125)*cj5*sj4);
IkReal x3465=((0.433012903784321)*cj5*r11);
IkReal x3466=(cj1*r10*x3460);
IkReal x3467=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3468=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3469=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3469.valid){
continue;
}
CheckValue<IkReal> x3470 = IKatan2WithCheck(IkReal((((x3461*x3465))+(((0.749999650312296)*x3451*x3462))+((r10*x3460*x3461))+(((-1.0)*cj1*x3465))+(((-1.0)*r11*x3468))+(((-1.0)*x3459*x3467))+(((-1.0)*sj1*x3452*x3453))+(((-1.0)*sj1*x3452*x3455))+((sj1*x3463))+((x3451*x3452*x3455))+((x3451*x3452*x3453))+((x3454*x3458))+(((-1.0)*x3466))+((sj1*x3456*x3464))+(((0.250000349687704)*x3454))+((cj1*r10*x3464)))),IkReal(((((-1.0)*r10*x3451*x3460))+(((-0.250000349687704)*r12*sj1))+(((-0.749999650312296)*r12*x3451))+(((-1.0)*cj1*x3452*x3455))+(((-1.0)*cj1*x3452*x3453))+((x3457*x3460))+((x3452*x3455*x3461))+((cj1*x3458*x3462))+(((-1.0)*x3459*x3468))+((sj1*x3465))+((r11*x3467))+((cj1*x3456*x3464))+((cj1*x3463))+(((-1.0)*x3451*x3465))+((x3452*x3453*x3461))+(((-1.0)*x3457*x3464)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3470.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3469.value)))+(x3470.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3471=IKsin(j2);
IkReal x3472=IKcos(j2);
IkReal x3473=(cj4*sj5);
IkReal x3474=(cj3*r21);
IkReal x3475=((0.433012903784321)*r20);
IkReal x3476=((0.749999650312296)*cj4);
IkReal x3477=(cj4*cj5);
IkReal x3478=((1.0)*cj3);
IkReal x3479=((0.433012903784321)*r01);
IkReal x3480=(sj4*sj5);
IkReal x3481=((0.749999650312296)*sj3);
IkReal x3482=(r10*sj5);
IkReal x3483=((0.500000349687582)*sj3);
IkReal x3484=(cj0*sj1);
IkReal x3485=((0.500000349687582)*cj3);
IkReal x3486=((0.0160344678271334)*r22);
IkReal x3487=(r20*sj3);
IkReal x3488=(r00*sj5);
IkReal x3489=(cj3*r11);
IkReal x3490=((0.0160344678271334)*r12);
IkReal x3491=((0.433012903784321)*r11);
IkReal x3492=(cj5*r11);
IkReal x3493=(r10*sj3);
IkReal x3494=(r00*sj3);
IkReal x3495=((0.433012903784321)*sj3);
IkReal x3496=(cj5*sj4);
IkReal x3497=(r20*sj5);
IkReal x3498=((0.433012903784321)*r21);
IkReal x3499=(sj0*sj1);
IkReal x3500=(cj3*r01);
IkReal x3501=(cj5*r21);
IkReal x3502=((0.0160344678271334)*r02);
IkReal x3503=(cj5*r01);
IkReal x3504=((0.250000349687704)*sj3);
IkReal x3505=(cj1*x3471);
IkReal x3506=((0.500000349687582)*x3496);
IkReal x3507=((0.27144)*x3472);
IkReal x3508=(cj4*x3495);
IkReal x3509=(sj1*x3471);
IkReal x3510=((0.866025201892125)*cj3*sj4);
IkReal x3511=(cj1*x3472);
IkReal x3512=((1.0)*x3472);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x3475))+x3509+x3511+((cj5*x3498))+(((-1.0)*x3473*x3475))+(((-1.0)*r22*x3476))+(((0.866025201892125)*r21*x3480))+(((-0.866025201892125)*r20*x3496))+(((-1.0)*x3477*x3498)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj0*x3505))+((cj5*x3479))+(((-0.433012903784321)*r00*x3473))+(((-1.0)*r02*x3476))+(((0.866025201892125)*r01*x3480))+(((-1.0)*x3484*x3512))+(((0.433012903784321)*x3488))+(((-0.866025201892125)*r00*x3496))+(((-1.0)*x3477*x3479)));
evalcond[2]=((((-0.433012903784321)*r10*x3473))+(((-0.250000349687704)*r12))+(((-0.866025201892125)*r10*x3496))+((cj5*x3491))+(((-1.0)*r12*x3476))+((sj0*x3505))+(((0.866025201892125)*r11*x3480))+(((0.433012903784321)*x3482))+(((-1.0)*x3499*x3512))+(((-1.0)*x3477*x3491)));
evalcond[3]=((((-0.27144)*x3509))+((cj4*x3486))+(((0.41)*cj1))+(((0.0648043305514941)*x3501))+(((0.0185150129489311)*r20*x3496))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x3473))+(((0.0648043305514941)*x3497))+(((0.00925751294893567)*r21*x3477))+(((-1.0)*x3486))+(((-0.0185150129489311)*r21*x3480))+(((-1.0)*cj1*x3507)));
evalcond[4]=(((cj4*x3502))+(((0.00925751294893567)*r00*x3473))+(((0.0648043305514941)*x3503))+(((-1.0)*x3502))+(((0.00925751294893567)*r01*x3477))+(((-1.0)*px))+(((0.0648043305514941)*x3488))+(((-0.0185150129489311)*r01*x3480))+(((-0.27144)*cj0*x3505))+(((0.0185150129489311)*r00*x3496))+(((-0.41)*x3484))+(((0.0098)*sj0))+((x3484*x3507)));
evalcond[5]=((((0.0185150129489311)*r10*x3496))+(((-0.0185150129489311)*r11*x3480))+(((-1.0)*x3490))+(((0.00925751294893567)*r11*x3477))+((cj4*x3490))+(((-1.0)*py))+(((0.0648043305514941)*x3482))+((x3499*x3507))+(((0.0648043305514941)*x3492))+(((0.00925751294893567)*r10*x3473))+(((-0.41)*x3499))+(((-0.0098)*cj0))+(((-0.27144)*sj0*x3505)));
evalcond[6]=(((x3481*x3497))+((x3473*x3474))+((r21*x3477*x3504))+((x3481*x3501))+(((0.250000349687704)*x3473*x3487))+(((-1.0)*r21*x3480*x3483))+(((-1.0)*r20*x3477*x3478))+(((-1.0)*r22*x3495))+((r22*x3510))+((sj1*x3472))+((r20*x3480*x3485))+((r20*x3483*x3496))+((x3474*x3506))+((r22*x3508))+(((-1.0)*x3505)));
evalcond[7]=((((-1.0)*r02*x3495))+(((-1.0)*r01*x3480*x3483))+(((-1.0)*r00*x3477*x3478))+((x3481*x3503))+((x3471*x3484))+((cj0*x3511))+(((0.250000349687704)*x3473*x3494))+((x3473*x3500))+((r02*x3510))+((r02*x3508))+((r01*x3477*x3504))+((r00*x3483*x3496))+((r00*x3480*x3485))+((r01*x3485*x3496))+((x3481*x3488)));
evalcond[8]=(((x3473*x3489))+((r11*x3477*x3504))+(((-1.0)*r12*x3495))+((x3481*x3492))+((x3471*x3499))+((r10*x3483*x3496))+(((-1.0)*r10*x3477*x3478))+(((0.250000349687704)*x3473*x3493))+((r12*x3508))+((r10*x3480*x3485))+(((-1.0)*r11*x3480*x3483))+((r12*x3510))+((sj4*x3485*x3492))+((sj0*x3511))+((x3481*x3482)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3513=(cj0*r20);
IkReal x3514=(cj1*r00);
IkReal x3515=(r02*sj1);
IkReal x3516=(r00*sj1);
IkReal x3517=((0.433012903784321)*sj5);
IkReal x3518=(cj4*sj1);
IkReal x3519=((0.749999650312296)*cj4);
IkReal x3520=(cj0*r22);
IkReal x3521=(r01*sj1);
IkReal x3522=(cj1*cj4);
IkReal x3523=(cj0*r21);
IkReal x3524=(cj1*r02);
IkReal x3525=((0.866025201892125)*cj5*sj4);
IkReal x3526=((0.866025201892125)*sj4*sj5);
IkReal x3527=((0.433012903784321)*cj5*r01);
IkReal x3528=((0.433012903784321)*cj5*x3523);
CheckValue<IkReal> x3529 = IKatan2WithCheck(IkReal(((((-1.0)*x3514*x3517))+(((-1.0)*cj1*x3527))+(((-1.0)*sj1*x3523*x3526))+(((0.250000349687704)*x3524))+(((0.749999650312296)*x3518*x3520))+((x3522*x3527))+(((-1.0)*cj1*r01*x3526))+(((-1.0)*sj1*x3513*x3517))+(((-1.0)*sj1*x3528))+((cj4*x3514*x3517))+((x3514*x3525))+((x3513*x3517*x3518))+(((0.250000349687704)*sj1*x3520))+((sj1*x3513*x3525))+((x3518*x3528))+((x3519*x3524)))),IkReal(((((-1.0)*x3515*x3519))+(((-1.0)*cj1*x3528))+((cj1*x3513*x3525))+(((0.250000349687704)*cj1*x3520))+((x3522*x3528))+((cj1*x3519*x3520))+(((-1.0)*cj1*x3513*x3517))+(((-1.0)*cj4*x3516*x3517))+((x3513*x3517*x3522))+(((-1.0)*cj1*x3523*x3526))+((x3521*x3526))+(((-0.250000349687704)*x3515))+((x3516*x3517))+(((0.433012903784321)*cj5*x3521))+(((-1.0)*x3518*x3527))+(((-1.0)*x3516*x3525)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3529.valid){
continue;
}
CheckValue<IkReal> x3530=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3530.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3529.value)+(((1.5707963267949)*(x3530.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3531=IKsin(j2);
IkReal x3532=IKcos(j2);
IkReal x3533=(cj4*sj5);
IkReal x3534=(cj3*r21);
IkReal x3535=((0.433012903784321)*r20);
IkReal x3536=((0.749999650312296)*cj4);
IkReal x3537=(cj4*cj5);
IkReal x3538=((1.0)*cj3);
IkReal x3539=((0.433012903784321)*r01);
IkReal x3540=(sj4*sj5);
IkReal x3541=((0.749999650312296)*sj3);
IkReal x3542=(r10*sj5);
IkReal x3543=((0.500000349687582)*sj3);
IkReal x3544=(cj0*sj1);
IkReal x3545=((0.500000349687582)*cj3);
IkReal x3546=((0.0160344678271334)*r22);
IkReal x3547=(r20*sj3);
IkReal x3548=(r00*sj5);
IkReal x3549=(cj3*r11);
IkReal x3550=((0.0160344678271334)*r12);
IkReal x3551=((0.433012903784321)*r11);
IkReal x3552=(cj5*r11);
IkReal x3553=(r10*sj3);
IkReal x3554=(r00*sj3);
IkReal x3555=((0.433012903784321)*sj3);
IkReal x3556=(cj5*sj4);
IkReal x3557=(r20*sj5);
IkReal x3558=((0.433012903784321)*r21);
IkReal x3559=(sj0*sj1);
IkReal x3560=(cj3*r01);
IkReal x3561=(cj5*r21);
IkReal x3562=((0.0160344678271334)*r02);
IkReal x3563=(cj5*r01);
IkReal x3564=((0.250000349687704)*sj3);
IkReal x3565=(cj1*x3531);
IkReal x3566=((0.500000349687582)*x3556);
IkReal x3567=((0.27144)*x3532);
IkReal x3568=(cj4*x3555);
IkReal x3569=(sj1*x3531);
IkReal x3570=((0.866025201892125)*cj3*sj4);
IkReal x3571=(cj1*x3532);
IkReal x3572=((1.0)*x3532);
evalcond[0]=((((-0.866025201892125)*r20*x3556))+(((-0.250000349687704)*r22))+x3571+x3569+((sj5*x3535))+((cj5*x3558))+(((-1.0)*x3533*x3535))+(((-1.0)*x3537*x3558))+(((-1.0)*r22*x3536))+(((0.866025201892125)*r21*x3540)));
evalcond[1]=((((0.433012903784321)*x3548))+(((-0.250000349687704)*r02))+(((0.866025201892125)*r01*x3540))+(((-0.866025201892125)*r00*x3556))+(((-1.0)*r02*x3536))+(((-1.0)*x3544*x3572))+((cj0*x3565))+(((-0.433012903784321)*r00*x3533))+(((-1.0)*x3537*x3539))+((cj5*x3539)));
evalcond[2]=((((0.433012903784321)*x3542))+(((-0.250000349687704)*r12))+(((-1.0)*r12*x3536))+(((-1.0)*x3559*x3572))+((sj0*x3565))+((cj5*x3551))+(((-0.866025201892125)*r10*x3556))+(((-0.433012903784321)*r10*x3533))+(((-1.0)*x3537*x3551))+(((0.866025201892125)*r11*x3540)));
evalcond[3]=((((-0.0185150129489311)*r21*x3540))+(((0.0185150129489311)*r20*x3556))+(((0.41)*cj1))+((cj4*x3546))+(((-1.0)*pz))+(((0.0648043305514941)*x3561))+(((0.00925751294893567)*r20*x3533))+(((0.0648043305514941)*x3557))+(((0.00925751294893567)*r21*x3537))+(((-1.0)*x3546))+(((-1.0)*cj1*x3567))+(((-0.27144)*x3569)));
evalcond[4]=((((0.0185150129489311)*r00*x3556))+((cj4*x3562))+(((-0.0185150129489311)*r01*x3540))+(((-1.0)*x3562))+(((-1.0)*px))+(((0.0648043305514941)*x3563))+(((0.0648043305514941)*x3548))+(((0.00925751294893567)*r00*x3533))+(((0.00925751294893567)*r01*x3537))+((x3544*x3567))+(((0.0098)*sj0))+(((-0.41)*x3544))+(((-0.27144)*cj0*x3565)));
evalcond[5]=((((-0.41)*x3559))+((x3559*x3567))+(((-0.0185150129489311)*r11*x3540))+(((-0.27144)*sj0*x3565))+((cj4*x3550))+(((0.00925751294893567)*r11*x3537))+(((-1.0)*py))+(((0.0648043305514941)*x3542))+(((0.0185150129489311)*r10*x3556))+(((0.0648043305514941)*x3552))+(((-1.0)*x3550))+(((0.00925751294893567)*r10*x3533))+(((-0.0098)*cj0)));
evalcond[6]=((((-1.0)*r21*x3540*x3543))+((r20*x3540*x3545))+((x3541*x3557))+((sj1*x3532))+((x3541*x3561))+((r21*x3537*x3564))+((r20*x3543*x3556))+(((-1.0)*r22*x3555))+((r22*x3568))+(((0.250000349687704)*x3533*x3547))+((x3533*x3534))+(((-1.0)*x3565))+((r22*x3570))+((x3534*x3566))+(((-1.0)*r20*x3537*x3538)));
evalcond[7]=(((x3541*x3548))+(((-1.0)*r01*x3540*x3543))+((cj0*x3571))+(((-1.0)*r00*x3537*x3538))+((x3533*x3560))+((r00*x3540*x3545))+((r01*x3545*x3556))+((x3541*x3563))+((r02*x3570))+(((0.250000349687704)*x3533*x3554))+((x3531*x3544))+((r00*x3543*x3556))+((r02*x3568))+((r01*x3537*x3564))+(((-1.0)*r02*x3555)));
evalcond[8]=(((x3541*x3542))+((sj4*x3545*x3552))+((r10*x3540*x3545))+((x3541*x3552))+((x3533*x3549))+(((-1.0)*r10*x3537*x3538))+((r11*x3537*x3564))+((r12*x3570))+((r10*x3543*x3556))+((sj0*x3571))+(((-1.0)*r12*x3555))+((r12*x3568))+((x3531*x3559))+(((-1.0)*r11*x3540*x3543))+(((0.250000349687704)*x3533*x3553)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3573=((0.26409636501044)*cj4);
IkReal x3574=(r20*sj5);
IkReal x3575=(cj5*r21);
IkReal x3576=(r10*sj5);
IkReal x3577=(cj5*r11);
IkReal x3578=((0.528192360616262)*sj4);
IkReal x3579=((0.18234135315471)*sj0);
IkReal x3580=(r12*sj0);
IkReal x3581=((0.10827950965428)*cj4*sj0);
IkReal x3582=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x3583=IKPowWithIntegerCheck(sj0,-2);
if(!x3583.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3583.value)*(((((-1.0)*x3576*x3581))+(((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3581))+(((-0.187545437253636)*cj4*x3580))+((r11*sj5*x3582))+(((-0.0838945627463637)*x3580))+(((-1.0)*py*sj0))+((x3577*x3579))+((x3576*x3579))+(((-1.0)*cj5*r10*x3582)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x3573*x3575))+((x3573*x3574))+(((-0.444735007694415)*x3574))+(((-0.444735007694415)*x3575))+(((-1.0)*r21*sj5*x3578))+((cj5*r20*x3578))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3583.value)*(((((-1.0)*x3576*x3581))+(((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3581))+(((-0.187545437253636)*cj4*x3580))+((r11*sj5*x3582))+(((-0.0838945627463637)*x3580))+(((-1.0)*py*sj0))+((x3577*x3579))+((x3576*x3579))+(((-1.0)*cj5*r10*x3582))))))+IKsqr(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x3573*x3575))+((x3573*x3574))+(((-0.444735007694415)*x3574))+(((-0.444735007694415)*x3575))+(((-1.0)*r21*sj5*x3578))+((cj5*r20*x3578))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3583.value)*(((((-1.0)*x3576*x3581))+(((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3581))+(((-0.187545437253636)*cj4*x3580))+((r11*sj5*x3582))+(((-0.0838945627463637)*x3580))+(((-1.0)*py*sj0))+((x3577*x3579))+((x3576*x3579))+(((-1.0)*cj5*r10*x3582))))), ((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((x3573*x3575))+((x3573*x3574))+(((-0.444735007694415)*x3574))+(((-0.444735007694415)*x3575))+(((-1.0)*r21*sj5*x3578))+((cj5*r20*x3578))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3584=IKsin(j1);
IkReal x3585=IKcos(j1);
IkReal x3586=sj0*sj0;
IkReal x3587=cj0*cj0;
IkReal x3588=((0.0098)*cj0);
IkReal x3589=(cj0*cj5);
IkReal x3590=(cj5*sj0);
IkReal x3591=((0.0648043305514941)*r21);
IkReal x3592=(r00*sj5);
IkReal x3593=((0.20357990508077)*sj3);
IkReal x3594=((0.135720094919197)*r21);
IkReal x3595=((1.0)*px);
IkReal x3596=((0.117537022603216)*sj3);
IkReal x3597=((0.00925751294893567)*cj4);
IkReal x3598=(r10*sj4);
IkReal x3599=(sj0*sj5);
IkReal x3600=(cj4*sj0);
IkReal x3601=(r20*sj5);
IkReal x3602=((0.10827950965428)*cj4);
IkReal x3603=(cj3*sj4);
IkReal x3604=((0.135720094919197)*sj5);
IkReal x3605=((0.117537022603216)*r11);
IkReal x3606=(cj5*r01);
IkReal x3607=(cj4*r02);
IkReal x3608=((0.117537022603216)*cj4);
IkReal x3609=((0.0160344678271334)*r02);
IkReal x3610=((0.0648043305514941)*r11);
IkReal x3611=((0.0160344678271334)*r12);
IkReal x3612=(cj0*cj4);
IkReal x3613=(cj5*sj3);
IkReal x3614=((0.0678600949192303)*cj4);
IkReal x3615=(r10*sj5);
IkReal x3616=((1.0)*py);
IkReal x3617=(cj5*r00);
IkReal x3618=(cj0*r21);
IkReal x3619=(r11*sj5);
IkReal x3620=((0.0160344678271334)*r22);
IkReal x3621=(r00*sj4);
IkReal x3622=((1.0)*pz);
IkReal x3623=(r22*sj0);
IkReal x3624=(sj3*sj4);
IkReal x3625=(cj5*r21);
IkReal x3626=(r21*sj3);
IkReal x3627=(cj0*r22);
IkReal x3628=((0.0185150129489311)*sj4);
IkReal x3629=(cj5*r11);
IkReal x3630=(r01*sj5);
IkReal x3631=((0.216558867852667)*sj4);
IkReal x3632=((0.135720094919197)*r20);
IkReal x3633=(sj0*x3588);
IkReal x3634=(sj4*x3599);
IkReal x3635=((0.27144)*cj3*cj4);
IkReal x3636=(r11*x3597);
IkReal x3637=((0.41)*x3584);
IkReal x3638=(cj0*x3615);
IkReal x3639=(sj5*x3628);
IkReal x3640=((0.41)*x3585);
IkReal x3641=(cj0*sj0*x3637);
evalcond[0]=(((cj5*r20*x3631))+(((-0.18234135315471)*x3625))+(((-1.0)*r21*sj5*x3631))+((x3602*x3625))+(((0.187545437253636)*cj4*r22))+pz+((x3601*x3602))+(((-0.18234135315471)*x3601))+(((0.0838945627463637)*r22))+(((-1.0)*x3640)));
evalcond[1]=((((0.18234135315471)*r11*x3590))+(((-1.0)*r10*x3599*x3602))+(((-0.187545437253636)*r12*x3600))+(((-1.0)*x3633))+(((-0.216558867852667)*x3590*x3598))+(((-1.0)*sj0*x3616))+((r11*x3599*x3631))+(((0.18234135315471)*r10*x3599))+(((-1.0)*x3586*x3637))+(((-1.0)*r11*x3590*x3602))+(((-0.0838945627463637)*r12*sj0)));
evalcond[2]=((((-0.187545437253636)*cj0*x3607))+(((0.18234135315471)*r01*x3589))+(((-1.0)*x3587*x3637))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*r01*x3589*x3602))+(((-1.0)*cj0*x3592*x3602))+(((-1.0)*cj0*x3595))+x3633+(((0.18234135315471)*cj0*x3592))+((cj0*x3630*x3631))+(((-0.216558867852667)*x3589*x3621)));
evalcond[3]=((((0.0648043305514941)*r20*x3599))+((r20*x3597*x3599))+((cj4*r12*x3596))+(((-1.0)*sj0*x3620))+(((-1.0)*sj0*x3622))+((cj3*x3598*x3604))+((r11*x3613*x3614))+(((-1.0)*r21*x3599*x3628))+((x3590*x3591))+((sj3*x3614*x3615))+(((0.135720094919197)*x3598*x3613))+((x3593*x3615))+(((-1.0)*r11*x3604*x3624))+(((-1.0)*cj5*r10*x3635))+(((0.235073880801598)*r12*x3603))+(((-1.0)*r12*x3596))+((x3600*x3620))+(((0.135720094919197)*x3603*x3629))+((sj0*x3640))+((x3619*x3635))+((x3593*x3629))+((r21*x3590*x3597))+((r20*x3590*x3628)));
evalcond[4]=((((-1.0)*r01*x3604*x3624))+(((-1.0)*x3617*x3635))+(((0.0648043305514941)*cj0*x3601))+(((0.135720094919197)*x3603*x3606))+(((-1.0)*x3618*x3639))+((x3589*x3591))+((r21*x3589*x3597))+(((0.235073880801598)*r02*x3603))+((x3592*x3593))+((x3593*x3606))+(((-1.0)*r02*x3596))+((sj3*x3592*x3614))+((x3630*x3635))+((r20*x3589*x3628))+((x3596*x3607))+(((0.135720094919197)*x3613*x3621))+((cj0*x3597*x3601))+(((0.135720094919197)*x3592*x3603))+((cj0*x3640))+((x3612*x3620))+(((-1.0)*cj0*x3620))+(((-1.0)*cj0*x3622))+((sj3*x3606*x3614)));
evalcond[5]=((((-1.0)*r21*x3590*x3593))+(((0.0648043305514941)*x3615))+(((-0.235073880801598)*x3603*x3623))+((cj5*x3610))+((x3597*x3629))+((cj4*x3611))+(((-1.0)*r20*sj3*x3599*x3614))+((x3594*x3599*x3624))+(((-1.0)*r20*x3593*x3599))+((r20*x3590*x3635))+(((-1.0)*x3590*x3624*x3632))+(((-1.0)*sj0*x3637))+(((-1.0)*r22*x3596*x3600))+((x3597*x3615))+(((-1.0)*r21*x3599*x3635))+(((-1.0)*x3616))+(((-1.0)*x3611))+(((-1.0)*x3619*x3628))+(((0.0185150129489311)*cj5*x3598))+(((-1.0)*x3590*x3594*x3603))+(((-1.0)*x3599*x3603*x3632))+(((-1.0)*x3590*x3614*x3626))+(((-1.0)*x3588))+((x3596*x3623)));
evalcond[6]=((((0.0648043305514941)*x3606))+(((-0.235073880801598)*x3603*x3627))+(((-1.0)*x3628*x3630))+(((-1.0)*x3589*x3624*x3632))+(((0.0648043305514941)*x3592))+(((0.0160344678271334)*x3607))+((cj0*sj5*x3594*x3624))+((r20*x3589*x3635))+(((-0.0678600949192303)*sj3*x3601*x3612))+(((-1.0)*cj0*x3593*x3601))+((x3592*x3597))+(((-0.27144)*cj3*r21*sj5*x3612))+(((-1.0)*r22*x3596*x3612))+(((-1.0)*cj0*x3637))+(((-1.0)*r21*x3589*x3593))+(((-1.0)*x3589*x3594*x3603))+(((-0.135720094919197)*cj0*x3601*x3603))+(((-1.0)*x3609))+((x3597*x3606))+(((-1.0)*x3595))+(((0.0098)*sj0))+(((-1.0)*x3589*x3614*x3626))+((x3617*x3628))+((x3596*x3627)));
evalcond[7]=((((-0.0678600949192303)*cj0*r12))+(((-0.20357990508077)*r12*x3612))+(((0.235073880801598)*cj0*sj4*x3619))+((x3589*x3605))+(((-1.0)*cj4*x3589*x3605))+((sj0*x3592*x3597))+(((-1.0)*sj0*x3595))+(((-1.0)*x3608*x3638))+(((0.0098)*x3586))+(((-1.0)*sj0*x3609))+((x3600*x3609))+(((-0.235073880801598)*x3589*x3598))+(((0.0648043305514941)*r01*x3590))+(((-1.0)*r01*x3599*x3628))+(((0.117537022603216)*x3638))+(((0.0648043305514941)*sj0*x3592))+((r01*x3590*x3597))+(((-1.0)*x3641))+(((0.0185150129489311)*x3590*x3621)));
evalcond[8]=(((x3589*x3636))+(((0.235073880801598)*r01*x3634))+((x3589*x3610))+(((0.117537022603216)*r01*x3590))+(((-0.0098)*x3587))+(((0.117537022603216)*sj0*x3592))+(((-1.0)*cj0*x3619*x3628))+(((-0.235073880801598)*x3590*x3621))+(((-1.0)*cj0*x3611))+(((-1.0)*cj0*x3616))+((x3611*x3612))+((x3597*x3638))+(((-1.0)*r01*x3590*x3608))+(((-0.117537022603216)*x3592*x3600))+(((-0.20357990508077)*r02*x3600))+(((0.0185150129489311)*x3589*x3598))+(((-0.0678600949192303)*r02*sj0))+(((-1.0)*x3641))+(((0.0648043305514941)*x3638)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3642=((0.250000349687704)*sj1);
IkReal x3643=(cj1*cj4);
IkReal x3644=((0.749999650312296)*r22);
IkReal x3645=(cj4*sj1);
IkReal x3646=((0.749999650312296)*r02);
IkReal x3647=((0.250000349687704)*cj1);
IkReal x3648=((0.433012903784321)*r00*sj5);
IkReal x3649=((0.433012903784321)*r20*sj5);
IkReal x3650=((0.433012903784321)*cj5*r01);
IkReal x3651=((0.433012903784321)*cj5*r21);
IkReal x3652=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3653=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3654=((0.866025201892125)*r01*sj4*sj5);
IkReal x3655=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x3645*x3651))+((r00*x3653))+((x3643*x3650))+((x3643*x3646))+((x3643*x3648))+((r20*x3652))+((r02*x3647))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3650))+(((-1.0)*sj1*x3649))+(((-1.0)*cj1*x3648))+((r22*x3642))+(((-1.0)*sj1*x3651))+(((-1.0)*sj1*x3655))+((x3645*x3649))+((x3644*x3645)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3643*x3651))+((x3643*x3644))+((x3643*x3649))+((r20*x3653))+(((-1.0)*x3645*x3650))+(((-1.0)*x3645*x3648))+(((-1.0)*x3645*x3646))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+((sj1*x3650))+((sj1*x3654))+(((-1.0)*r00*x3652))+(((-1.0)*cj1*x3649))+((sj1*x3648))+((r22*x3647))+(((-1.0)*r02*x3642)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3645*x3651))+((r00*x3653))+((x3643*x3650))+((x3643*x3646))+((x3643*x3648))+((r20*x3652))+((r02*x3647))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3650))+(((-1.0)*sj1*x3649))+(((-1.0)*cj1*x3648))+((r22*x3642))+(((-1.0)*sj1*x3651))+(((-1.0)*sj1*x3655))+((x3645*x3649))+((x3644*x3645))))+IKsqr((((x3643*x3651))+((x3643*x3644))+((x3643*x3649))+((r20*x3653))+(((-1.0)*x3645*x3650))+(((-1.0)*x3645*x3648))+(((-1.0)*x3645*x3646))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+((sj1*x3650))+((sj1*x3654))+(((-1.0)*r00*x3652))+(((-1.0)*cj1*x3649))+((sj1*x3648))+((r22*x3647))+(((-1.0)*r02*x3642))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3645*x3651))+((r00*x3653))+((x3643*x3650))+((x3643*x3646))+((x3643*x3648))+((r20*x3652))+((r02*x3647))+(((-1.0)*cj1*x3654))+(((-1.0)*cj1*x3650))+(((-1.0)*sj1*x3649))+(((-1.0)*cj1*x3648))+((r22*x3642))+(((-1.0)*sj1*x3651))+(((-1.0)*sj1*x3655))+((x3645*x3649))+((x3644*x3645))), (((x3643*x3651))+((x3643*x3644))+((x3643*x3649))+((r20*x3653))+(((-1.0)*x3645*x3650))+(((-1.0)*x3645*x3648))+(((-1.0)*x3645*x3646))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+((sj1*x3650))+((sj1*x3654))+(((-1.0)*r00*x3652))+(((-1.0)*cj1*x3649))+((sj1*x3648))+((r22*x3647))+(((-1.0)*r02*x3642))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3656=IKsin(j2);
IkReal x3657=IKcos(j2);
IkReal x3658=((0.749999650312296)*sj3);
IkReal x3659=(cj5*r01);
IkReal x3660=(r00*sj5);
IkReal x3661=(cj4*cj5);
IkReal x3662=((1.0)*cj3);
IkReal x3663=(r21*sj3);
IkReal x3664=(cj4*sj5);
IkReal x3665=(cj3*r21);
IkReal x3666=((0.500000349687582)*sj4);
IkReal x3667=((0.433012903784321)*r20);
IkReal x3668=(cj4*r22);
IkReal x3669=((0.433012903784321)*sj3);
IkReal x3670=((0.433012903784321)*cj4);
IkReal x3671=(r01*sj5);
IkReal x3672=(r20*sj5);
IkReal x3673=((0.0160344678271334)*r02);
IkReal x3674=(cj4*r02);
IkReal x3675=((0.00925751294893567)*cj4);
IkReal x3676=((0.0185150129489311)*sj4);
IkReal x3677=(r21*sj5);
IkReal x3678=(cj5*r21);
IkReal x3679=((0.866025201892125)*sj4);
IkReal x3680=(cj5*r20);
IkReal x3681=(cj5*r00);
IkReal x3682=((0.250000349687704)*sj3);
IkReal x3683=(cj1*x3657);
IkReal x3684=(sj1*x3656);
IkReal x3685=(cj1*x3656);
IkReal x3686=(sj1*x3657);
IkReal x3687=(x3683+x3684);
evalcond[0]=((((-0.433012903784321)*r21*x3661))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x3668))+(((0.433012903784321)*x3678))+x3687+(((-1.0)*x3664*x3667))+(((-1.0)*x3679*x3680))+((sj5*x3667))+((x3677*x3679)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x3660))+(((0.433012903784321)*x3659))+x3685+(((-1.0)*x3660*x3670))+(((-1.0)*x3679*x3681))+(((-1.0)*x3659*x3670))+((x3671*x3679))+(((-1.0)*x3686))+(((-0.749999650312296)*x3674)));
evalcond[2]=((((-1.0)*x3676*x3677))+(((0.41)*cj1))+(((0.0648043305514941)*x3678))+(((0.0648043305514941)*x3672))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3664))+(((0.00925751294893567)*r21*x3661))+(((-1.0)*pz))+(((-0.27144)*x3683))+(((-0.27144)*x3684))+(((0.0160344678271334)*x3668))+((x3676*x3680)));
evalcond[3]=((((-1.0)*x3671*x3676))+(((0.0648043305514941)*x3660))+((x3660*x3675))+(((-0.41)*sj1))+(((-1.0)*px))+(((0.0648043305514941)*x3659))+(((-0.27144)*x3685))+((cj4*x3673))+(((0.27144)*x3686))+((x3676*x3681))+((x3659*x3675))+(((-1.0)*x3673)));
evalcond[4]=(((cj4*x3659*x3682))+((x3658*x3660))+((cj3*x3660*x3666))+(((-1.0)*r02*x3669))+(((-1.0)*r00*x3661*x3662))+((cj3*r01*x3664))+((cj3*r02*x3679))+((cj3*x3659*x3666))+x3687+((cj4*x3660*x3682))+((sj3*x3666*x3681))+((x3658*x3659))+(((-1.0)*sj3*x3666*x3671))+((x3669*x3674)));
evalcond[5]=(((cj5*x3665*x3666))+(((-1.0)*r20*x3661*x3662))+((x3664*x3665))+((cj3*r22*x3679))+x3686+((sj3*x3666*x3680))+(((-1.0)*sj5*x3663*x3666))+(((-1.0)*r22*x3669))+((x3668*x3669))+(((-1.0)*x3685))+(((0.250000349687704)*x3661*x3663))+((r20*x3664*x3682))+((cj3*x3666*x3672))+((x3658*x3678))+((x3658*x3672)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3688=(r02*sj1);
IkReal x3689=(cj1*cj4);
IkReal x3690=((0.749999650312296)*r22);
IkReal x3691=(cj4*sj1);
IkReal x3692=((0.250000349687704)*r22);
IkReal x3693=((0.433012903784321)*r00*sj5);
IkReal x3694=((0.433012903784321)*r20*sj5);
IkReal x3695=((0.433012903784321)*cj5*r01);
IkReal x3696=((0.433012903784321)*cj5*r21);
IkReal x3697=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3698=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3699=((0.866025201892125)*r01*sj4*sj5);
IkReal x3700=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r20*x3697))+(((-1.0)*x3689*x3693))+(((-1.0)*x3689*x3695))+(((-0.749999650312296)*r02*x3689))+((cj1*x3699))+((cj1*x3695))+((cj1*x3693))+((x3691*x3694))+((x3691*x3696))+((x3690*x3691))+((sj1*x3692))+(((-1.0)*sj1*x3700))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3698)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x3699))+(((-1.0)*sj1*x3695))+(((-1.0)*sj1*x3693))+((r00*x3697))+((r20*x3698))+(((-1.0)*cj1*x3700))+((x3689*x3690))+((x3689*x3696))+((x3689*x3694))+(((-1.0)*cj1*x3696))+(((-1.0)*cj1*x3694))+((cj1*x3692))+((x3691*x3693))+((x3691*x3695))+(((0.749999650312296)*cj4*x3688))+(((0.250000349687704)*x3688)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r20*x3697))+(((-1.0)*x3689*x3693))+(((-1.0)*x3689*x3695))+(((-0.749999650312296)*r02*x3689))+((cj1*x3699))+((cj1*x3695))+((cj1*x3693))+((x3691*x3694))+((x3691*x3696))+((x3690*x3691))+((sj1*x3692))+(((-1.0)*sj1*x3700))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3698))))+IKsqr(((((-1.0)*sj1*x3699))+(((-1.0)*sj1*x3695))+(((-1.0)*sj1*x3693))+((r00*x3697))+((r20*x3698))+(((-1.0)*cj1*x3700))+((x3689*x3690))+((x3689*x3696))+((x3689*x3694))+(((-1.0)*cj1*x3696))+(((-1.0)*cj1*x3694))+((cj1*x3692))+((x3691*x3693))+((x3691*x3695))+(((0.749999650312296)*cj4*x3688))+(((0.250000349687704)*x3688))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r20*x3697))+(((-1.0)*x3689*x3693))+(((-1.0)*x3689*x3695))+(((-0.749999650312296)*r02*x3689))+((cj1*x3699))+((cj1*x3695))+((cj1*x3693))+((x3691*x3694))+((x3691*x3696))+((x3690*x3691))+((sj1*x3692))+(((-1.0)*sj1*x3700))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3698))), ((((-1.0)*sj1*x3699))+(((-1.0)*sj1*x3695))+(((-1.0)*sj1*x3693))+((r00*x3697))+((r20*x3698))+(((-1.0)*cj1*x3700))+((x3689*x3690))+((x3689*x3696))+((x3689*x3694))+(((-1.0)*cj1*x3696))+(((-1.0)*cj1*x3694))+((cj1*x3692))+((x3691*x3693))+((x3691*x3695))+(((0.749999650312296)*cj4*x3688))+(((0.250000349687704)*x3688))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3701=IKcos(j2);
IkReal x3702=IKsin(j2);
IkReal x3703=((0.433012903784321)*sj3);
IkReal x3704=((0.749999650312296)*sj3);
IkReal x3705=(r00*sj5);
IkReal x3706=(cj4*cj5);
IkReal x3707=((1.0)*cj3);
IkReal x3708=(cj5*r01);
IkReal x3709=(r21*sj3);
IkReal x3710=(cj4*sj5);
IkReal x3711=(cj3*r21);
IkReal x3712=((0.500000349687582)*sj4);
IkReal x3713=((0.433012903784321)*r20);
IkReal x3714=(cj4*r22);
IkReal x3715=(r20*sj5);
IkReal x3716=((0.0160344678271334)*r02);
IkReal x3717=(cj4*r02);
IkReal x3718=(r01*sj5);
IkReal x3719=(cj5*r00);
IkReal x3720=((0.0185150129489311)*sj4);
IkReal x3721=(r21*sj5);
IkReal x3722=(cj5*r21);
IkReal x3723=((0.866025201892125)*sj4);
IkReal x3724=(cj5*r20);
IkReal x3725=((0.250000349687704)*sj3);
IkReal x3726=(sj1*x3701);
IkReal x3727=(cj1*x3701);
IkReal x3728=(sj1*x3702);
IkReal x3729=(cj1*x3702);
IkReal x3730=((1.0)*x3729);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3710*x3713))+x3728+x3727+(((-1.0)*x3723*x3724))+(((0.433012903784321)*x3722))+(((-0.433012903784321)*r21*x3706))+((x3721*x3723))+(((-0.749999650312296)*x3714))+((sj5*x3713)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x3730))+((x3718*x3723))+(((-0.433012903784321)*cj4*x3705))+(((-0.433012903784321)*r01*x3706))+x3726+(((-1.0)*x3719*x3723))+(((0.433012903784321)*x3708))+(((0.433012903784321)*x3705))+(((-0.749999650312296)*x3717)));
evalcond[2]=((((0.0648043305514941)*x3722))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3710))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x3706))+(((-0.27144)*x3728))+(((-0.27144)*x3727))+((x3720*x3724))+(((-1.0)*x3720*x3721))+(((0.0648043305514941)*x3715))+(((0.0160344678271334)*x3714)));
evalcond[3]=((((0.27144)*x3729))+(((0.00925751294893567)*cj4*x3705))+((x3719*x3720))+(((0.0648043305514941)*x3705))+(((0.0648043305514941)*x3708))+((cj4*x3716))+(((-1.0)*x3716))+(((0.41)*sj1))+(((-1.0)*px))+(((-1.0)*x3718*x3720))+(((0.00925751294893567)*r01*x3706))+(((-0.27144)*x3726)));
evalcond[4]=(((x3710*x3711))+(((-1.0)*x3730))+((r20*x3710*x3725))+(((-1.0)*sj5*x3709*x3712))+(((-1.0)*r20*x3706*x3707))+((x3704*x3722))+((cj5*x3711*x3712))+((cj3*x3712*x3715))+(((0.250000349687704)*x3706*x3709))+((x3704*x3715))+x3726+((x3703*x3714))+(((-1.0)*r22*x3703))+((sj3*x3712*x3724))+((cj3*r22*x3723)));
evalcond[5]=((((-1.0)*r02*x3703))+((cj3*r02*x3723))+((cj3*r01*x3710))+(((-1.0)*sj3*x3712*x3718))+((cj4*x3705*x3725))+((r01*x3706*x3725))+((cj3*x3708*x3712))+(((-1.0)*x3727))+(((-1.0)*x3728))+((sj3*x3712*x3719))+((cj3*x3705*x3712))+((x3704*x3705))+((x3704*x3708))+((x3703*x3717))+(((-1.0)*r00*x3706*x3707)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3731=((0.250000349687704)*r12);
IkReal x3732=((0.749999650312296)*cj4);
IkReal x3733=((0.433012903784321)*sj5);
IkReal x3734=(cj1*r10);
IkReal x3735=(cj1*r22);
IkReal x3736=(cj1*r20);
IkReal x3737=((0.866025201892125)*sj4);
IkReal x3738=(r20*sj1);
IkReal x3739=(r22*sj1);
IkReal x3740=(r10*sj1);
IkReal x3741=(r11*sj1);
IkReal x3742=((0.433012903784321)*cj5);
IkReal x3743=(r21*sj1);
IkReal x3744=(cj1*r21);
IkReal x3745=(cj1*r11);
IkReal x3746=(cj5*sj1*x3737);
IkReal x3747=(cj4*r21*x3742);
if( IKabs(((((0.250000349687704)*x3739))+((cj4*x3733*x3738))+((cj4*x3733*x3734))+((cj4*x3742*x3743))+((cj4*x3742*x3745))+((cj1*r12*x3732))+(((-1.0)*sj5*x3737*x3745))+(((-1.0)*sj5*x3737*x3743))+((cj5*x3734*x3737))+((x3732*x3739))+(((-1.0)*x3733*x3738))+(((-1.0)*x3733*x3734))+(((-1.0)*x3742*x3743))+(((-1.0)*x3742*x3745))+((cj1*x3731))+((cj5*x3737*x3738)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x3735))+((cj4*x3733*x3736))+((cj4*x3742*x3744))+(((-1.0)*sj5*x3737*x3744))+((x3732*x3735))+((sj5*x3737*x3741))+(((-1.0)*r12*sj1*x3732))+(((-1.0)*cj4*x3741*x3742))+(((-1.0)*sj1*x3731))+(((-1.0)*cj5*x3737*x3740))+(((-1.0)*cj4*x3733*x3740))+(((-1.0)*x3733*x3736))+(((-1.0)*x3742*x3744))+((cj5*x3736*x3737))+((x3741*x3742))+((x3733*x3740)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.250000349687704)*x3739))+((cj4*x3733*x3738))+((cj4*x3733*x3734))+((cj4*x3742*x3743))+((cj4*x3742*x3745))+((cj1*r12*x3732))+(((-1.0)*sj5*x3737*x3745))+(((-1.0)*sj5*x3737*x3743))+((cj5*x3734*x3737))+((x3732*x3739))+(((-1.0)*x3733*x3738))+(((-1.0)*x3733*x3734))+(((-1.0)*x3742*x3743))+(((-1.0)*x3742*x3745))+((cj1*x3731))+((cj5*x3737*x3738))))+IKsqr(((((0.250000349687704)*x3735))+((cj4*x3733*x3736))+((cj4*x3742*x3744))+(((-1.0)*sj5*x3737*x3744))+((x3732*x3735))+((sj5*x3737*x3741))+(((-1.0)*r12*sj1*x3732))+(((-1.0)*cj4*x3741*x3742))+(((-1.0)*sj1*x3731))+(((-1.0)*cj5*x3737*x3740))+(((-1.0)*cj4*x3733*x3740))+(((-1.0)*x3733*x3736))+(((-1.0)*x3742*x3744))+((cj5*x3736*x3737))+((x3741*x3742))+((x3733*x3740))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((0.250000349687704)*x3739))+((cj4*x3733*x3738))+((cj4*x3733*x3734))+((cj4*x3742*x3743))+((cj4*x3742*x3745))+((cj1*r12*x3732))+(((-1.0)*sj5*x3737*x3745))+(((-1.0)*sj5*x3737*x3743))+((cj5*x3734*x3737))+((x3732*x3739))+(((-1.0)*x3733*x3738))+(((-1.0)*x3733*x3734))+(((-1.0)*x3742*x3743))+(((-1.0)*x3742*x3745))+((cj1*x3731))+((cj5*x3737*x3738))), ((((0.250000349687704)*x3735))+((cj4*x3733*x3736))+((cj4*x3742*x3744))+(((-1.0)*sj5*x3737*x3744))+((x3732*x3735))+((sj5*x3737*x3741))+(((-1.0)*r12*sj1*x3732))+(((-1.0)*cj4*x3741*x3742))+(((-1.0)*sj1*x3731))+(((-1.0)*cj5*x3737*x3740))+(((-1.0)*cj4*x3733*x3740))+(((-1.0)*x3733*x3736))+(((-1.0)*x3742*x3744))+((cj5*x3736*x3737))+((x3741*x3742))+((x3733*x3740))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3748=IKsin(j2);
IkReal x3749=IKcos(j2);
IkReal x3750=(cj5*r11);
IkReal x3751=((0.433012903784321)*cj4);
IkReal x3752=(r21*sj5);
IkReal x3753=((0.500000349687582)*sj4);
IkReal x3754=((0.749999650312296)*sj3);
IkReal x3755=(cj3*cj4);
IkReal x3756=(cj5*r10);
IkReal x3757=((0.0185150129489311)*sj4);
IkReal x3758=(r20*sj5);
IkReal x3759=(cj4*r22);
IkReal x3760=(r10*sj5);
IkReal x3761=(r22*sj3);
IkReal x3762=(r11*sj5);
IkReal x3763=((0.00925751294893567)*cj4);
IkReal x3764=(cj5*r21);
IkReal x3765=(r12*sj3);
IkReal x3766=(cj4*r12);
IkReal x3767=(cj5*r20);
IkReal x3768=((0.866025201892125)*sj4);
IkReal x3769=(cj1*x3749);
IkReal x3770=(sj1*x3748);
IkReal x3771=(cj1*x3748);
IkReal x3772=((0.250000349687704)*cj4*sj3);
IkReal x3773=(sj1*x3749);
IkReal x3774=(cj3*x3768);
IkReal x3775=(x3769+x3770);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3751*x3764))+(((-1.0)*x3767*x3768))+(((-0.749999650312296)*x3759))+((x3752*x3768))+x3775+(((-1.0)*x3751*x3758))+(((0.433012903784321)*x3758))+(((0.433012903784321)*x3764)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x3751*x3760))+(((-1.0)*x3750*x3751))+(((-0.749999650312296)*x3766))+(((-1.0)*x3773))+x3771+((x3762*x3768))+(((-1.0)*x3756*x3768))+(((0.433012903784321)*x3750))+(((0.433012903784321)*x3760)));
evalcond[2]=((((-1.0)*x3752*x3757))+(((0.0648043305514941)*x3758))+(((0.41)*cj1))+((x3758*x3763))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x3764))+(((-1.0)*pz))+((x3757*x3767))+((x3763*x3764))+(((-0.27144)*x3769))+(((0.0160344678271334)*x3759))+(((-0.27144)*x3770)));
evalcond[3]=((((-1.0)*x3757*x3762))+((x3750*x3763))+(((0.0648043305514941)*x3750))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x3760))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x3766))+((x3756*x3757))+(((0.27144)*x3773))+((x3760*x3763))+(((-0.27144)*x3771)));
evalcond[4]=((((-1.0)*x3755*x3756))+(((-1.0)*sj3*x3753*x3762))+((x3750*x3772))+(((-0.433012903784321)*x3765))+x3775+((sj3*x3753*x3756))+((cj3*x3750*x3753))+((x3750*x3754))+((r12*x3774))+((x3751*x3765))+((x3760*x3772))+((x3755*x3762))+((cj3*x3753*x3760))+((x3754*x3760)));
evalcond[5]=(((x3754*x3758))+((r22*x3774))+((sj3*x3753*x3767))+((x3758*x3772))+(((-0.433012903784321)*x3761))+((x3752*x3755))+(((-1.0)*x3771))+x3773+(((-1.0)*sj3*x3752*x3753))+((cj3*x3753*x3758))+((x3751*x3761))+((x3764*x3772))+((cj3*x3753*x3764))+(((-1.0)*x3755*x3767))+((x3754*x3764)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3776=((0.250000349687704)*r12);
IkReal x3777=((0.749999650312296)*cj4);
IkReal x3778=(cj1*r22);
IkReal x3779=((0.866025201892125)*sj4);
IkReal x3780=(cj1*r20);
IkReal x3781=(sj1*sj5);
IkReal x3782=((0.433012903784321)*r20);
IkReal x3783=((0.433012903784321)*sj5);
IkReal x3784=(cj1*r10);
IkReal x3785=(r22*sj1);
IkReal x3786=((0.433012903784321)*r10);
IkReal x3787=((0.433012903784321)*cj5);
IkReal x3788=(cj1*r21);
IkReal x3789=(cj1*r11);
IkReal x3790=(r11*sj1);
IkReal x3791=(cj1*cj4*x3783);
IkReal x3792=(cj5*sj1*x3779);
IkReal x3793=(cj4*r21*x3787);
if( IKabs(((((-1.0)*r21*x3779*x3781))+((x3787*x3789))+((sj1*x3793))+((sj5*x3779*x3789))+(((-1.0)*x3781*x3782))+(((-1.0)*cj5*x3779*x3784))+((x3777*x3785))+(((0.250000349687704)*x3785))+(((-1.0)*cj1*r12*x3777))+(((-1.0)*cj4*x3787*x3789))+((cj4*x3781*x3782))+((x3783*x3784))+((r20*x3792))+(((-1.0)*cj4*x3783*x3784))+(((-1.0)*r21*sj1*x3787))+(((-1.0)*cj1*x3776)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3787*x3788))+((r12*sj1*x3777))+((x3777*x3778))+((cj5*x3779*x3780))+(((-1.0)*sj5*x3779*x3788))+((r10*x3792))+(((0.250000349687704)*x3778))+(((-1.0)*r11*x3779*x3781))+((cj4*x3780*x3783))+(((-1.0)*x3781*x3786))+(((-1.0)*x3780*x3783))+((sj1*x3776))+((cj4*x3781*x3786))+(((-1.0)*x3787*x3788))+((cj4*x3787*x3790))+(((-1.0)*x3787*x3790)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x3779*x3781))+((x3787*x3789))+((sj1*x3793))+((sj5*x3779*x3789))+(((-1.0)*x3781*x3782))+(((-1.0)*cj5*x3779*x3784))+((x3777*x3785))+(((0.250000349687704)*x3785))+(((-1.0)*cj1*r12*x3777))+(((-1.0)*cj4*x3787*x3789))+((cj4*x3781*x3782))+((x3783*x3784))+((r20*x3792))+(((-1.0)*cj4*x3783*x3784))+(((-1.0)*r21*sj1*x3787))+(((-1.0)*cj1*x3776))))+IKsqr((((cj4*x3787*x3788))+((r12*sj1*x3777))+((x3777*x3778))+((cj5*x3779*x3780))+(((-1.0)*sj5*x3779*x3788))+((r10*x3792))+(((0.250000349687704)*x3778))+(((-1.0)*r11*x3779*x3781))+((cj4*x3780*x3783))+(((-1.0)*x3781*x3786))+(((-1.0)*x3780*x3783))+((sj1*x3776))+((cj4*x3781*x3786))+(((-1.0)*x3787*x3788))+((cj4*x3787*x3790))+(((-1.0)*x3787*x3790))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*x3779*x3781))+((x3787*x3789))+((sj1*x3793))+((sj5*x3779*x3789))+(((-1.0)*x3781*x3782))+(((-1.0)*cj5*x3779*x3784))+((x3777*x3785))+(((0.250000349687704)*x3785))+(((-1.0)*cj1*r12*x3777))+(((-1.0)*cj4*x3787*x3789))+((cj4*x3781*x3782))+((x3783*x3784))+((r20*x3792))+(((-1.0)*cj4*x3783*x3784))+(((-1.0)*r21*sj1*x3787))+(((-1.0)*cj1*x3776))), (((cj4*x3787*x3788))+((r12*sj1*x3777))+((x3777*x3778))+((cj5*x3779*x3780))+(((-1.0)*sj5*x3779*x3788))+((r10*x3792))+(((0.250000349687704)*x3778))+(((-1.0)*r11*x3779*x3781))+((cj4*x3780*x3783))+(((-1.0)*x3781*x3786))+(((-1.0)*x3780*x3783))+((sj1*x3776))+((cj4*x3781*x3786))+(((-1.0)*x3787*x3788))+((cj4*x3787*x3790))+(((-1.0)*x3787*x3790))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3794=IKcos(j2);
IkReal x3795=IKsin(j2);
IkReal x3796=(cj5*r11);
IkReal x3797=((0.433012903784321)*cj4);
IkReal x3798=(r21*sj5);
IkReal x3799=((0.500000349687582)*sj4);
IkReal x3800=((0.749999650312296)*sj3);
IkReal x3801=(cj3*cj4);
IkReal x3802=(cj5*r10);
IkReal x3803=((0.0185150129489311)*sj4);
IkReal x3804=(r20*sj5);
IkReal x3805=(cj4*r22);
IkReal x3806=(r10*sj5);
IkReal x3807=(r12*sj3);
IkReal x3808=(r11*sj5);
IkReal x3809=(r22*sj3);
IkReal x3810=((0.27144)*sj1);
IkReal x3811=((0.00925751294893567)*cj4);
IkReal x3812=(cj5*r20);
IkReal x3813=(cj5*r21);
IkReal x3814=(cj4*r12);
IkReal x3815=((0.866025201892125)*sj4);
IkReal x3816=(sj1*x3794);
IkReal x3817=(cj1*x3794);
IkReal x3818=(cj1*x3795);
IkReal x3819=((0.250000349687704)*cj4*sj3);
IkReal x3820=(cj3*x3815);
IkReal x3821=(sj1*x3795);
IkReal x3822=((1.0)*x3818);
evalcond[0]=((((0.433012903784321)*x3813))+(((-0.250000349687704)*r22))+(((-1.0)*x3797*x3813))+(((-1.0)*x3812*x3815))+(((-1.0)*x3797*x3804))+(((-0.749999650312296)*x3805))+((x3798*x3815))+x3821+x3817+(((0.433012903784321)*x3804)));
evalcond[1]=((((-1.0)*x3796*x3797))+(((0.433012903784321)*x3796))+(((-0.250000349687704)*r12))+(((-1.0)*x3822))+(((-1.0)*x3797*x3806))+x3816+(((-0.749999650312296)*x3814))+((x3808*x3815))+(((-1.0)*x3802*x3815))+(((0.433012903784321)*x3806)));
evalcond[2]=(((x3811*x3813))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3804*x3811))+(((-1.0)*pz))+(((-0.27144)*x3817))+(((0.0648043305514941)*x3804))+(((0.0160344678271334)*x3805))+((x3803*x3812))+(((-1.0)*x3798*x3803))+(((0.0648043305514941)*x3813))+(((-1.0)*x3795*x3810)));
evalcond[3]=(((x3802*x3803))+((x3806*x3811))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x3794*x3810))+(((0.27144)*x3818))+((x3796*x3811))+(((-1.0)*py))+(((0.0648043305514941)*x3796))+(((0.0648043305514941)*x3806))+(((-1.0)*x3803*x3808))+(((0.0160344678271334)*x3814)));
evalcond[4]=(((sj3*x3799*x3812))+((x3813*x3819))+((x3797*x3809))+(((-1.0)*sj3*x3798*x3799))+((x3800*x3804))+(((-1.0)*x3822))+((x3798*x3801))+(((-1.0)*x3801*x3812))+((x3800*x3813))+((x3804*x3819))+((r22*x3820))+x3816+((cj3*x3799*x3804))+((cj3*x3799*x3813))+(((-0.433012903784321)*x3809)));
evalcond[5]=(((r12*x3820))+((sj3*x3799*x3802))+((x3797*x3807))+((x3806*x3819))+((x3800*x3806))+((x3801*x3808))+((x3796*x3819))+(((-1.0)*x3821))+(((-1.0)*x3817))+((x3796*x3800))+(((-1.0)*x3801*x3802))+((cj3*x3799*x3806))+((cj3*x3796*x3799))+(((-0.433012903784321)*x3807))+(((-1.0)*sj3*x3799*x3808)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3823=(cj4*sj1);
IkReal x3824=((0.433012903784321)*sj0);
IkReal x3825=(cj5*r21);
IkReal x3826=(cj1*r12);
IkReal x3827=(r20*sj5);
IkReal x3828=(r20*sj0);
IkReal x3829=(r10*sj1);
IkReal x3830=((0.749999650312296)*cj4);
IkReal x3831=(r21*sj0);
IkReal x3832=((0.433012903784321)*sj5);
IkReal x3833=(cj1*cj4);
IkReal x3834=(r22*sj0);
IkReal x3835=((0.250000349687704)*x3834);
IkReal x3836=((0.866025201892125)*cj5*sj4);
IkReal x3837=((0.433012903784321)*cj5*r11);
IkReal x3838=(cj1*r10*x3832);
IkReal x3839=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3840=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3841=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3841.valid){
continue;
}
CheckValue<IkReal> x3842 = IKatan2WithCheck(IkReal(((((-1.0)*x3831*x3839))+((x3823*x3824*x3827))+((x3823*x3824*x3825))+((sj1*x3835))+(((0.749999650312296)*x3823*x3834))+((cj1*r10*x3836))+(((-1.0)*r11*x3840))+((x3826*x3830))+((sj1*x3828*x3836))+((x3833*x3837))+(((-1.0)*cj1*x3837))+(((0.250000349687704)*x3826))+(((-1.0)*sj1*x3824*x3825))+(((-1.0)*sj1*x3824*x3827))+(((-1.0)*x3838))+((r10*x3832*x3833)))),IkReal(((((-1.0)*x3831*x3840))+(((-0.250000349687704)*r12*sj1))+((x3824*x3825*x3833))+(((-1.0)*x3829*x3836))+((sj1*x3837))+((cj1*x3828*x3836))+((x3824*x3827*x3833))+((x3829*x3832))+(((-1.0)*cj1*x3824*x3825))+(((-1.0)*cj1*x3824*x3827))+(((-1.0)*r10*x3823*x3832))+((cj1*x3830*x3834))+((r11*x3839))+((cj1*x3835))+(((-0.749999650312296)*r12*x3823))+(((-1.0)*x3823*x3837)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3842.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3841.value)))+(x3842.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3843=IKsin(j2);
IkReal x3844=IKcos(j2);
IkReal x3845=(cj4*sj5);
IkReal x3846=(cj3*r21);
IkReal x3847=((0.433012903784321)*r20);
IkReal x3848=((0.749999650312296)*cj4);
IkReal x3849=(cj4*cj5);
IkReal x3850=((1.0)*cj3);
IkReal x3851=((0.433012903784321)*r01);
IkReal x3852=(sj4*sj5);
IkReal x3853=((0.749999650312296)*sj3);
IkReal x3854=(r10*sj5);
IkReal x3855=((0.500000349687582)*sj3);
IkReal x3856=(cj0*sj1);
IkReal x3857=((0.500000349687582)*cj3);
IkReal x3858=((0.0160344678271334)*r22);
IkReal x3859=(r20*sj3);
IkReal x3860=(r00*sj5);
IkReal x3861=(cj3*r11);
IkReal x3862=((0.0160344678271334)*r12);
IkReal x3863=((0.433012903784321)*r11);
IkReal x3864=(cj5*r11);
IkReal x3865=(r10*sj3);
IkReal x3866=(r00*sj3);
IkReal x3867=((0.433012903784321)*sj3);
IkReal x3868=(cj5*sj4);
IkReal x3869=(r20*sj5);
IkReal x3870=((0.433012903784321)*r21);
IkReal x3871=(sj0*sj1);
IkReal x3872=(cj3*r01);
IkReal x3873=(cj5*r21);
IkReal x3874=((0.0160344678271334)*r02);
IkReal x3875=(cj5*r01);
IkReal x3876=((0.250000349687704)*sj3);
IkReal x3877=(cj1*x3843);
IkReal x3878=((0.500000349687582)*x3868);
IkReal x3879=((0.27144)*x3844);
IkReal x3880=(cj4*x3867);
IkReal x3881=(sj1*x3843);
IkReal x3882=((0.866025201892125)*cj3*sj4);
IkReal x3883=(cj1*x3844);
IkReal x3884=((1.0)*x3844);
evalcond[0]=((((-1.0)*x3845*x3847))+(((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x3868))+((sj5*x3847))+((cj5*x3870))+x3881+x3883+(((-1.0)*r22*x3848))+(((0.866025201892125)*r21*x3852))+(((-1.0)*x3849*x3870)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*r02*x3848))+((cj5*x3851))+(((0.866025201892125)*r01*x3852))+(((-0.433012903784321)*r00*x3845))+(((-1.0)*x3856*x3884))+(((-0.866025201892125)*r00*x3868))+(((0.433012903784321)*x3860))+(((-1.0)*x3849*x3851))+((cj0*x3877)));
evalcond[2]=(((cj5*x3863))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x3845))+(((-0.866025201892125)*r10*x3868))+((sj0*x3877))+(((-1.0)*r12*x3848))+(((0.433012903784321)*x3854))+(((0.866025201892125)*r11*x3852))+(((-1.0)*x3849*x3863))+(((-1.0)*x3871*x3884)));
evalcond[3]=((((-1.0)*x3858))+(((0.00925751294893567)*r20*x3845))+(((0.41)*cj1))+(((0.00925751294893567)*r21*x3849))+(((0.0648043305514941)*x3869))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x3852))+(((0.0648043305514941)*x3873))+(((-1.0)*cj1*x3879))+(((-0.27144)*x3881))+(((0.0185150129489311)*r20*x3868))+((cj4*x3858)));
evalcond[4]=(((x3856*x3879))+(((-0.0185150129489311)*r01*x3852))+(((-0.41)*x3856))+(((0.0185150129489311)*r00*x3868))+(((-0.27144)*cj0*x3877))+((cj4*x3874))+(((0.0648043305514941)*x3860))+(((-1.0)*px))+(((0.0648043305514941)*x3875))+(((-1.0)*x3874))+(((0.00925751294893567)*r00*x3845))+(((0.00925751294893567)*r01*x3849))+(((0.0098)*sj0)));
evalcond[5]=(((cj4*x3862))+(((-1.0)*x3862))+(((-0.41)*x3871))+((x3871*x3879))+(((-0.27144)*sj0*x3877))+(((0.0648043305514941)*x3864))+(((0.0648043305514941)*x3854))+(((-1.0)*py))+(((0.00925751294893567)*r10*x3845))+(((0.0185150129489311)*r10*x3868))+(((-0.0098)*cj0))+(((-0.0185150129489311)*r11*x3852))+(((0.00925751294893567)*r11*x3849)));
evalcond[6]=(((sj1*x3844))+((r22*x3880))+((r22*x3882))+((x3846*x3878))+(((0.250000349687704)*x3845*x3859))+((x3845*x3846))+((x3853*x3869))+(((-1.0)*r20*x3849*x3850))+((r20*x3852*x3857))+((r20*x3855*x3868))+(((-1.0)*x3877))+(((-1.0)*r21*x3852*x3855))+((r21*x3849*x3876))+(((-1.0)*r22*x3867))+((x3853*x3873)));
evalcond[7]=((((-1.0)*r00*x3849*x3850))+(((-1.0)*r02*x3867))+((r01*x3849*x3876))+(((-1.0)*r01*x3852*x3855))+((cj0*x3883))+((r02*x3880))+((r02*x3882))+((x3843*x3856))+(((0.250000349687704)*x3845*x3866))+((x3853*x3860))+((r01*x3857*x3868))+((x3845*x3872))+((r00*x3852*x3857))+((r00*x3855*x3868))+((x3853*x3875)));
evalcond[8]=(((sj4*x3857*x3864))+((sj0*x3883))+(((-1.0)*r11*x3852*x3855))+((r10*x3855*x3868))+((r12*x3880))+((r12*x3882))+((x3843*x3871))+(((0.250000349687704)*x3845*x3865))+((x3853*x3864))+((x3853*x3854))+(((-1.0)*r12*x3867))+((x3845*x3861))+((r10*x3852*x3857))+((r11*x3849*x3876))+(((-1.0)*r10*x3849*x3850)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3885=(cj0*r20);
IkReal x3886=(cj1*r00);
IkReal x3887=(r02*sj1);
IkReal x3888=(r00*sj1);
IkReal x3889=((0.433012903784321)*sj5);
IkReal x3890=(cj4*sj1);
IkReal x3891=((0.749999650312296)*cj4);
IkReal x3892=(cj0*r22);
IkReal x3893=(r01*sj1);
IkReal x3894=(cj1*cj4);
IkReal x3895=(cj0*r21);
IkReal x3896=(cj1*r02);
IkReal x3897=((0.866025201892125)*cj5*sj4);
IkReal x3898=((0.866025201892125)*sj4*sj5);
IkReal x3899=((0.433012903784321)*cj5*r01);
IkReal x3900=((0.433012903784321)*cj5*x3895);
CheckValue<IkReal> x3901=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3901.valid){
continue;
}
CheckValue<IkReal> x3902 = IKatan2WithCheck(IkReal(((((0.749999650312296)*x3890*x3892))+(((0.250000349687704)*sj1*x3892))+((x3894*x3899))+((cj4*x3886*x3889))+(((-1.0)*sj1*x3900))+(((-1.0)*sj1*x3885*x3889))+(((0.250000349687704)*x3896))+((x3890*x3900))+(((-1.0)*cj1*r01*x3898))+((x3891*x3896))+(((-1.0)*sj1*x3895*x3898))+((x3886*x3897))+((x3885*x3889*x3890))+((sj1*x3885*x3897))+(((-1.0)*x3886*x3889))+(((-1.0)*cj1*x3899)))),IkReal((((x3888*x3889))+((cj1*x3891*x3892))+(((-1.0)*cj1*x3885*x3889))+((x3894*x3900))+(((-1.0)*x3887*x3891))+((x3885*x3889*x3894))+((x3893*x3898))+(((-1.0)*cj1*x3895*x3898))+(((-0.250000349687704)*x3887))+(((0.433012903784321)*cj5*x3893))+(((-1.0)*cj1*x3900))+((cj1*x3885*x3897))+(((-1.0)*cj4*x3888*x3889))+(((-1.0)*x3888*x3897))+(((0.250000349687704)*cj1*x3892))+(((-1.0)*x3890*x3899)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3902.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3901.value)))+(x3902.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3903=IKsin(j2);
IkReal x3904=IKcos(j2);
IkReal x3905=(cj4*sj5);
IkReal x3906=(cj3*r21);
IkReal x3907=((0.433012903784321)*r20);
IkReal x3908=((0.749999650312296)*cj4);
IkReal x3909=(cj4*cj5);
IkReal x3910=((1.0)*cj3);
IkReal x3911=((0.433012903784321)*r01);
IkReal x3912=(sj4*sj5);
IkReal x3913=((0.749999650312296)*sj3);
IkReal x3914=(r10*sj5);
IkReal x3915=((0.500000349687582)*sj3);
IkReal x3916=(cj0*sj1);
IkReal x3917=((0.500000349687582)*cj3);
IkReal x3918=((0.0160344678271334)*r22);
IkReal x3919=(r20*sj3);
IkReal x3920=(r00*sj5);
IkReal x3921=(cj3*r11);
IkReal x3922=((0.0160344678271334)*r12);
IkReal x3923=((0.433012903784321)*r11);
IkReal x3924=(cj5*r11);
IkReal x3925=(r10*sj3);
IkReal x3926=(r00*sj3);
IkReal x3927=((0.433012903784321)*sj3);
IkReal x3928=(cj5*sj4);
IkReal x3929=(r20*sj5);
IkReal x3930=((0.433012903784321)*r21);
IkReal x3931=(sj0*sj1);
IkReal x3932=(cj3*r01);
IkReal x3933=(cj5*r21);
IkReal x3934=((0.0160344678271334)*r02);
IkReal x3935=(cj5*r01);
IkReal x3936=((0.250000349687704)*sj3);
IkReal x3937=(cj1*x3903);
IkReal x3938=((0.500000349687582)*x3928);
IkReal x3939=((0.27144)*x3904);
IkReal x3940=(cj4*x3927);
IkReal x3941=(sj1*x3903);
IkReal x3942=((0.866025201892125)*cj3*sj4);
IkReal x3943=(cj1*x3904);
IkReal x3944=((1.0)*x3904);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3905*x3907))+(((-1.0)*r22*x3908))+(((-0.866025201892125)*r20*x3928))+x3941+x3943+(((-1.0)*x3909*x3930))+((cj5*x3930))+(((0.866025201892125)*r21*x3912))+((sj5*x3907)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x3911))+((cj0*x3937))+(((-1.0)*x3909*x3911))+(((-0.433012903784321)*r00*x3905))+(((-0.866025201892125)*r00*x3928))+(((0.866025201892125)*r01*x3912))+(((0.433012903784321)*x3920))+(((-1.0)*r02*x3908))+(((-1.0)*x3916*x3944)));
evalcond[2]=((((-0.866025201892125)*r10*x3928))+(((-1.0)*r12*x3908))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x3905))+((sj0*x3937))+(((0.433012903784321)*x3914))+(((-1.0)*x3931*x3944))+(((-1.0)*x3909*x3923))+(((0.866025201892125)*r11*x3912))+((cj5*x3923)));
evalcond[3]=((((0.0185150129489311)*r20*x3928))+(((-1.0)*x3918))+(((0.00925751294893567)*r20*x3905))+(((0.00925751294893567)*r21*x3909))+(((0.0648043305514941)*x3933))+((cj4*x3918))+(((-1.0)*cj1*x3939))+(((0.41)*cj1))+(((0.0648043305514941)*x3929))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x3912))+(((-0.27144)*x3941)));
evalcond[4]=(((x3916*x3939))+(((0.0648043305514941)*x3935))+(((0.0648043305514941)*x3920))+(((-1.0)*px))+(((0.00925751294893567)*r00*x3905))+(((0.0185150129489311)*r00*x3928))+(((0.00925751294893567)*r01*x3909))+(((-1.0)*x3934))+(((-0.0185150129489311)*r01*x3912))+(((-0.27144)*cj0*x3937))+((cj4*x3934))+(((-0.41)*x3916))+(((0.0098)*sj0)));
evalcond[5]=((((-0.41)*x3931))+(((-1.0)*x3922))+(((0.00925751294893567)*r11*x3909))+(((-0.0185150129489311)*r11*x3912))+(((0.0648043305514941)*x3924))+(((-1.0)*py))+(((0.0185150129489311)*r10*x3928))+(((0.0648043305514941)*x3914))+((cj4*x3922))+(((-0.0098)*cj0))+(((0.00925751294893567)*r10*x3905))+((x3931*x3939))+(((-0.27144)*sj0*x3937)));
evalcond[6]=(((r22*x3940))+((r22*x3942))+((x3906*x3938))+(((0.250000349687704)*x3905*x3919))+(((-1.0)*x3937))+((sj1*x3904))+((x3905*x3906))+((r21*x3909*x3936))+((r20*x3915*x3928))+((x3913*x3933))+(((-1.0)*r22*x3927))+(((-1.0)*r20*x3909*x3910))+((r20*x3912*x3917))+(((-1.0)*r21*x3912*x3915))+((x3913*x3929)));
evalcond[7]=((((-1.0)*r01*x3912*x3915))+((cj0*x3943))+((x3903*x3916))+(((-1.0)*r02*x3927))+((x3905*x3932))+((x3913*x3935))+((r01*x3909*x3936))+((r01*x3917*x3928))+((r00*x3915*x3928))+(((-1.0)*r00*x3909*x3910))+((r00*x3912*x3917))+(((0.250000349687704)*x3905*x3926))+((r02*x3940))+((r02*x3942))+((x3913*x3920)));
evalcond[8]=((((-1.0)*r11*x3912*x3915))+((r10*x3915*x3928))+((x3903*x3931))+((sj0*x3943))+(((-1.0)*r12*x3927))+((x3913*x3914))+((sj4*x3917*x3924))+((x3905*x3921))+(((-1.0)*r10*x3909*x3910))+((r12*x3940))+((r12*x3942))+(((0.250000349687704)*x3905*x3925))+((r11*x3909*x3936))+((x3913*x3924))+((r10*x3912*x3917)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3945=(cj0*cj4);
IkReal x3946=((0.433012903784321)*r22);
IkReal x3947=((0.433012903784321)*cj5);
IkReal x3948=(r20*sj5);
IkReal x3949=((0.749999650312296)*cj0);
IkReal x3950=(cj5*r21);
IkReal x3951=((0.866025201892125)*sj4);
IkReal x3952=((0.433012903784321)*sj5);
IkReal x3953=(r21*sj5);
IkReal x3954=(cj5*r20);
IkReal x3955=((0.500000349687582)*cj0*sj4);
CheckValue<IkReal> x3956 = IKatan2WithCheck(IkReal(((((-1.0)*x3948*x3949))+(((-1.0)*x3954*x3955))+(((-1.0)*x3949*x3950))+((cj0*x3946))+(((-1.0)*x3945*x3946))+((x3953*x3955))+(((-0.250000349687704)*x3945*x3950))+(((-0.250000349687704)*x3945*x3948)))),IkReal(((((-1.0)*x3948*x3955))+(((-1.0)*x3950*x3955))+((x3945*x3954))+(((-1.0)*x3945*x3953))+(((-1.0)*cj0*r22*x3951)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3956.valid){
continue;
}
CheckValue<IkReal> x3957=IKPowWithIntegerCheck(IKsign((((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r00*((x3952+(((-1.0)*cj5*x3951))+(((-1.0)*cj4*x3952))))))+((r01*(((((-1.0)*cj4*x3947))+x3947+((sj5*x3951)))))))),-1);
if(!x3957.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x3956.value)+(((1.5707963267949)*(x3957.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3958=IKsin(j3);
IkReal x3959=IKcos(j3);
IkReal x3960=(r11*sj5);
IkReal x3961=(cj5*r20);
IkReal x3962=(cj4*cj5);
IkReal x3963=(r00*sj5);
IkReal x3964=(cj5*r01);
IkReal x3965=(r10*sj5);
IkReal x3966=(r21*sj5);
IkReal x3967=(r20*sj5);
IkReal x3968=(cj5*r21);
IkReal x3969=(cj5*r11);
IkReal x3970=(r01*sj5);
IkReal x3971=((1.0)*x3958);
IkReal x3972=((0.250000349687704)*x3959);
IkReal x3973=((0.749999650312296)*x3959);
IkReal x3974=(cj4*x3958);
IkReal x3975=((0.500000349687582)*sj4*x3959);
IkReal x3976=((0.433012903784321)*r12*x3959);
IkReal x3977=((0.500000349687582)*sj4*x3958);
IkReal x3978=((0.433012903784321)*r02*x3959);
IkReal x3979=((0.866025201892125)*sj4*x3958);
IkReal x3980=((0.433012903784321)*r22*x3959);
evalcond[0]=((((-1.0)*x3968*x3973))+(((-1.0)*cj4*x3967*x3972))+((r22*x3979))+x3980+(((-1.0)*cj4*x3980))+((x3968*x3977))+(((-1.0)*x3961*x3975))+((x3967*x3977))+(((-1.0)*r21*x3962*x3972))+(((-1.0)*x3967*x3973))+((x3966*x3974))+((x3966*x3975))+(((-1.0)*cj4*x3961*x3971)));
evalcond[1]=((((-1.0)*r11*x3962*x3972))+((x3965*x3977))+(((-1.0)*cj5*r10*x3975))+(((-1.0)*r10*x3962*x3971))+cj0+(((-1.0)*x3969*x3973))+(((-1.0)*x3965*x3973))+((x3960*x3975))+((x3960*x3974))+((r12*x3979))+(((-1.0)*cj4*x3976))+x3976+((x3969*x3977))+(((-1.0)*cj4*x3965*x3972)));
evalcond[2]=((((-1.0)*sj0))+(((-1.0)*r00*x3962*x3971))+((r02*x3979))+((x3970*x3975))+((x3970*x3974))+(((-1.0)*cj4*x3978))+x3978+(((-1.0)*cj4*x3963*x3972))+((x3964*x3977))+(((-1.0)*r01*x3962*x3972))+(((-1.0)*x3964*x3973))+(((-1.0)*cj5*r00*x3975))+((x3963*x3977))+(((-1.0)*x3963*x3973)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3981=((0.528192360616262)*sj4);
IkReal x3982=(r20*sj5);
IkReal x3983=((0.26409636501044)*cj4);
IkReal x3984=((0.444735007694415)*cj5);
IkReal x3985=((0.457427895740576)*cj4);
IkReal x3986=(r10*sj5);
if( IKabs(((((-1.0)*r12*x3985))+((r11*x3984))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3983*x3986))+(((-1.0)*cj5*r11*x3983))+((r11*sj5*x3981))+(((-1.0)*cj5*r10*x3981))+(((0.444735007694415)*x3986)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-0.444735007694415)*x3982))+(((-1.0)*r21*x3984))+((cj5*r20*x3981))+((x3982*x3983))+((cj5*r21*x3983))+((r22*x3985))+(((-1.0)*r21*sj5*x3981))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*x3985))+((r11*x3984))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3983*x3986))+(((-1.0)*cj5*r11*x3983))+((r11*sj5*x3981))+(((-1.0)*cj5*r10*x3981))+(((0.444735007694415)*x3986))))+IKsqr(((((0.204620884747229)*r22))+(((-0.444735007694415)*x3982))+(((-1.0)*r21*x3984))+((cj5*r20*x3981))+((x3982*x3983))+((cj5*r21*x3983))+((r22*x3985))+(((-1.0)*r21*sj5*x3981))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r12*x3985))+((r11*x3984))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3983*x3986))+(((-1.0)*cj5*r11*x3983))+((r11*sj5*x3981))+(((-1.0)*cj5*r10*x3981))+(((0.444735007694415)*x3986))), ((((0.204620884747229)*r22))+(((-0.444735007694415)*x3982))+(((-1.0)*r21*x3984))+((cj5*r20*x3981))+((x3982*x3983))+((cj5*r21*x3983))+((r22*x3985))+(((-1.0)*r21*sj5*x3981))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3987=((1.0)*py);
IkReal x3988=(cj5*r11);
IkReal x3989=(cj5*sj3);
IkReal x3990=(r20*sj5);
IkReal x3991=((0.135720094919197)*sj4);
IkReal x3992=(r21*sj5);
IkReal x3993=((0.0185150129489311)*sj4);
IkReal x3994=((0.135720094919197)*sj3);
IkReal x3995=((0.00925751294893567)*cj4);
IkReal x3996=(cj4*cj5);
IkReal x3997=(cj3*r10);
IkReal x3998=((0.0678600949192303)*cj4);
IkReal x3999=(r10*sj5);
IkReal x4000=((0.10827950965428)*cj4);
IkReal x4001=(cj4*r22);
IkReal x4002=((0.0160344678271334)*r12);
IkReal x4003=((0.20357990508077)*sj3);
IkReal x4004=(cj5*r20);
IkReal x4005=((0.216558867852667)*sj4);
IkReal x4006=((0.117537022603216)*sj3);
IkReal x4007=((0.27144)*cj3);
IkReal x4008=(cj5*r21);
IkReal x4009=(cj4*r12);
IkReal x4010=((0.41)*(IKsin(j1)));
IkReal x4011=((0.41)*(IKcos(j1)));
IkReal x4012=(cj5*r10*sj4);
IkReal x4013=(r11*sj4*sj5);
IkReal x4014=((0.235073880801598)*cj3*sj4);
IkReal x4015=(x4010+x3987);
evalcond[0]=((((0.10827950965428)*r21*x3996))+((x3990*x4000))+(((-0.18234135315471)*x4008))+((x4004*x4005))+(((-1.0)*x3992*x4005))+(((-1.0)*x4011))+pz+(((-0.18234135315471)*x3990))+(((0.0838945627463637)*r22))+(((0.187545437253636)*x4001)));
evalcond[1]=((((-1.0)*x3999*x4000))+(((0.18234135315471)*x3999))+((r11*sj5*x4005))+(((-1.0)*x3988*x4000))+(((-0.0838945627463637)*r12))+(((-1.0)*x4015))+(((-0.187545437253636)*x4009))+(((-1.0)*cj5*r10*x4005))+(((0.18234135315471)*x3988)));
evalcond[2]=((((-1.0)*r20*x3989*x3991))+(((0.0648043305514941)*x3988))+((cj5*r10*x3993))+(((-1.0)*x4002))+(((-1.0)*r22*x4014))+((x3995*x3999))+((r22*x4006))+(((-1.0)*cj4*x3992*x4007))+(((-1.0)*r21*x3989*x3998))+(((-1.0)*x4001*x4006))+((sj3*x3991*x3992))+(((0.0648043305514941)*x3999))+(((-0.20357990508077)*r21*x3989))+((x3988*x3995))+(((-1.0)*x4015))+((r20*x3996*x4007))+(((-1.0)*sj3*x3990*x3998))+(((-1.0)*r11*sj5*x3993))+(((-1.0)*x3990*x4003))+(((-1.0)*cj3*x3990*x3991))+(((-1.0)*cj3*x3991*x4008))+((cj4*x4002)));
evalcond[3]=(((x3988*x4003))+((r10*x3989*x3991))+((x3995*x4008))+((sj3*x3998*x3999))+(((-0.0160344678271334)*r22))+((x3990*x3995))+(((-1.0)*r11*sj3*sj5*x3991))+(((0.0648043305514941)*x3990))+(((-1.0)*x3992*x3993))+(((-1.0)*pz))+x4011+((cj3*x3988*x3991))+((sj3*x3988*x3998))+((x3993*x4004))+((r12*x4014))+((cj4*r11*sj5*x4007))+(((-1.0)*r12*x4006))+(((0.0160344678271334)*x4001))+((x4006*x4009))+(((-0.27144)*x3996*x3997))+(((0.0648043305514941)*x4008))+((sj5*x3991*x3997))+((x3999*x4003)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4016=((0.250000349687704)*r12);
IkReal x4017=((0.749999650312296)*cj4);
IkReal x4018=((0.433012903784321)*sj5);
IkReal x4019=(cj1*r10);
IkReal x4020=(cj1*r22);
IkReal x4021=(cj1*r20);
IkReal x4022=((0.866025201892125)*sj4);
IkReal x4023=(r20*sj1);
IkReal x4024=(r22*sj1);
IkReal x4025=(r10*sj1);
IkReal x4026=(r11*sj1);
IkReal x4027=((0.433012903784321)*cj5);
IkReal x4028=(r21*sj1);
IkReal x4029=(cj1*r21);
IkReal x4030=(cj1*r11);
IkReal x4031=(cj5*sj1*x4022);
IkReal x4032=(cj4*r21*x4027);
if( IKabs(((((-1.0)*sj5*x4022*x4028))+((cj4*x4018*x4023))+((cj4*x4027*x4030))+(((-1.0)*x4018*x4019))+(((0.250000349687704)*x4024))+(((-1.0)*sj5*x4022*x4030))+((x4017*x4024))+(((-1.0)*x4018*x4023))+((cj5*x4019*x4022))+((cj5*x4022*x4023))+(((-1.0)*x4027*x4030))+((cj1*x4016))+((cj1*r12*x4017))+(((-1.0)*x4027*x4028))+((cj4*x4027*x4028))+((cj4*x4018*x4019)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x4022*x4029))+((cj4*x4018*x4021))+(((0.250000349687704)*x4020))+((x4017*x4020))+(((-1.0)*x4018*x4021))+((sj5*x4022*x4026))+(((-1.0)*cj4*x4018*x4025))+(((-1.0)*cj4*x4026*x4027))+((x4018*x4025))+(((-1.0)*cj5*x4022*x4025))+(((-1.0)*r12*sj1*x4017))+(((-1.0)*x4027*x4029))+((cj4*x4027*x4029))+((cj5*x4021*x4022))+(((-1.0)*sj1*x4016))+((x4026*x4027)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x4022*x4028))+((cj4*x4018*x4023))+((cj4*x4027*x4030))+(((-1.0)*x4018*x4019))+(((0.250000349687704)*x4024))+(((-1.0)*sj5*x4022*x4030))+((x4017*x4024))+(((-1.0)*x4018*x4023))+((cj5*x4019*x4022))+((cj5*x4022*x4023))+(((-1.0)*x4027*x4030))+((cj1*x4016))+((cj1*r12*x4017))+(((-1.0)*x4027*x4028))+((cj4*x4027*x4028))+((cj4*x4018*x4019))))+IKsqr(((((-1.0)*sj5*x4022*x4029))+((cj4*x4018*x4021))+(((0.250000349687704)*x4020))+((x4017*x4020))+(((-1.0)*x4018*x4021))+((sj5*x4022*x4026))+(((-1.0)*cj4*x4018*x4025))+(((-1.0)*cj4*x4026*x4027))+((x4018*x4025))+(((-1.0)*cj5*x4022*x4025))+(((-1.0)*r12*sj1*x4017))+(((-1.0)*x4027*x4029))+((cj4*x4027*x4029))+((cj5*x4021*x4022))+(((-1.0)*sj1*x4016))+((x4026*x4027))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj5*x4022*x4028))+((cj4*x4018*x4023))+((cj4*x4027*x4030))+(((-1.0)*x4018*x4019))+(((0.250000349687704)*x4024))+(((-1.0)*sj5*x4022*x4030))+((x4017*x4024))+(((-1.0)*x4018*x4023))+((cj5*x4019*x4022))+((cj5*x4022*x4023))+(((-1.0)*x4027*x4030))+((cj1*x4016))+((cj1*r12*x4017))+(((-1.0)*x4027*x4028))+((cj4*x4027*x4028))+((cj4*x4018*x4019))), ((((-1.0)*sj5*x4022*x4029))+((cj4*x4018*x4021))+(((0.250000349687704)*x4020))+((x4017*x4020))+(((-1.0)*x4018*x4021))+((sj5*x4022*x4026))+(((-1.0)*cj4*x4018*x4025))+(((-1.0)*cj4*x4026*x4027))+((x4018*x4025))+(((-1.0)*cj5*x4022*x4025))+(((-1.0)*r12*sj1*x4017))+(((-1.0)*x4027*x4029))+((cj4*x4027*x4029))+((cj5*x4021*x4022))+(((-1.0)*sj1*x4016))+((x4026*x4027))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4033=IKsin(j2);
IkReal x4034=IKcos(j2);
IkReal x4035=(cj5*r11);
IkReal x4036=((0.433012903784321)*cj4);
IkReal x4037=(r21*sj5);
IkReal x4038=((0.500000349687582)*sj4);
IkReal x4039=((0.749999650312296)*sj3);
IkReal x4040=(cj3*cj4);
IkReal x4041=(cj5*r10);
IkReal x4042=((0.0185150129489311)*sj4);
IkReal x4043=(r20*sj5);
IkReal x4044=(cj4*r22);
IkReal x4045=(r10*sj5);
IkReal x4046=(r22*sj3);
IkReal x4047=(r11*sj5);
IkReal x4048=((0.00925751294893567)*cj4);
IkReal x4049=(cj5*r21);
IkReal x4050=(r12*sj3);
IkReal x4051=(cj4*r12);
IkReal x4052=(cj5*r20);
IkReal x4053=((0.866025201892125)*sj4);
IkReal x4054=(cj1*x4034);
IkReal x4055=(sj1*x4033);
IkReal x4056=(cj1*x4033);
IkReal x4057=((0.250000349687704)*cj4*sj3);
IkReal x4058=(sj1*x4034);
IkReal x4059=(cj3*x4053);
IkReal x4060=(x4055+x4054);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x4036*x4049))+(((-1.0)*x4036*x4043))+(((-1.0)*x4052*x4053))+((x4037*x4053))+(((-0.749999650312296)*x4044))+x4060+(((0.433012903784321)*x4043))+(((0.433012903784321)*x4049)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x4036*x4045))+(((-1.0)*x4041*x4053))+(((-0.749999650312296)*x4051))+x4056+(((-1.0)*x4035*x4036))+(((-1.0)*x4058))+((x4047*x4053))+(((0.433012903784321)*x4045))+(((0.433012903784321)*x4035)));
evalcond[2]=((((-0.27144)*x4054))+(((-0.27144)*x4055))+(((0.0160344678271334)*x4044))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x4043*x4048))+(((-1.0)*pz))+(((0.0648043305514941)*x4049))+(((0.0648043305514941)*x4043))+((x4042*x4052))+(((-1.0)*x4037*x4042))+((x4048*x4049)));
evalcond[3]=((((-0.27144)*x4056))+(((0.27144)*x4058))+((x4041*x4042))+((x4035*x4048))+((x4045*x4048))+(((0.0160344678271334)*x4051))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0648043305514941)*x4045))+(((-1.0)*x4042*x4047))+(((0.0648043305514941)*x4035)));
evalcond[4]=((((-0.433012903784321)*x4050))+((x4040*x4047))+((x4036*x4050))+((x4035*x4039))+((x4045*x4057))+((x4039*x4045))+(((-1.0)*sj3*x4038*x4047))+((cj3*x4035*x4038))+x4060+(((-1.0)*x4040*x4041))+((r12*x4059))+((cj3*x4038*x4045))+((sj3*x4038*x4041))+((x4035*x4057)));
evalcond[5]=((((-0.433012903784321)*x4046))+((x4037*x4040))+((x4049*x4057))+((x4036*x4046))+(((-1.0)*x4040*x4052))+((x4039*x4043))+((x4039*x4049))+((x4043*x4057))+x4058+((cj3*x4038*x4043))+((cj3*x4038*x4049))+(((-1.0)*x4056))+((r22*x4059))+(((-1.0)*sj3*x4037*x4038))+((sj3*x4038*x4052)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4061=((0.528192360616262)*sj4);
IkReal x4062=((0.26409636501044)*cj4);
IkReal x4063=(r20*sj5);
IkReal x4064=((0.444735007694415)*cj5);
IkReal x4065=((0.457427895740576)*cj4);
IkReal x4066=(r10*sj5);
if( IKabs((((cj5*r10*x4061))+(((-0.444735007694415)*x4066))+(((-1.0)*r11*x4064))+((cj5*r11*x4062))+((r12*x4065))+((x4062*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4061))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4061))+(((-0.444735007694415)*x4063))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4064))+((cj5*r21*x4062))+((x4062*x4063))+(((-1.0)*r21*sj5*x4061))+((r22*x4065))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r10*x4061))+(((-0.444735007694415)*x4066))+(((-1.0)*r11*x4064))+((cj5*r11*x4062))+((r12*x4065))+((x4062*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4061))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x4061))+(((-0.444735007694415)*x4063))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4064))+((cj5*r21*x4062))+((x4062*x4063))+(((-1.0)*r21*sj5*x4061))+((r22*x4065))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r10*x4061))+(((-0.444735007694415)*x4066))+(((-1.0)*r11*x4064))+((cj5*r11*x4062))+((r12*x4065))+((x4062*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4061))+(((2.4390243902439)*py))), (((cj5*r20*x4061))+(((-0.444735007694415)*x4063))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4064))+((cj5*r21*x4062))+((x4062*x4063))+(((-1.0)*r21*sj5*x4061))+((r22*x4065))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4067=(cj5*sj4);
IkReal x4068=((0.135720094919197)*sj3);
IkReal x4069=(cj5*r11);
IkReal x4070=(cj5*r21);
IkReal x4071=((0.20357990508077)*sj3);
IkReal x4072=(r20*sj5);
IkReal x4073=((0.00925751294893567)*cj4);
IkReal x4074=(cj4*r10);
IkReal x4075=((0.27144)*cj3);
IkReal x4076=((0.10827950965428)*cj4);
IkReal x4077=((0.117537022603216)*sj3);
IkReal x4078=(cj4*r22);
IkReal x4079=(cj3*sj4);
IkReal x4080=(cj4*r12);
IkReal x4081=(r10*sj5);
IkReal x4082=(cj4*sj5);
IkReal x4083=((0.135720094919197)*cj3);
IkReal x4084=((0.41)*(IKcos(j1)));
IkReal x4085=((0.41)*(IKsin(j1)));
IkReal x4086=(r11*sj4*sj5);
IkReal x4087=((0.0678600949192303)*cj4*sj3);
IkReal x4088=(r21*sj4*sj5);
evalcond[0]=((((-1.0)*x4085))+(((0.216558867852667)*r10*x4067))+(((-0.216558867852667)*x4086))+(((0.10827950965428)*sj5*x4074))+(((-0.18234135315471)*x4069))+(((0.187545437253636)*x4080))+py+((x4069*x4076))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x4081)));
evalcond[1]=((((0.187545437253636)*x4078))+(((-0.18234135315471)*x4070))+(((-0.18234135315471)*x4072))+(((-1.0)*x4084))+((x4072*x4076))+(((-0.216558867852667)*x4088))+((x4070*x4076))+(((0.216558867852667)*r20*x4067))+pz+(((0.0838945627463637)*r22)));
evalcond[2]=(((x4071*x4081))+(((-1.0)*x4070*x4073))+(((-1.0)*x4068*x4086))+(((-0.0648043305514941)*x4070))+(((-0.0648043305514941)*x4072))+((r10*x4067*x4068))+((r11*x4067*x4083))+(((0.0185150129489311)*x4088))+(((-1.0)*x4084))+(((-0.0185150129489311)*r20*x4067))+((r11*x4075*x4082))+(((0.135720094919197)*x4079*x4081))+(((-1.0)*cj5*x4074*x4075))+(((0.235073880801598)*r12*x4079))+pz+((x4069*x4087))+(((-1.0)*r12*x4077))+(((0.0160344678271334)*r22))+(((-0.0160344678271334)*x4078))+(((0.0678600949192303)*sj3*sj5*x4074))+((x4069*x4071))+((x4077*x4080))+(((-1.0)*x4072*x4073)));
evalcond[3]=(((x4070*x4087))+(((-1.0)*x4068*x4088))+(((-1.0)*r22*x4077))+(((0.0648043305514941)*x4081))+((x4077*x4078))+((x4072*x4087))+(((-0.0185150129489311)*x4086))+(((0.0185150129489311)*r10*x4067))+(((-0.0160344678271334)*r12))+(((-1.0)*cj4*cj5*r20*x4075))+((r20*x4067*x4068))+(((0.0648043305514941)*x4069))+((x4070*x4071))+((x4071*x4072))+(((-1.0)*py))+x4085+((r21*x4075*x4082))+(((0.135720094919197)*x4072*x4079))+(((0.235073880801598)*r22*x4079))+((r21*x4067*x4083))+(((0.0160344678271334)*x4080))+((x4069*x4073))+((x4073*x4081)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4089=((0.250000349687704)*r12);
IkReal x4090=((0.749999650312296)*cj4);
IkReal x4091=(cj1*r22);
IkReal x4092=((0.866025201892125)*sj4);
IkReal x4093=(cj1*r20);
IkReal x4094=(sj1*sj5);
IkReal x4095=((0.433012903784321)*r20);
IkReal x4096=((0.433012903784321)*sj5);
IkReal x4097=(cj1*r10);
IkReal x4098=(r22*sj1);
IkReal x4099=((0.433012903784321)*r10);
IkReal x4100=((0.433012903784321)*cj5);
IkReal x4101=(cj1*r21);
IkReal x4102=(cj1*r11);
IkReal x4103=(r11*sj1);
IkReal x4104=(cj1*cj4*x4096);
IkReal x4105=(cj5*sj1*x4092);
IkReal x4106=(cj4*r21*x4100);
if( IKabs(((((-1.0)*cj5*x4092*x4097))+((cj4*x4094*x4095))+(((-1.0)*cj4*x4096*x4097))+((x4100*x4102))+((r20*x4105))+(((-1.0)*r21*x4092*x4094))+(((-1.0)*cj1*x4089))+(((-1.0)*cj1*r12*x4090))+(((-1.0)*r21*sj1*x4100))+((sj1*x4106))+(((-1.0)*cj4*x4100*x4102))+((x4090*x4098))+(((0.250000349687704)*x4098))+((sj5*x4092*x4102))+((x4096*x4097))+(((-1.0)*x4094*x4095)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4100*x4103))+((cj4*x4100*x4101))+(((-1.0)*r11*x4092*x4094))+((cj4*x4094*x4099))+(((-1.0)*sj5*x4092*x4101))+((cj5*x4092*x4093))+(((-1.0)*x4093*x4096))+((r12*sj1*x4090))+((cj4*x4093*x4096))+((x4090*x4091))+(((0.250000349687704)*x4091))+((sj1*x4089))+(((-1.0)*x4100*x4103))+(((-1.0)*x4100*x4101))+((r10*x4105))+(((-1.0)*x4094*x4099)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj5*x4092*x4097))+((cj4*x4094*x4095))+(((-1.0)*cj4*x4096*x4097))+((x4100*x4102))+((r20*x4105))+(((-1.0)*r21*x4092*x4094))+(((-1.0)*cj1*x4089))+(((-1.0)*cj1*r12*x4090))+(((-1.0)*r21*sj1*x4100))+((sj1*x4106))+(((-1.0)*cj4*x4100*x4102))+((x4090*x4098))+(((0.250000349687704)*x4098))+((sj5*x4092*x4102))+((x4096*x4097))+(((-1.0)*x4094*x4095))))+IKsqr((((cj4*x4100*x4103))+((cj4*x4100*x4101))+(((-1.0)*r11*x4092*x4094))+((cj4*x4094*x4099))+(((-1.0)*sj5*x4092*x4101))+((cj5*x4092*x4093))+(((-1.0)*x4093*x4096))+((r12*sj1*x4090))+((cj4*x4093*x4096))+((x4090*x4091))+(((0.250000349687704)*x4091))+((sj1*x4089))+(((-1.0)*x4100*x4103))+(((-1.0)*x4100*x4101))+((r10*x4105))+(((-1.0)*x4094*x4099))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj5*x4092*x4097))+((cj4*x4094*x4095))+(((-1.0)*cj4*x4096*x4097))+((x4100*x4102))+((r20*x4105))+(((-1.0)*r21*x4092*x4094))+(((-1.0)*cj1*x4089))+(((-1.0)*cj1*r12*x4090))+(((-1.0)*r21*sj1*x4100))+((sj1*x4106))+(((-1.0)*cj4*x4100*x4102))+((x4090*x4098))+(((0.250000349687704)*x4098))+((sj5*x4092*x4102))+((x4096*x4097))+(((-1.0)*x4094*x4095))), (((cj4*x4100*x4103))+((cj4*x4100*x4101))+(((-1.0)*r11*x4092*x4094))+((cj4*x4094*x4099))+(((-1.0)*sj5*x4092*x4101))+((cj5*x4092*x4093))+(((-1.0)*x4093*x4096))+((r12*sj1*x4090))+((cj4*x4093*x4096))+((x4090*x4091))+(((0.250000349687704)*x4091))+((sj1*x4089))+(((-1.0)*x4100*x4103))+(((-1.0)*x4100*x4101))+((r10*x4105))+(((-1.0)*x4094*x4099))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4107=IKcos(j2);
IkReal x4108=IKsin(j2);
IkReal x4109=(cj5*r11);
IkReal x4110=((0.433012903784321)*cj4);
IkReal x4111=(r21*sj5);
IkReal x4112=((0.500000349687582)*sj4);
IkReal x4113=((0.749999650312296)*sj3);
IkReal x4114=(cj3*cj4);
IkReal x4115=(cj5*r10);
IkReal x4116=((0.0185150129489311)*sj4);
IkReal x4117=(r20*sj5);
IkReal x4118=(cj4*r22);
IkReal x4119=(r10*sj5);
IkReal x4120=(r12*sj3);
IkReal x4121=(r11*sj5);
IkReal x4122=(r22*sj3);
IkReal x4123=((0.27144)*sj1);
IkReal x4124=((0.00925751294893567)*cj4);
IkReal x4125=(cj5*r20);
IkReal x4126=(cj5*r21);
IkReal x4127=(cj4*r12);
IkReal x4128=((0.866025201892125)*sj4);
IkReal x4129=(sj1*x4107);
IkReal x4130=(cj1*x4107);
IkReal x4131=(cj1*x4108);
IkReal x4132=((0.250000349687704)*cj4*sj3);
IkReal x4133=(cj3*x4128);
IkReal x4134=(sj1*x4108);
IkReal x4135=((1.0)*x4131);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x4117))+(((0.433012903784321)*x4126))+(((-1.0)*x4110*x4117))+(((-1.0)*x4110*x4126))+(((-0.749999650312296)*x4118))+x4130+x4134+((x4111*x4128))+(((-1.0)*x4125*x4128)));
evalcond[1]=((((-1.0)*x4109*x4110))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x4109))+(((0.433012903784321)*x4119))+(((-1.0)*x4110*x4119))+(((-0.749999650312296)*x4127))+x4129+((x4121*x4128))+(((-1.0)*x4135))+(((-1.0)*x4115*x4128)));
evalcond[2]=((((-1.0)*x4111*x4116))+(((0.0160344678271334)*x4118))+((x4116*x4125))+(((0.41)*cj1))+(((0.0648043305514941)*x4117))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4126))+(((-1.0)*pz))+((x4124*x4126))+((x4117*x4124))+(((-0.27144)*x4130))+(((-1.0)*x4108*x4123)));
evalcond[3]=((((0.0160344678271334)*x4127))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x4109*x4124))+(((0.0648043305514941)*x4119))+(((0.0648043305514941)*x4109))+(((0.27144)*x4131))+(((-1.0)*x4116*x4121))+(((-1.0)*py))+((x4115*x4116))+((x4119*x4124))+(((-1.0)*x4107*x4123)));
evalcond[4]=(((sj3*x4112*x4125))+(((-1.0)*x4114*x4125))+((x4117*x4132))+((r22*x4133))+(((-0.433012903784321)*x4122))+x4129+((x4126*x4132))+(((-1.0)*x4135))+((x4111*x4114))+((x4113*x4126))+((x4113*x4117))+((x4110*x4122))+((cj3*x4112*x4117))+((cj3*x4112*x4126))+(((-1.0)*sj3*x4111*x4112)));
evalcond[5]=(((sj3*x4112*x4115))+(((-1.0)*sj3*x4112*x4121))+(((-1.0)*x4114*x4115))+((cj3*x4109*x4112))+((x4109*x4113))+(((-0.433012903784321)*x4120))+(((-1.0)*x4134))+(((-1.0)*x4130))+((x4119*x4132))+((r12*x4133))+((x4114*x4121))+((x4109*x4132))+((x4113*x4119))+((x4110*x4120))+((cj3*x4112*x4119)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4136=((0.26409636501044)*cj4);
IkReal x4137=(r20*sj5);
IkReal x4138=(cj5*r21);
IkReal x4139=((0.457427895740576)*cj4);
IkReal x4140=(r00*sj5);
IkReal x4141=((0.528192360616262)*sj4);
IkReal x4142=(cj5*r01);
if( IKabs(((((0.444735007694415)*x4140))+(((0.444735007694415)*x4142))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4141))+(((-1.0)*r02*x4139))+(((-1.0)*x4136*x4142))+(((-1.0)*x4136*x4140))+((r01*sj5*x4141)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4136*x4137))+((x4136*x4138))+(((0.204620884747229)*r22))+((r22*x4139))+((cj5*r20*x4141))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4137))+(((-1.0)*r21*sj5*x4141))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.444735007694415)*x4140))+(((0.444735007694415)*x4142))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4141))+(((-1.0)*r02*x4139))+(((-1.0)*x4136*x4142))+(((-1.0)*x4136*x4140))+((r01*sj5*x4141))))+IKsqr((((x4136*x4137))+((x4136*x4138))+(((0.204620884747229)*r22))+((r22*x4139))+((cj5*r20*x4141))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4137))+(((-1.0)*r21*sj5*x4141))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.444735007694415)*x4140))+(((0.444735007694415)*x4142))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4141))+(((-1.0)*r02*x4139))+(((-1.0)*x4136*x4142))+(((-1.0)*x4136*x4140))+((r01*sj5*x4141))), (((x4136*x4137))+((x4136*x4138))+(((0.204620884747229)*r22))+((r22*x4139))+((cj5*r20*x4141))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4137))+(((-1.0)*r21*sj5*x4141))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4143=((1.0)*px);
IkReal x4144=((0.187545437253636)*cj4);
IkReal x4145=(r20*sj5);
IkReal x4146=(r01*sj3);
IkReal x4147=(cj5*r21);
IkReal x4148=(cj3*r00);
IkReal x4149=((0.0185150129489311)*sj4);
IkReal x4150=(r21*sj5);
IkReal x4151=((0.20357990508077)*sj3);
IkReal x4152=(cj5*sj4);
IkReal x4153=((0.135720094919197)*sj3);
IkReal x4154=(cj4*cj5);
IkReal x4155=(r00*sj5);
IkReal x4156=((0.00925751294893567)*cj4);
IkReal x4157=((0.10827950965428)*cj4);
IkReal x4158=(cj4*r22);
IkReal x4159=((0.117537022603216)*sj3);
IkReal x4160=(cj5*r01);
IkReal x4161=((0.135720094919197)*cj3);
IkReal x4162=(r01*sj5);
IkReal x4163=((0.216558867852667)*sj4);
IkReal x4164=(cj4*r02);
IkReal x4165=((0.27144)*cj3);
IkReal x4166=((0.41)*(IKsin(j1)));
IkReal x4167=((0.41)*(IKcos(j1)));
IkReal x4168=((0.135720094919197)*sj4*sj5);
IkReal x4169=((0.0678600949192303)*cj4*sj3);
IkReal x4170=((0.235073880801598)*cj3*sj4);
IkReal x4171=(x4166+x4143);
evalcond[0]=(((x4145*x4157))+(((-1.0)*x4150*x4163))+(((-1.0)*x4167))+(((-0.18234135315471)*x4145))+(((-0.18234135315471)*x4147))+((r22*x4144))+(((0.216558867852667)*r20*x4152))+pz+((x4147*x4157))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*r00*x4152))+(((-1.0)*x4171))+(((-0.10827950965428)*r01*x4154))+(((-1.0)*x4155*x4157))+(((-1.0)*r02*x4144))+(((-0.0838945627463637)*r02))+(((0.18234135315471)*x4155))+(((0.18234135315471)*x4160))+((x4162*x4163)));
evalcond[2]=((((-1.0)*cj4*x4150*x4165))+(((0.0648043305514941)*x4155))+(((-1.0)*x4171))+(((-1.0)*x4145*x4169))+((cj5*r00*x4149))+(((-0.0160344678271334)*r02))+((x4155*x4156))+(((-1.0)*x4147*x4151))+(((-1.0)*sj4*x4145*x4161))+(((0.0648043305514941)*x4160))+(((-1.0)*x4147*x4169))+(((-1.0)*r20*x4152*x4153))+((sj4*x4150*x4153))+((r22*x4159))+(((0.0160344678271334)*x4164))+(((0.00925751294893567)*r01*x4154))+(((-1.0)*x4145*x4151))+(((-1.0)*sj4*x4147*x4161))+(((-1.0)*r22*x4170))+((r20*x4154*x4165))+(((-1.0)*x4158*x4159))+(((-1.0)*x4149*x4162)));
evalcond[3]=(((x4145*x4156))+((r00*x4152*x4153))+(((-0.27144)*x4148*x4154))+((x4148*x4168))+(((0.0648043305514941)*x4145))+(((0.0648043305514941)*x4147))+(((-1.0)*r02*x4159))+(((-1.0)*x4146*x4168))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.20357990508077)*cj5*x4146))+((cj5*r20*x4149))+x4167+((x4151*x4155))+((cj4*x4162*x4165))+((x4159*x4164))+((r01*x4152*x4161))+((x4155*x4169))+(((0.0160344678271334)*x4158))+(((-1.0)*x4149*x4150))+((x4147*x4156))+(((0.0678600949192303)*x4146*x4154))+((r02*x4170)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4172=((0.250000349687704)*sj1);
IkReal x4173=(cj1*cj4);
IkReal x4174=((0.749999650312296)*r22);
IkReal x4175=(cj4*sj1);
IkReal x4176=((0.749999650312296)*r02);
IkReal x4177=((0.250000349687704)*cj1);
IkReal x4178=((0.433012903784321)*r00*sj5);
IkReal x4179=((0.433012903784321)*r20*sj5);
IkReal x4180=((0.433012903784321)*cj5*r01);
IkReal x4181=((0.433012903784321)*cj5*r21);
IkReal x4182=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4183=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4184=((0.866025201892125)*r01*sj4*sj5);
IkReal x4185=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4180))+((x4175*x4179))+(((-1.0)*cj1*x4178))+((r20*x4182))+((x4173*x4176))+((x4173*x4178))+((r22*x4172))+((x4173*x4180))+((r00*x4183))+((x4175*x4181))+(((-1.0)*sj1*x4179))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4181))+((r02*x4177))+((x4174*x4175)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+(((-1.0)*cj1*x4179))+((r20*x4183))+((x4173*x4174))+((x4173*x4179))+(((-1.0)*r00*x4182))+((r22*x4177))+(((-1.0)*x4175*x4180))+((sj1*x4184))+((sj1*x4180))+((x4173*x4181))+((sj1*x4178))+(((-1.0)*x4175*x4176))+(((-1.0)*x4175*x4178))+(((-1.0)*r02*x4172)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4180))+((x4175*x4179))+(((-1.0)*cj1*x4178))+((r20*x4182))+((x4173*x4176))+((x4173*x4178))+((r22*x4172))+((x4173*x4180))+((r00*x4183))+((x4175*x4181))+(((-1.0)*sj1*x4179))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4181))+((r02*x4177))+((x4174*x4175))))+IKsqr(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+(((-1.0)*cj1*x4179))+((r20*x4183))+((x4173*x4174))+((x4173*x4179))+(((-1.0)*r00*x4182))+((r22*x4177))+(((-1.0)*x4175*x4180))+((sj1*x4184))+((sj1*x4180))+((x4173*x4181))+((sj1*x4178))+(((-1.0)*x4175*x4176))+(((-1.0)*x4175*x4178))+(((-1.0)*r02*x4172))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x4184))+(((-1.0)*cj1*x4180))+((x4175*x4179))+(((-1.0)*cj1*x4178))+((r20*x4182))+((x4173*x4176))+((x4173*x4178))+((r22*x4172))+((x4173*x4180))+((r00*x4183))+((x4175*x4181))+(((-1.0)*sj1*x4179))+(((-1.0)*sj1*x4185))+(((-1.0)*sj1*x4181))+((r02*x4177))+((x4174*x4175))), ((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+(((-1.0)*cj1*x4179))+((r20*x4183))+((x4173*x4174))+((x4173*x4179))+(((-1.0)*r00*x4182))+((r22*x4177))+(((-1.0)*x4175*x4180))+((sj1*x4184))+((sj1*x4180))+((x4173*x4181))+((sj1*x4178))+(((-1.0)*x4175*x4176))+(((-1.0)*x4175*x4178))+(((-1.0)*r02*x4172))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4186=IKsin(j2);
IkReal x4187=IKcos(j2);
IkReal x4188=((0.749999650312296)*sj3);
IkReal x4189=(cj5*r01);
IkReal x4190=(r00*sj5);
IkReal x4191=(cj4*cj5);
IkReal x4192=((1.0)*cj3);
IkReal x4193=(r21*sj3);
IkReal x4194=(cj4*sj5);
IkReal x4195=(cj3*r21);
IkReal x4196=((0.500000349687582)*sj4);
IkReal x4197=((0.433012903784321)*r20);
IkReal x4198=(cj4*r22);
IkReal x4199=((0.433012903784321)*sj3);
IkReal x4200=((0.433012903784321)*cj4);
IkReal x4201=(r01*sj5);
IkReal x4202=(r20*sj5);
IkReal x4203=((0.0160344678271334)*r02);
IkReal x4204=(cj4*r02);
IkReal x4205=((0.00925751294893567)*cj4);
IkReal x4206=((0.0185150129489311)*sj4);
IkReal x4207=(r21*sj5);
IkReal x4208=(cj5*r21);
IkReal x4209=((0.866025201892125)*sj4);
IkReal x4210=(cj5*r20);
IkReal x4211=(cj5*r00);
IkReal x4212=((0.250000349687704)*sj3);
IkReal x4213=(cj1*x4187);
IkReal x4214=(sj1*x4186);
IkReal x4215=(cj1*x4186);
IkReal x4216=(sj1*x4187);
IkReal x4217=(x4214+x4213);
evalcond[0]=(((sj5*x4197))+(((-1.0)*x4194*x4197))+(((-0.749999650312296)*x4198))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x4208))+(((-0.433012903784321)*r21*x4191))+x4217+((x4207*x4209))+(((-1.0)*x4209*x4210)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4190*x4200))+((x4201*x4209))+(((-0.749999650312296)*x4204))+x4215+(((-1.0)*x4216))+(((0.433012903784321)*x4190))+(((0.433012903784321)*x4189))+(((-1.0)*x4189*x4200))+(((-1.0)*x4209*x4211)));
evalcond[2]=((((0.0160344678271334)*x4198))+(((0.0648043305514941)*x4202))+(((0.0648043305514941)*x4208))+(((-1.0)*x4206*x4207))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x4206*x4210))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x4191))+(((0.00925751294893567)*r20*x4194))+(((-0.27144)*x4214))+(((-0.27144)*x4213)));
evalcond[3]=(((cj4*x4203))+(((-1.0)*x4201*x4206))+(((0.27144)*x4216))+(((-1.0)*x4203))+((x4206*x4211))+((x4189*x4205))+(((-0.41)*sj1))+(((-1.0)*px))+(((-0.27144)*x4215))+((x4190*x4205))+(((0.0648043305514941)*x4190))+(((0.0648043305514941)*x4189)));
evalcond[4]=(((x4199*x4204))+((cj4*x4189*x4212))+((sj3*x4196*x4211))+(((-1.0)*r00*x4191*x4192))+(((-1.0)*r02*x4199))+((cj3*r02*x4209))+((cj3*x4190*x4196))+(((-1.0)*sj3*x4196*x4201))+((x4188*x4189))+x4217+((x4188*x4190))+((cj4*x4190*x4212))+((cj3*x4189*x4196))+((cj3*r01*x4194)));
evalcond[5]=(((cj3*r22*x4209))+(((-1.0)*r20*x4191*x4192))+((sj3*x4196*x4210))+((cj5*x4195*x4196))+((r20*x4194*x4212))+(((0.250000349687704)*x4191*x4193))+((x4188*x4208))+((x4188*x4202))+x4216+((x4194*x4195))+((cj3*x4196*x4202))+(((-1.0)*r22*x4199))+(((-1.0)*x4215))+(((-1.0)*sj5*x4193*x4196))+((x4198*x4199)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4218=(cj5*r21);
IkReal x4219=((0.26409636501044)*cj4);
IkReal x4220=((0.457427895740576)*cj4);
IkReal x4221=((0.528192360616262)*sj4);
IkReal x4222=(cj5*r01);
IkReal x4223=((0.444735007694415)*sj5);
if( IKabs(((((-0.444735007694415)*x4222))+((cj5*r00*x4221))+((r02*x4220))+(((-1.0)*r00*x4223))+(((0.204620884747229)*r02))+((x4219*x4222))+(((-1.0)*r01*sj5*x4221))+((r00*sj5*x4219))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4218*x4219))+(((0.204620884747229)*r22))+((cj5*r20*x4221))+((r22*x4220))+((r20*sj5*x4219))+(((-0.444735007694415)*x4218))+(((-1.0)*r21*sj5*x4221))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4223)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.444735007694415)*x4222))+((cj5*r00*x4221))+((r02*x4220))+(((-1.0)*r00*x4223))+(((0.204620884747229)*r02))+((x4219*x4222))+(((-1.0)*r01*sj5*x4221))+((r00*sj5*x4219))+(((2.4390243902439)*px))))+IKsqr((((x4218*x4219))+(((0.204620884747229)*r22))+((cj5*r20*x4221))+((r22*x4220))+((r20*sj5*x4219))+(((-0.444735007694415)*x4218))+(((-1.0)*r21*sj5*x4221))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4223))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-0.444735007694415)*x4222))+((cj5*r00*x4221))+((r02*x4220))+(((-1.0)*r00*x4223))+(((0.204620884747229)*r02))+((x4219*x4222))+(((-1.0)*r01*sj5*x4221))+((r00*sj5*x4219))+(((2.4390243902439)*px))), (((x4218*x4219))+(((0.204620884747229)*r22))+((cj5*r20*x4221))+((r22*x4220))+((r20*sj5*x4219))+(((-0.444735007694415)*x4218))+(((-1.0)*r21*sj5*x4221))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4223))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4224=((0.187545437253636)*cj4);
IkReal x4225=(cj5*r20);
IkReal x4226=(r01*sj5);
IkReal x4227=(cj5*r21);
IkReal x4228=(cj3*r00);
IkReal x4229=(sj4*sj5);
IkReal x4230=((0.20357990508077)*sj3);
IkReal x4231=(r20*sj5);
IkReal x4232=(cj4*cj5);
IkReal x4233=((0.00925751294893567)*cj4);
IkReal x4234=((0.117537022603216)*sj3);
IkReal x4235=((0.10827950965428)*cj4);
IkReal x4236=(r00*sj5);
IkReal x4237=(cj4*r22);
IkReal x4238=(r21*sj5);
IkReal x4239=((0.216558867852667)*sj4);
IkReal x4240=((0.0185150129489311)*sj4);
IkReal x4241=(cj3*sj4);
IkReal x4242=(cj4*r02);
IkReal x4243=(cj5*r01);
IkReal x4244=((0.41)*(IKcos(j1)));
IkReal x4245=((0.41)*(IKsin(j1)));
IkReal x4246=((0.135720094919197)*sj3*sj4);
IkReal x4247=((0.0678600949192303)*cj4*sj3);
IkReal x4248=(cj5*r00*sj4);
IkReal x4249=((0.27144)*cj3*cj4);
evalcond[0]=(((x4235*x4236))+(((-1.0)*x4226*x4239))+((cj5*r00*x4239))+(((-1.0)*x4245))+((r02*x4224))+px+(((-0.18234135315471)*x4236))+(((0.10827950965428)*r01*x4232))+(((-0.18234135315471)*x4243))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x4231*x4235))+(((-1.0)*x4244))+((r22*x4224))+((x4227*x4235))+pz+(((-0.216558867852667)*r21*x4229))+(((-0.18234135315471)*x4231))+(((-0.18234135315471)*x4227))+((x4225*x4239))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*x4225*x4240))+(((-1.0)*x4231*x4233))+(((-0.27144)*x4228*x4232))+((x4230*x4236))+(((-1.0)*x4227*x4233))+((cj5*r00*x4246))+((x4230*x4243))+(((0.0185150129489311)*r21*x4229))+((x4236*x4247))+(((-1.0)*x4244))+(((0.235073880801598)*r02*x4241))+(((0.135720094919197)*x4228*x4229))+(((0.135720094919197)*x4241*x4243))+((x4226*x4249))+(((-1.0)*r02*x4234))+(((-0.0648043305514941)*x4227))+(((-0.0648043305514941)*x4231))+pz+(((0.0160344678271334)*r22))+((x4234*x4242))+(((-1.0)*x4226*x4246))+(((0.0678600949192303)*r01*sj3*x4232))+(((-0.0160344678271334)*x4237)));
evalcond[3]=((((-1.0)*x4225*x4249))+((x4230*x4231))+((x4231*x4247))+((cj5*r00*x4240))+(((0.0648043305514941)*x4236))+(((0.0648043305514941)*x4243))+(((-0.0160344678271334)*r02))+(((0.0160344678271334)*x4242))+((x4238*x4249))+(((0.135720094919197)*x4227*x4241))+((x4227*x4247))+((x4227*x4230))+(((-1.0)*px))+(((-1.0)*r22*x4234))+((x4225*x4246))+(((-0.135720094919197)*r21*sj3*x4229))+x4245+((x4233*x4236))+(((-1.0)*x4226*x4240))+(((0.235073880801598)*r22*x4241))+(((0.135720094919197)*cj3*r20*x4229))+(((0.00925751294893567)*r01*x4232))+((x4234*x4237)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4250=(r02*sj1);
IkReal x4251=(cj1*cj4);
IkReal x4252=((0.749999650312296)*r22);
IkReal x4253=(cj4*sj1);
IkReal x4254=((0.250000349687704)*r22);
IkReal x4255=((0.433012903784321)*r00*sj5);
IkReal x4256=((0.433012903784321)*r20*sj5);
IkReal x4257=((0.433012903784321)*cj5*r01);
IkReal x4258=((0.433012903784321)*cj5*r21);
IkReal x4259=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4260=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4261=((0.866025201892125)*r01*sj4*sj5);
IkReal x4262=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+((x4253*x4256))+((x4253*x4258))+((r20*x4259))+(((-1.0)*r00*x4260))+(((-1.0)*x4251*x4255))+(((-1.0)*x4251*x4257))+(((-0.749999650312296)*r02*x4251))+((sj1*x4254))+((x4252*x4253))+(((-0.250000349687704)*cj1*r02))+((cj1*x4255))+((cj1*x4257))+((cj1*x4261)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4255))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4250))+(((0.250000349687704)*x4250))+((x4253*x4255))+((x4253*x4257))+(((-1.0)*cj1*x4258))+(((-1.0)*cj1*x4256))+((r00*x4259))+((x4251*x4252))+((x4251*x4256))+((x4251*x4258))+((r20*x4260))+((cj1*x4254))+(((-1.0)*cj1*x4262)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+((x4253*x4256))+((x4253*x4258))+((r20*x4259))+(((-1.0)*r00*x4260))+(((-1.0)*x4251*x4255))+(((-1.0)*x4251*x4257))+(((-0.749999650312296)*r02*x4251))+((sj1*x4254))+((x4252*x4253))+(((-0.250000349687704)*cj1*r02))+((cj1*x4255))+((cj1*x4257))+((cj1*x4261))))+IKsqr(((((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4255))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4250))+(((0.250000349687704)*x4250))+((x4253*x4255))+((x4253*x4257))+(((-1.0)*cj1*x4258))+(((-1.0)*cj1*x4256))+((r00*x4259))+((x4251*x4252))+((x4251*x4256))+((x4251*x4258))+((r20*x4260))+((cj1*x4254))+(((-1.0)*cj1*x4262))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+((x4253*x4256))+((x4253*x4258))+((r20*x4259))+(((-1.0)*r00*x4260))+(((-1.0)*x4251*x4255))+(((-1.0)*x4251*x4257))+(((-0.749999650312296)*r02*x4251))+((sj1*x4254))+((x4252*x4253))+(((-0.250000349687704)*cj1*r02))+((cj1*x4255))+((cj1*x4257))+((cj1*x4261))), ((((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4255))+(((-1.0)*sj1*x4261))+(((0.749999650312296)*cj4*x4250))+(((0.250000349687704)*x4250))+((x4253*x4255))+((x4253*x4257))+(((-1.0)*cj1*x4258))+(((-1.0)*cj1*x4256))+((r00*x4259))+((x4251*x4252))+((x4251*x4256))+((x4251*x4258))+((r20*x4260))+((cj1*x4254))+(((-1.0)*cj1*x4262))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4263=IKcos(j2);
IkReal x4264=IKsin(j2);
IkReal x4265=((0.433012903784321)*sj3);
IkReal x4266=((0.749999650312296)*sj3);
IkReal x4267=(r00*sj5);
IkReal x4268=(cj4*cj5);
IkReal x4269=((1.0)*cj3);
IkReal x4270=(cj5*r01);
IkReal x4271=(r21*sj3);
IkReal x4272=(cj4*sj5);
IkReal x4273=(cj3*r21);
IkReal x4274=((0.500000349687582)*sj4);
IkReal x4275=((0.433012903784321)*r20);
IkReal x4276=(cj4*r22);
IkReal x4277=(r20*sj5);
IkReal x4278=((0.0160344678271334)*r02);
IkReal x4279=(cj4*r02);
IkReal x4280=(r01*sj5);
IkReal x4281=(cj5*r00);
IkReal x4282=((0.0185150129489311)*sj4);
IkReal x4283=(r21*sj5);
IkReal x4284=(cj5*r21);
IkReal x4285=((0.866025201892125)*sj4);
IkReal x4286=(cj5*r20);
IkReal x4287=((0.250000349687704)*sj3);
IkReal x4288=(sj1*x4263);
IkReal x4289=(cj1*x4263);
IkReal x4290=(sj1*x4264);
IkReal x4291=(cj1*x4264);
IkReal x4292=((1.0)*x4291);
evalcond[0]=(((x4283*x4285))+(((-0.433012903784321)*r21*x4268))+(((-0.250000349687704)*r22))+((sj5*x4275))+(((0.433012903784321)*x4284))+(((-1.0)*x4272*x4275))+(((-0.749999650312296)*x4276))+x4290+x4289+(((-1.0)*x4285*x4286)));
evalcond[1]=((((-0.250000349687704)*r02))+((x4280*x4285))+(((-0.433012903784321)*r01*x4268))+(((-0.433012903784321)*cj4*x4267))+(((0.433012903784321)*x4267))+(((-1.0)*x4292))+(((0.433012903784321)*x4270))+(((-0.749999650312296)*x4279))+x4288+(((-1.0)*x4281*x4285)));
evalcond[2]=(((x4282*x4286))+(((-0.27144)*x4290))+(((-1.0)*x4282*x4283))+(((0.41)*cj1))+(((0.00925751294893567)*r21*x4268))+(((0.00925751294893567)*r20*x4272))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4277))+(((0.0648043305514941)*x4284))+(((-1.0)*pz))+(((-0.27144)*x4289))+(((0.0160344678271334)*x4276)));
evalcond[3]=((((0.00925751294893567)*cj4*x4267))+((cj4*x4278))+((x4281*x4282))+(((-1.0)*x4280*x4282))+(((0.41)*sj1))+(((0.0648043305514941)*x4267))+(((0.0648043305514941)*x4270))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4268))+(((-0.27144)*x4288))+(((-1.0)*x4278))+(((0.27144)*x4291)));
evalcond[4]=(((cj3*x4274*x4277))+((x4266*x4277))+(((0.250000349687704)*x4268*x4271))+((x4265*x4276))+((cj5*x4273*x4274))+(((-1.0)*sj5*x4271*x4274))+((x4266*x4284))+(((-1.0)*x4292))+((cj3*r22*x4285))+(((-1.0)*r22*x4265))+((r20*x4272*x4287))+x4288+(((-1.0)*r20*x4268*x4269))+((x4272*x4273))+((sj3*x4274*x4286)));
evalcond[5]=(((cj3*x4270*x4274))+((cj3*x4267*x4274))+((x4266*x4267))+((cj4*x4267*x4287))+((x4266*x4270))+((x4265*x4279))+((cj3*r02*x4285))+(((-1.0)*r00*x4268*x4269))+(((-1.0)*x4290))+((r01*x4268*x4287))+(((-1.0)*r02*x4265))+(((-1.0)*x4289))+((cj3*r01*x4272))+((sj3*x4274*x4281))+(((-1.0)*sj3*x4274*x4280)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4293=(cj4*sj5);
IkReal x4294=(cj0*r00);
IkReal x4295=(cj0*r02);
IkReal x4296=(cj5*r21);
IkReal x4297=((0.216558867852667)*sj4);
IkReal x4298=((0.528192360616262)*sj4);
IkReal x4299=(cj0*cj5*r01);
CheckValue<IkReal> x4300=IKPowWithIntegerCheck(cj0,-2);
if(!x4300.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4300.value)*(((((-0.187545437253636)*cj4*x4295))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4294))+(((-1.0)*cj5*x4294*x4297))+(((0.18234135315471)*x4299))+(((-0.0838945627463637)*x4295))+((cj0*r01*sj5*x4297))+(((-0.10827950965428)*x4293*x4294))+(((-1.0)*cj0*px))+(((-0.10827950965428)*cj4*x4299)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4298))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4296))+(((-1.0)*r21*sj5*x4298))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4293))+(((0.26409636501044)*cj4*x4296))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4300.value)*(((((-0.187545437253636)*cj4*x4295))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4294))+(((-1.0)*cj5*x4294*x4297))+(((0.18234135315471)*x4299))+(((-0.0838945627463637)*x4295))+((cj0*r01*sj5*x4297))+(((-0.10827950965428)*x4293*x4294))+(((-1.0)*cj0*px))+(((-0.10827950965428)*cj4*x4299))))))+IKsqr((((cj5*r20*x4298))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4296))+(((-1.0)*r21*sj5*x4298))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4293))+(((0.26409636501044)*cj4*x4296))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4300.value)*(((((-0.187545437253636)*cj4*x4295))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4294))+(((-1.0)*cj5*x4294*x4297))+(((0.18234135315471)*x4299))+(((-0.0838945627463637)*x4295))+((cj0*r01*sj5*x4297))+(((-0.10827950965428)*x4293*x4294))+(((-1.0)*cj0*px))+(((-0.10827950965428)*cj4*x4299))))), (((cj5*r20*x4298))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4296))+(((-1.0)*r21*sj5*x4298))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4293))+(((0.26409636501044)*cj4*x4296))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4301=IKsin(j1);
IkReal x4302=IKcos(j1);
IkReal x4303=sj0*sj0;
IkReal x4304=cj0*cj0;
IkReal x4305=((0.0098)*cj0);
IkReal x4306=(cj0*cj5);
IkReal x4307=(cj5*sj0);
IkReal x4308=((0.0648043305514941)*r21);
IkReal x4309=(r00*sj5);
IkReal x4310=((0.20357990508077)*sj3);
IkReal x4311=((0.135720094919197)*r21);
IkReal x4312=((1.0)*px);
IkReal x4313=((0.117537022603216)*sj3);
IkReal x4314=((0.00925751294893567)*cj4);
IkReal x4315=(r10*sj4);
IkReal x4316=(sj0*sj5);
IkReal x4317=(cj4*sj0);
IkReal x4318=(r20*sj5);
IkReal x4319=((0.10827950965428)*cj4);
IkReal x4320=(cj3*sj4);
IkReal x4321=((0.135720094919197)*sj5);
IkReal x4322=((0.117537022603216)*r11);
IkReal x4323=(cj5*r01);
IkReal x4324=(cj4*r02);
IkReal x4325=((0.117537022603216)*cj4);
IkReal x4326=((0.0160344678271334)*r02);
IkReal x4327=((0.0648043305514941)*r11);
IkReal x4328=((0.0160344678271334)*r12);
IkReal x4329=(cj0*cj4);
IkReal x4330=(cj5*sj3);
IkReal x4331=((0.0678600949192303)*cj4);
IkReal x4332=(r10*sj5);
IkReal x4333=((1.0)*py);
IkReal x4334=(cj5*r00);
IkReal x4335=(cj0*r21);
IkReal x4336=(r11*sj5);
IkReal x4337=((0.0160344678271334)*r22);
IkReal x4338=(r00*sj4);
IkReal x4339=((1.0)*pz);
IkReal x4340=(r22*sj0);
IkReal x4341=(sj3*sj4);
IkReal x4342=(cj5*r21);
IkReal x4343=(r21*sj3);
IkReal x4344=(cj0*r22);
IkReal x4345=((0.0185150129489311)*sj4);
IkReal x4346=(cj5*r11);
IkReal x4347=(r01*sj5);
IkReal x4348=((0.216558867852667)*sj4);
IkReal x4349=((0.135720094919197)*r20);
IkReal x4350=(sj0*x4305);
IkReal x4351=(sj4*x4316);
IkReal x4352=((0.27144)*cj3*cj4);
IkReal x4353=(r11*x4314);
IkReal x4354=((0.41)*x4301);
IkReal x4355=(cj0*x4332);
IkReal x4356=(sj5*x4345);
IkReal x4357=((0.41)*x4302);
IkReal x4358=(cj0*sj0*x4354);
evalcond[0]=((((-0.18234135315471)*x4318))+(((-1.0)*x4357))+(((0.187545437253636)*cj4*r22))+((x4319*x4342))+((cj5*r20*x4348))+pz+(((-0.18234135315471)*x4342))+((x4318*x4319))+(((0.0838945627463637)*r22))+(((-1.0)*r21*sj5*x4348)));
evalcond[1]=((((-1.0)*r11*x4307*x4319))+(((0.18234135315471)*r11*x4307))+(((-1.0)*x4350))+(((-0.216558867852667)*x4307*x4315))+(((-1.0)*sj0*x4333))+((r11*x4316*x4348))+(((0.18234135315471)*r10*x4316))+(((-1.0)*r10*x4316*x4319))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x4303*x4354))+(((-0.187545437253636)*r12*x4317)));
evalcond[2]=((((-1.0)*cj0*x4309*x4319))+((cj0*x4347*x4348))+(((-0.187545437253636)*cj0*x4324))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*r01*x4306*x4319))+(((-0.216558867852667)*x4306*x4338))+(((-1.0)*x4304*x4354))+(((-1.0)*cj0*x4312))+x4350+(((0.18234135315471)*r01*x4306))+(((0.18234135315471)*cj0*x4309)));
evalcond[3]=((((-1.0)*r11*x4321*x4341))+((x4310*x4332))+((r20*x4314*x4316))+((r21*x4307*x4314))+((x4310*x4346))+(((0.135720094919197)*x4320*x4346))+(((-1.0)*sj0*x4337))+(((-1.0)*sj0*x4339))+((sj3*x4331*x4332))+((x4317*x4337))+((r11*x4330*x4331))+(((0.0648043305514941)*r20*x4316))+((x4336*x4352))+(((0.235073880801598)*r12*x4320))+((x4307*x4308))+((cj4*r12*x4313))+(((-1.0)*r21*x4316*x4345))+(((-1.0)*r12*x4313))+((cj3*x4315*x4321))+((sj0*x4357))+(((0.135720094919197)*x4315*x4330))+(((-1.0)*cj5*r10*x4352))+((r20*x4307*x4345)));
evalcond[4]=(((cj0*x4314*x4318))+(((-1.0)*r01*x4321*x4341))+((cj0*x4357))+(((-1.0)*x4334*x4352))+((x4310*x4323))+((sj3*x4309*x4331))+(((0.235073880801598)*r02*x4320))+(((0.135720094919197)*x4309*x4320))+(((-1.0)*cj0*x4337))+(((-1.0)*cj0*x4339))+((x4347*x4352))+(((0.0648043305514941)*cj0*x4318))+((r20*x4306*x4345))+((r21*x4306*x4314))+(((0.135720094919197)*x4330*x4338))+((sj3*x4323*x4331))+(((0.135720094919197)*x4320*x4323))+((x4329*x4337))+(((-1.0)*r02*x4313))+((x4306*x4308))+((x4313*x4324))+(((-1.0)*x4335*x4356))+((x4309*x4310)));
evalcond[5]=((((-1.0)*x4316*x4320*x4349))+(((0.0185150129489311)*cj5*x4315))+(((-1.0)*r20*sj3*x4316*x4331))+((cj4*x4328))+((x4314*x4346))+(((-1.0)*x4307*x4311*x4320))+((cj5*x4327))+(((-1.0)*x4328))+(((-1.0)*x4307*x4331*x4343))+(((-1.0)*x4333))+((x4311*x4316*x4341))+(((0.0648043305514941)*x4332))+((x4314*x4332))+(((-0.235073880801598)*x4320*x4340))+(((-1.0)*r20*x4310*x4316))+(((-1.0)*sj0*x4354))+(((-1.0)*x4307*x4341*x4349))+((x4313*x4340))+(((-1.0)*r21*x4316*x4352))+(((-1.0)*r21*x4307*x4310))+(((-1.0)*x4336*x4345))+(((-1.0)*r22*x4313*x4317))+((r20*x4307*x4352))+(((-1.0)*x4305)));
evalcond[6]=((((-1.0)*x4306*x4331*x4343))+(((-1.0)*x4306*x4341*x4349))+(((-1.0)*cj0*x4354))+(((-1.0)*x4326))+((x4314*x4323))+(((-1.0)*r22*x4313*x4329))+(((-1.0)*r21*x4306*x4310))+((cj0*sj5*x4311*x4341))+(((-0.235073880801598)*x4320*x4344))+(((-1.0)*x4306*x4311*x4320))+(((-1.0)*x4312))+(((0.0648043305514941)*x4323))+((r20*x4306*x4352))+(((-0.135720094919197)*cj0*x4318*x4320))+(((-1.0)*x4345*x4347))+(((-0.0678600949192303)*sj3*x4318*x4329))+(((-0.27144)*cj3*r21*sj5*x4329))+((x4313*x4344))+((x4334*x4345))+((x4309*x4314))+(((0.0098)*sj0))+(((0.0160344678271334)*x4324))+(((0.0648043305514941)*x4309))+(((-1.0)*cj0*x4310*x4318)));
evalcond[7]=((((0.235073880801598)*cj0*sj4*x4336))+(((-0.0678600949192303)*cj0*r12))+(((0.0098)*x4303))+(((-1.0)*x4325*x4355))+((sj0*x4309*x4314))+(((-1.0)*sj0*x4312))+(((-1.0)*x4358))+(((-1.0)*sj0*x4326))+((x4306*x4322))+(((-1.0)*cj4*x4306*x4322))+((x4317*x4326))+(((-1.0)*r01*x4316*x4345))+(((-0.235073880801598)*x4306*x4315))+((r01*x4307*x4314))+(((0.0185150129489311)*x4307*x4338))+(((0.117537022603216)*x4355))+(((0.0648043305514941)*sj0*x4309))+(((-0.20357990508077)*r12*x4329))+(((0.0648043305514941)*r01*x4307)));
evalcond[8]=(((x4306*x4353))+(((-1.0)*cj0*x4336*x4345))+((x4314*x4355))+(((0.0185150129489311)*x4306*x4315))+(((-1.0)*cj0*x4328))+(((-1.0)*x4358))+(((-1.0)*cj0*x4333))+(((-0.20357990508077)*r02*x4317))+((x4306*x4327))+(((-1.0)*r01*x4307*x4325))+(((0.235073880801598)*r01*x4351))+(((-0.235073880801598)*x4307*x4338))+(((-0.0098)*x4304))+(((0.0648043305514941)*x4355))+(((0.117537022603216)*sj0*x4309))+(((0.117537022603216)*r01*x4307))+((x4328*x4329))+(((-0.0678600949192303)*r02*sj0))+(((-0.117537022603216)*x4309*x4317)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4359=((0.250000349687704)*sj1);
IkReal x4360=(cj1*cj4);
IkReal x4361=((0.749999650312296)*r22);
IkReal x4362=(cj4*sj1);
IkReal x4363=((0.749999650312296)*r02);
IkReal x4364=((0.250000349687704)*cj1);
IkReal x4365=((0.433012903784321)*r00*sj5);
IkReal x4366=((0.433012903784321)*r20*sj5);
IkReal x4367=((0.433012903784321)*cj5*r01);
IkReal x4368=((0.433012903784321)*cj5*r21);
IkReal x4369=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4370=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4371=((0.866025201892125)*r01*sj4*sj5);
IkReal x4372=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x4365))+(((-1.0)*cj1*x4367))+((r20*x4369))+((r22*x4359))+((r00*x4370))+(((-1.0)*sj1*x4366))+(((-1.0)*sj1*x4368))+(((-1.0)*sj1*x4372))+((x4361*x4362))+((x4362*x4368))+((x4362*x4366))+((x4360*x4365))+((x4360*x4367))+((x4360*x4363))+(((-1.0)*cj1*x4371))+((r02*x4364)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+(((-1.0)*r02*x4359))+((sj1*x4371))+((sj1*x4367))+((sj1*x4365))+((r20*x4370))+(((-1.0)*x4362*x4363))+(((-1.0)*x4362*x4367))+(((-1.0)*x4362*x4365))+((x4360*x4366))+((x4360*x4368))+((x4360*x4361))+((r22*x4364))+(((-1.0)*r00*x4369))+(((-1.0)*cj1*x4372)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x4365))+(((-1.0)*cj1*x4367))+((r20*x4369))+((r22*x4359))+((r00*x4370))+(((-1.0)*sj1*x4366))+(((-1.0)*sj1*x4368))+(((-1.0)*sj1*x4372))+((x4361*x4362))+((x4362*x4368))+((x4362*x4366))+((x4360*x4365))+((x4360*x4367))+((x4360*x4363))+(((-1.0)*cj1*x4371))+((r02*x4364))))+IKsqr(((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+(((-1.0)*r02*x4359))+((sj1*x4371))+((sj1*x4367))+((sj1*x4365))+((r20*x4370))+(((-1.0)*x4362*x4363))+(((-1.0)*x4362*x4367))+(((-1.0)*x4362*x4365))+((x4360*x4366))+((x4360*x4368))+((x4360*x4361))+((r22*x4364))+(((-1.0)*r00*x4369))+(((-1.0)*cj1*x4372))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x4365))+(((-1.0)*cj1*x4367))+((r20*x4369))+((r22*x4359))+((r00*x4370))+(((-1.0)*sj1*x4366))+(((-1.0)*sj1*x4368))+(((-1.0)*sj1*x4372))+((x4361*x4362))+((x4362*x4368))+((x4362*x4366))+((x4360*x4365))+((x4360*x4367))+((x4360*x4363))+(((-1.0)*cj1*x4371))+((r02*x4364))), ((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+(((-1.0)*r02*x4359))+((sj1*x4371))+((sj1*x4367))+((sj1*x4365))+((r20*x4370))+(((-1.0)*x4362*x4363))+(((-1.0)*x4362*x4367))+(((-1.0)*x4362*x4365))+((x4360*x4366))+((x4360*x4368))+((x4360*x4361))+((r22*x4364))+(((-1.0)*r00*x4369))+(((-1.0)*cj1*x4372))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4373=IKsin(j2);
IkReal x4374=IKcos(j2);
IkReal x4375=((0.749999650312296)*sj3);
IkReal x4376=(cj5*r01);
IkReal x4377=(r00*sj5);
IkReal x4378=(cj4*cj5);
IkReal x4379=((1.0)*cj3);
IkReal x4380=(r21*sj3);
IkReal x4381=(cj4*sj5);
IkReal x4382=(cj3*r21);
IkReal x4383=((0.500000349687582)*sj4);
IkReal x4384=((0.433012903784321)*r20);
IkReal x4385=(cj4*r22);
IkReal x4386=((0.433012903784321)*sj3);
IkReal x4387=((0.433012903784321)*cj4);
IkReal x4388=(r01*sj5);
IkReal x4389=(r20*sj5);
IkReal x4390=((0.0160344678271334)*r02);
IkReal x4391=(cj4*r02);
IkReal x4392=((0.00925751294893567)*cj4);
IkReal x4393=((0.0185150129489311)*sj4);
IkReal x4394=(r21*sj5);
IkReal x4395=(cj5*r21);
IkReal x4396=((0.866025201892125)*sj4);
IkReal x4397=(cj5*r20);
IkReal x4398=(cj5*r00);
IkReal x4399=((0.250000349687704)*sj3);
IkReal x4400=(cj1*x4374);
IkReal x4401=(sj1*x4373);
IkReal x4402=(cj1*x4373);
IkReal x4403=(sj1*x4374);
IkReal x4404=(x4400+x4401);
evalcond[0]=((((-1.0)*x4396*x4397))+(((-0.250000349687704)*r22))+(((-1.0)*x4381*x4384))+x4404+(((-0.749999650312296)*x4385))+(((-0.433012903784321)*r21*x4378))+((x4394*x4396))+(((0.433012903784321)*x4395))+((sj5*x4384)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4396*x4398))+((x4388*x4396))+x4402+(((-1.0)*x4403))+(((0.433012903784321)*x4376))+(((0.433012903784321)*x4377))+(((-0.749999650312296)*x4391))+(((-1.0)*x4377*x4387))+(((-1.0)*x4376*x4387)));
evalcond[2]=((((0.00925751294893567)*r20*x4381))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4395))+(((0.0648043305514941)*x4389))+(((-0.27144)*x4401))+(((-0.27144)*x4400))+(((-1.0)*pz))+(((0.0160344678271334)*x4385))+(((-1.0)*x4393*x4394))+(((0.00925751294893567)*r21*x4378))+((x4393*x4397)));
evalcond[3]=((((-1.0)*x4390))+(((0.0648043305514941)*x4376))+(((0.0648043305514941)*x4377))+((cj4*x4390))+(((-1.0)*x4388*x4393))+(((-0.41)*sj1))+((x4376*x4392))+(((-0.27144)*x4402))+(((-1.0)*px))+((x4377*x4392))+(((0.27144)*x4403))+((x4393*x4398)));
evalcond[4]=(((cj3*r02*x4396))+(((-1.0)*r02*x4386))+x4404+((sj3*x4383*x4398))+((x4375*x4377))+((x4375*x4376))+((cj3*x4377*x4383))+(((-1.0)*r00*x4378*x4379))+((cj3*x4376*x4383))+((cj4*x4376*x4399))+(((-1.0)*sj3*x4383*x4388))+((cj4*x4377*x4399))+((x4386*x4391))+((cj3*r01*x4381)));
evalcond[5]=(((cj3*r22*x4396))+((cj5*x4382*x4383))+x4403+(((-1.0)*r20*x4378*x4379))+((sj3*x4383*x4397))+(((-1.0)*r22*x4386))+(((-1.0)*x4402))+((x4381*x4382))+(((-1.0)*sj5*x4380*x4383))+((cj3*x4383*x4389))+(((0.250000349687704)*x4378*x4380))+((x4375*x4395))+((x4375*x4389))+((x4385*x4386))+((r20*x4381*x4399)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4405=(r02*sj1);
IkReal x4406=(cj1*cj4);
IkReal x4407=((0.749999650312296)*r22);
IkReal x4408=(cj4*sj1);
IkReal x4409=((0.250000349687704)*r22);
IkReal x4410=((0.433012903784321)*r00*sj5);
IkReal x4411=((0.433012903784321)*r20*sj5);
IkReal x4412=((0.433012903784321)*cj5*r01);
IkReal x4413=((0.433012903784321)*cj5*r21);
IkReal x4414=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4415=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4416=((0.866025201892125)*r01*sj4*sj5);
IkReal x4417=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4412))+((cj1*x4416))+((cj1*x4410))+(((-0.749999650312296)*r02*x4406))+((x4407*x4408))+(((-1.0)*r00*x4415))+((r20*x4414))+(((-1.0)*x4406*x4412))+(((-1.0)*x4406*x4410))+(((-0.250000349687704)*cj1*r02))+((sj1*x4409))+((x4408*x4413))+((x4408*x4411)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x4409))+(((-1.0)*sj1*x4410))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4416))+(((0.749999650312296)*cj4*x4405))+((r00*x4414))+((r20*x4415))+(((-1.0)*cj1*x4413))+(((-1.0)*cj1*x4411))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4405))+((x4408*x4412))+((x4408*x4410))+((x4406*x4407))+((x4406*x4413))+((x4406*x4411)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4412))+((cj1*x4416))+((cj1*x4410))+(((-0.749999650312296)*r02*x4406))+((x4407*x4408))+(((-1.0)*r00*x4415))+((r20*x4414))+(((-1.0)*x4406*x4412))+(((-1.0)*x4406*x4410))+(((-0.250000349687704)*cj1*r02))+((sj1*x4409))+((x4408*x4413))+((x4408*x4411))))+IKsqr((((cj1*x4409))+(((-1.0)*sj1*x4410))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4416))+(((0.749999650312296)*cj4*x4405))+((r00*x4414))+((r20*x4415))+(((-1.0)*cj1*x4413))+(((-1.0)*cj1*x4411))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4405))+((x4408*x4412))+((x4408*x4410))+((x4406*x4407))+((x4406*x4413))+((x4406*x4411))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4412))+((cj1*x4416))+((cj1*x4410))+(((-0.749999650312296)*r02*x4406))+((x4407*x4408))+(((-1.0)*r00*x4415))+((r20*x4414))+(((-1.0)*x4406*x4412))+(((-1.0)*x4406*x4410))+(((-0.250000349687704)*cj1*r02))+((sj1*x4409))+((x4408*x4413))+((x4408*x4411))), (((cj1*x4409))+(((-1.0)*sj1*x4410))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4416))+(((0.749999650312296)*cj4*x4405))+((r00*x4414))+((r20*x4415))+(((-1.0)*cj1*x4413))+(((-1.0)*cj1*x4411))+(((-1.0)*cj1*x4417))+(((0.250000349687704)*x4405))+((x4408*x4412))+((x4408*x4410))+((x4406*x4407))+((x4406*x4413))+((x4406*x4411))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4418=IKcos(j2);
IkReal x4419=IKsin(j2);
IkReal x4420=((0.433012903784321)*sj3);
IkReal x4421=((0.749999650312296)*sj3);
IkReal x4422=(r00*sj5);
IkReal x4423=(cj4*cj5);
IkReal x4424=((1.0)*cj3);
IkReal x4425=(cj5*r01);
IkReal x4426=(r21*sj3);
IkReal x4427=(cj4*sj5);
IkReal x4428=(cj3*r21);
IkReal x4429=((0.500000349687582)*sj4);
IkReal x4430=((0.433012903784321)*r20);
IkReal x4431=(cj4*r22);
IkReal x4432=(r20*sj5);
IkReal x4433=((0.0160344678271334)*r02);
IkReal x4434=(cj4*r02);
IkReal x4435=(r01*sj5);
IkReal x4436=(cj5*r00);
IkReal x4437=((0.0185150129489311)*sj4);
IkReal x4438=(r21*sj5);
IkReal x4439=(cj5*r21);
IkReal x4440=((0.866025201892125)*sj4);
IkReal x4441=(cj5*r20);
IkReal x4442=((0.250000349687704)*sj3);
IkReal x4443=(sj1*x4418);
IkReal x4444=(cj1*x4418);
IkReal x4445=(sj1*x4419);
IkReal x4446=(cj1*x4419);
IkReal x4447=((1.0)*x4446);
evalcond[0]=((((-1.0)*x4427*x4430))+((sj5*x4430))+(((-0.250000349687704)*r22))+x4444+x4445+(((0.433012903784321)*x4439))+((x4438*x4440))+(((-1.0)*x4440*x4441))+(((-0.749999650312296)*x4431))+(((-0.433012903784321)*r21*x4423)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x4422))+(((0.433012903784321)*x4425))+(((-0.433012903784321)*r01*x4423))+(((-0.433012903784321)*cj4*x4422))+x4443+(((-1.0)*x4447))+((x4435*x4440))+(((-1.0)*x4436*x4440))+(((-0.749999650312296)*x4434)));
evalcond[2]=((((0.00925751294893567)*r20*x4427))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0160344678271334)*x4431))+((x4437*x4441))+(((-0.27144)*x4445))+(((-0.27144)*x4444))+(((0.0648043305514941)*x4439))+(((0.0648043305514941)*x4432))+(((-1.0)*x4437*x4438))+(((0.00925751294893567)*r21*x4423)));
evalcond[3]=((((0.00925751294893567)*r01*x4423))+(((-1.0)*x4433))+(((0.41)*sj1))+(((0.00925751294893567)*cj4*x4422))+(((0.0648043305514941)*x4425))+(((0.0648043305514941)*x4422))+((x4436*x4437))+(((-1.0)*px))+(((-1.0)*x4435*x4437))+(((0.27144)*x4446))+(((-0.27144)*x4443))+((cj4*x4433)));
evalcond[4]=(((cj3*r22*x4440))+(((-1.0)*sj5*x4426*x4429))+x4443+(((-1.0)*x4447))+(((0.250000349687704)*x4423*x4426))+((x4427*x4428))+((r20*x4427*x4442))+((x4421*x4432))+((x4421*x4439))+((cj3*x4429*x4432))+(((-1.0)*r20*x4423*x4424))+(((-1.0)*r22*x4420))+((x4420*x4431))+((sj3*x4429*x4441))+((cj5*x4428*x4429)));
evalcond[5]=(((r01*x4423*x4442))+((cj3*x4422*x4429))+(((-1.0)*r00*x4423*x4424))+(((-1.0)*x4444))+(((-1.0)*x4445))+((cj3*x4425*x4429))+((cj3*r02*x4440))+((x4420*x4434))+((cj4*x4422*x4442))+(((-1.0)*sj3*x4429*x4435))+(((-1.0)*r02*x4420))+((x4421*x4422))+((x4421*x4425))+((sj3*x4429*x4436))+((cj3*r01*x4427)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4448=((0.250000349687704)*r12);
IkReal x4449=((0.749999650312296)*cj4);
IkReal x4450=((0.433012903784321)*sj5);
IkReal x4451=(cj1*r10);
IkReal x4452=(cj1*r22);
IkReal x4453=(cj1*r20);
IkReal x4454=((0.866025201892125)*sj4);
IkReal x4455=(r20*sj1);
IkReal x4456=(r22*sj1);
IkReal x4457=(r10*sj1);
IkReal x4458=(r11*sj1);
IkReal x4459=((0.433012903784321)*cj5);
IkReal x4460=(r21*sj1);
IkReal x4461=(cj1*r21);
IkReal x4462=(cj1*r11);
IkReal x4463=(cj5*sj1*x4454);
IkReal x4464=(cj4*r21*x4459);
if( IKabs((((cj1*r12*x4449))+((cj1*x4448))+((cj5*x4454*x4455))+((cj4*x4450*x4455))+((cj4*x4450*x4451))+(((-1.0)*x4459*x4462))+(((-1.0)*x4459*x4460))+((cj4*x4459*x4462))+((cj4*x4459*x4460))+((cj5*x4451*x4454))+((x4449*x4456))+(((-1.0)*x4450*x4455))+(((-1.0)*x4450*x4451))+(((-1.0)*sj5*x4454*x4460))+(((-1.0)*sj5*x4454*x4462))+(((0.250000349687704)*x4456)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4450*x4457))+(((-1.0)*cj4*x4458*x4459))+((x4458*x4459))+(((-1.0)*cj5*x4454*x4457))+(((-1.0)*sj1*x4448))+((sj5*x4454*x4458))+((cj4*x4450*x4453))+(((-1.0)*r12*sj1*x4449))+(((-1.0)*x4459*x4461))+((cj5*x4453*x4454))+(((-1.0)*cj4*x4450*x4457))+((cj4*x4459*x4461))+((x4449*x4452))+(((-1.0)*x4450*x4453))+(((-1.0)*sj5*x4454*x4461))+(((0.250000349687704)*x4452)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r12*x4449))+((cj1*x4448))+((cj5*x4454*x4455))+((cj4*x4450*x4455))+((cj4*x4450*x4451))+(((-1.0)*x4459*x4462))+(((-1.0)*x4459*x4460))+((cj4*x4459*x4462))+((cj4*x4459*x4460))+((cj5*x4451*x4454))+((x4449*x4456))+(((-1.0)*x4450*x4455))+(((-1.0)*x4450*x4451))+(((-1.0)*sj5*x4454*x4460))+(((-1.0)*sj5*x4454*x4462))+(((0.250000349687704)*x4456))))+IKsqr((((x4450*x4457))+(((-1.0)*cj4*x4458*x4459))+((x4458*x4459))+(((-1.0)*cj5*x4454*x4457))+(((-1.0)*sj1*x4448))+((sj5*x4454*x4458))+((cj4*x4450*x4453))+(((-1.0)*r12*sj1*x4449))+(((-1.0)*x4459*x4461))+((cj5*x4453*x4454))+(((-1.0)*cj4*x4450*x4457))+((cj4*x4459*x4461))+((x4449*x4452))+(((-1.0)*x4450*x4453))+(((-1.0)*sj5*x4454*x4461))+(((0.250000349687704)*x4452))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r12*x4449))+((cj1*x4448))+((cj5*x4454*x4455))+((cj4*x4450*x4455))+((cj4*x4450*x4451))+(((-1.0)*x4459*x4462))+(((-1.0)*x4459*x4460))+((cj4*x4459*x4462))+((cj4*x4459*x4460))+((cj5*x4451*x4454))+((x4449*x4456))+(((-1.0)*x4450*x4455))+(((-1.0)*x4450*x4451))+(((-1.0)*sj5*x4454*x4460))+(((-1.0)*sj5*x4454*x4462))+(((0.250000349687704)*x4456))), (((x4450*x4457))+(((-1.0)*cj4*x4458*x4459))+((x4458*x4459))+(((-1.0)*cj5*x4454*x4457))+(((-1.0)*sj1*x4448))+((sj5*x4454*x4458))+((cj4*x4450*x4453))+(((-1.0)*r12*sj1*x4449))+(((-1.0)*x4459*x4461))+((cj5*x4453*x4454))+(((-1.0)*cj4*x4450*x4457))+((cj4*x4459*x4461))+((x4449*x4452))+(((-1.0)*x4450*x4453))+(((-1.0)*sj5*x4454*x4461))+(((0.250000349687704)*x4452))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4465=IKsin(j2);
IkReal x4466=IKcos(j2);
IkReal x4467=(cj5*r11);
IkReal x4468=((0.433012903784321)*cj4);
IkReal x4469=(r21*sj5);
IkReal x4470=((0.500000349687582)*sj4);
IkReal x4471=((0.749999650312296)*sj3);
IkReal x4472=(cj3*cj4);
IkReal x4473=(cj5*r10);
IkReal x4474=((0.0185150129489311)*sj4);
IkReal x4475=(r20*sj5);
IkReal x4476=(cj4*r22);
IkReal x4477=(r10*sj5);
IkReal x4478=(r22*sj3);
IkReal x4479=(r11*sj5);
IkReal x4480=((0.00925751294893567)*cj4);
IkReal x4481=(cj5*r21);
IkReal x4482=(r12*sj3);
IkReal x4483=(cj4*r12);
IkReal x4484=(cj5*r20);
IkReal x4485=((0.866025201892125)*sj4);
IkReal x4486=(cj1*x4466);
IkReal x4487=(sj1*x4465);
IkReal x4488=(cj1*x4465);
IkReal x4489=((0.250000349687704)*cj4*sj3);
IkReal x4490=(sj1*x4466);
IkReal x4491=(cj3*x4485);
IkReal x4492=(x4486+x4487);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x4484*x4485))+x4492+(((-0.749999650312296)*x4476))+(((0.433012903784321)*x4475))+(((0.433012903784321)*x4481))+((x4469*x4485))+(((-1.0)*x4468*x4481))+(((-1.0)*x4468*x4475)));
evalcond[1]=((((-1.0)*x4473*x4485))+(((-1.0)*x4490))+(((-0.250000349687704)*r12))+x4488+(((-0.749999650312296)*x4483))+(((0.433012903784321)*x4467))+((x4479*x4485))+(((0.433012903784321)*x4477))+(((-1.0)*x4468*x4477))+(((-1.0)*x4467*x4468)));
evalcond[2]=((((0.0160344678271334)*x4476))+((x4480*x4481))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x4475*x4480))+(((-1.0)*x4469*x4474))+((x4474*x4484))+(((0.0648043305514941)*x4475))+(((-0.27144)*x4486))+(((-0.27144)*x4487))+(((0.0648043305514941)*x4481)));
evalcond[3]=(((x4477*x4480))+(((0.0160344678271334)*x4483))+(((-0.0160344678271334)*r12))+(((-1.0)*x4474*x4479))+(((0.27144)*x4490))+(((-0.41)*sj1))+(((0.0648043305514941)*x4467))+(((-1.0)*py))+((x4467*x4480))+((x4473*x4474))+(((0.0648043305514941)*x4477))+(((-0.27144)*x4488)));
evalcond[4]=(((r12*x4491))+(((-0.433012903784321)*x4482))+((x4471*x4477))+x4492+((x4477*x4489))+((cj3*x4470*x4477))+(((-1.0)*x4472*x4473))+((x4467*x4471))+((x4467*x4489))+((cj3*x4467*x4470))+(((-1.0)*sj3*x4470*x4479))+((x4472*x4479))+((x4468*x4482))+((sj3*x4470*x4473)));
evalcond[5]=((((-1.0)*x4488))+((sj3*x4470*x4484))+((x4471*x4475))+(((-0.433012903784321)*x4478))+((x4471*x4481))+((cj3*x4470*x4481))+x4490+((cj3*x4470*x4475))+(((-1.0)*sj3*x4469*x4470))+(((-1.0)*x4472*x4484))+((x4481*x4489))+((r22*x4491))+((x4475*x4489))+((x4468*x4478))+((x4469*x4472)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4493=((0.250000349687704)*r12);
IkReal x4494=((0.749999650312296)*cj4);
IkReal x4495=(cj1*r22);
IkReal x4496=((0.866025201892125)*sj4);
IkReal x4497=(cj1*r20);
IkReal x4498=(sj1*sj5);
IkReal x4499=((0.433012903784321)*r20);
IkReal x4500=((0.433012903784321)*sj5);
IkReal x4501=(cj1*r10);
IkReal x4502=(r22*sj1);
IkReal x4503=((0.433012903784321)*r10);
IkReal x4504=((0.433012903784321)*cj5);
IkReal x4505=(cj1*r21);
IkReal x4506=(cj1*r11);
IkReal x4507=(r11*sj1);
IkReal x4508=(cj1*cj4*x4500);
IkReal x4509=(cj5*sj1*x4496);
IkReal x4510=(cj4*r21*x4504);
if( IKabs((((cj4*x4498*x4499))+(((-1.0)*cj4*x4500*x4501))+(((-1.0)*cj1*x4493))+(((-1.0)*r21*sj1*x4504))+((sj5*x4496*x4506))+((x4494*x4502))+(((-1.0)*x4498*x4499))+((x4500*x4501))+(((-1.0)*cj4*x4504*x4506))+(((-1.0)*cj5*x4496*x4501))+(((0.250000349687704)*x4502))+(((-1.0)*r21*x4496*x4498))+((sj1*x4510))+((r20*x4509))+((x4504*x4506))+(((-1.0)*cj1*r12*x4494)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4497*x4500))+((cj5*x4496*x4497))+((cj4*x4498*x4503))+((r10*x4509))+((sj1*x4493))+(((0.250000349687704)*x4495))+(((-1.0)*x4497*x4500))+((cj4*x4504*x4505))+((cj4*x4504*x4507))+(((-1.0)*x4498*x4503))+(((-1.0)*sj5*x4496*x4505))+((x4494*x4495))+(((-1.0)*x4504*x4507))+(((-1.0)*x4504*x4505))+((r12*sj1*x4494))+(((-1.0)*r11*x4496*x4498)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4498*x4499))+(((-1.0)*cj4*x4500*x4501))+(((-1.0)*cj1*x4493))+(((-1.0)*r21*sj1*x4504))+((sj5*x4496*x4506))+((x4494*x4502))+(((-1.0)*x4498*x4499))+((x4500*x4501))+(((-1.0)*cj4*x4504*x4506))+(((-1.0)*cj5*x4496*x4501))+(((0.250000349687704)*x4502))+(((-1.0)*r21*x4496*x4498))+((sj1*x4510))+((r20*x4509))+((x4504*x4506))+(((-1.0)*cj1*r12*x4494))))+IKsqr((((cj4*x4497*x4500))+((cj5*x4496*x4497))+((cj4*x4498*x4503))+((r10*x4509))+((sj1*x4493))+(((0.250000349687704)*x4495))+(((-1.0)*x4497*x4500))+((cj4*x4504*x4505))+((cj4*x4504*x4507))+(((-1.0)*x4498*x4503))+(((-1.0)*sj5*x4496*x4505))+((x4494*x4495))+(((-1.0)*x4504*x4507))+(((-1.0)*x4504*x4505))+((r12*sj1*x4494))+(((-1.0)*r11*x4496*x4498))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4498*x4499))+(((-1.0)*cj4*x4500*x4501))+(((-1.0)*cj1*x4493))+(((-1.0)*r21*sj1*x4504))+((sj5*x4496*x4506))+((x4494*x4502))+(((-1.0)*x4498*x4499))+((x4500*x4501))+(((-1.0)*cj4*x4504*x4506))+(((-1.0)*cj5*x4496*x4501))+(((0.250000349687704)*x4502))+(((-1.0)*r21*x4496*x4498))+((sj1*x4510))+((r20*x4509))+((x4504*x4506))+(((-1.0)*cj1*r12*x4494))), (((cj4*x4497*x4500))+((cj5*x4496*x4497))+((cj4*x4498*x4503))+((r10*x4509))+((sj1*x4493))+(((0.250000349687704)*x4495))+(((-1.0)*x4497*x4500))+((cj4*x4504*x4505))+((cj4*x4504*x4507))+(((-1.0)*x4498*x4503))+(((-1.0)*sj5*x4496*x4505))+((x4494*x4495))+(((-1.0)*x4504*x4507))+(((-1.0)*x4504*x4505))+((r12*sj1*x4494))+(((-1.0)*r11*x4496*x4498))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4511=IKcos(j2);
IkReal x4512=IKsin(j2);
IkReal x4513=(cj5*r11);
IkReal x4514=((0.433012903784321)*cj4);
IkReal x4515=(r21*sj5);
IkReal x4516=((0.500000349687582)*sj4);
IkReal x4517=((0.749999650312296)*sj3);
IkReal x4518=(cj3*cj4);
IkReal x4519=(cj5*r10);
IkReal x4520=((0.0185150129489311)*sj4);
IkReal x4521=(r20*sj5);
IkReal x4522=(cj4*r22);
IkReal x4523=(r10*sj5);
IkReal x4524=(r12*sj3);
IkReal x4525=(r11*sj5);
IkReal x4526=(r22*sj3);
IkReal x4527=((0.27144)*sj1);
IkReal x4528=((0.00925751294893567)*cj4);
IkReal x4529=(cj5*r20);
IkReal x4530=(cj5*r21);
IkReal x4531=(cj4*r12);
IkReal x4532=((0.866025201892125)*sj4);
IkReal x4533=(sj1*x4511);
IkReal x4534=(cj1*x4511);
IkReal x4535=(cj1*x4512);
IkReal x4536=((0.250000349687704)*cj4*sj3);
IkReal x4537=(cj3*x4532);
IkReal x4538=(sj1*x4512);
IkReal x4539=((1.0)*x4535);
evalcond[0]=((((-0.250000349687704)*r22))+x4538+x4534+(((-0.749999650312296)*x4522))+((x4515*x4532))+(((-1.0)*x4514*x4521))+(((-1.0)*x4514*x4530))+(((0.433012903784321)*x4530))+(((0.433012903784321)*x4521))+(((-1.0)*x4529*x4532)));
evalcond[1]=(((x4525*x4532))+(((-0.250000349687704)*r12))+(((-1.0)*x4513*x4514))+(((-1.0)*x4539))+x4533+(((0.433012903784321)*x4513))+(((-0.749999650312296)*x4531))+(((-1.0)*x4514*x4523))+(((0.433012903784321)*x4523))+(((-1.0)*x4519*x4532)));
evalcond[2]=(((x4528*x4530))+(((-0.27144)*x4534))+(((0.41)*cj1))+((x4521*x4528))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4530))+(((0.0160344678271334)*x4522))+(((0.0648043305514941)*x4521))+(((-1.0)*pz))+(((-1.0)*x4512*x4527))+((x4520*x4529))+(((-1.0)*x4515*x4520)));
evalcond[3]=((((0.27144)*x4535))+((x4523*x4528))+(((-1.0)*x4511*x4527))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0160344678271334)*x4531))+(((-1.0)*x4520*x4525))+(((0.0648043305514941)*x4523))+(((-1.0)*py))+((x4513*x4528))+(((0.0648043305514941)*x4513))+((x4519*x4520)));
evalcond[4]=(((sj3*x4516*x4529))+((x4530*x4536))+(((-1.0)*x4539))+x4533+((x4514*x4526))+((x4521*x4536))+((r22*x4537))+(((-1.0)*x4518*x4529))+((x4517*x4521))+((x4517*x4530))+(((-1.0)*sj3*x4515*x4516))+((cj3*x4516*x4521))+((cj3*x4516*x4530))+(((-0.433012903784321)*x4526))+((x4515*x4518)));
evalcond[5]=((((-1.0)*x4534))+(((-1.0)*x4538))+((r12*x4537))+((x4513*x4517))+((x4514*x4524))+((sj3*x4516*x4519))+((x4517*x4523))+((cj3*x4513*x4516))+((cj3*x4516*x4523))+(((-1.0)*x4518*x4519))+((x4513*x4536))+(((-0.433012903784321)*x4524))+((x4518*x4525))+((x4523*x4536))+(((-1.0)*sj3*x4516*x4525)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4540=(cj4*sj1);
IkReal x4541=((0.433012903784321)*sj0);
IkReal x4542=(cj5*r21);
IkReal x4543=(cj1*r12);
IkReal x4544=(r20*sj5);
IkReal x4545=(r20*sj0);
IkReal x4546=(r10*sj1);
IkReal x4547=((0.749999650312296)*cj4);
IkReal x4548=(r21*sj0);
IkReal x4549=((0.433012903784321)*sj5);
IkReal x4550=(cj1*cj4);
IkReal x4551=(r22*sj0);
IkReal x4552=((0.250000349687704)*x4551);
IkReal x4553=((0.866025201892125)*cj5*sj4);
IkReal x4554=((0.433012903784321)*cj5*r11);
IkReal x4555=(cj1*r10*x4549);
IkReal x4556=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4557=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4558=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4558.valid){
continue;
}
CheckValue<IkReal> x4559 = IKatan2WithCheck(IkReal(((((-1.0)*r11*x4557))+((r10*x4549*x4550))+((x4550*x4554))+((x4540*x4541*x4544))+((x4540*x4541*x4542))+(((-1.0)*cj1*x4554))+(((-1.0)*x4555))+(((-1.0)*x4548*x4556))+(((-1.0)*sj1*x4541*x4542))+(((-1.0)*sj1*x4541*x4544))+(((0.749999650312296)*x4540*x4551))+((sj1*x4545*x4553))+((x4543*x4547))+(((0.250000349687704)*x4543))+((sj1*x4552))+((cj1*r10*x4553)))),IkReal((((cj1*x4547*x4551))+(((-1.0)*r10*x4540*x4549))+(((-0.250000349687704)*r12*sj1))+((x4546*x4549))+(((-1.0)*cj1*x4541*x4544))+(((-1.0)*cj1*x4541*x4542))+((x4541*x4544*x4550))+(((-0.749999650312296)*r12*x4540))+((cj1*x4545*x4553))+((r11*x4556))+((cj1*x4552))+(((-1.0)*x4548*x4557))+(((-1.0)*x4540*x4554))+((sj1*x4554))+(((-1.0)*x4546*x4553))+((x4541*x4542*x4550)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4559.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4558.value)))+(x4559.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4560=IKsin(j2);
IkReal x4561=IKcos(j2);
IkReal x4562=(cj4*sj5);
IkReal x4563=(cj3*r21);
IkReal x4564=((0.433012903784321)*r20);
IkReal x4565=((0.749999650312296)*cj4);
IkReal x4566=(cj4*cj5);
IkReal x4567=((1.0)*cj3);
IkReal x4568=((0.433012903784321)*r01);
IkReal x4569=(sj4*sj5);
IkReal x4570=((0.749999650312296)*sj3);
IkReal x4571=(r10*sj5);
IkReal x4572=((0.500000349687582)*sj3);
IkReal x4573=(cj0*sj1);
IkReal x4574=((0.500000349687582)*cj3);
IkReal x4575=((0.0160344678271334)*r22);
IkReal x4576=(r20*sj3);
IkReal x4577=(r00*sj5);
IkReal x4578=(cj3*r11);
IkReal x4579=((0.0160344678271334)*r12);
IkReal x4580=((0.433012903784321)*r11);
IkReal x4581=(cj5*r11);
IkReal x4582=(r10*sj3);
IkReal x4583=(r00*sj3);
IkReal x4584=((0.433012903784321)*sj3);
IkReal x4585=(cj5*sj4);
IkReal x4586=(r20*sj5);
IkReal x4587=((0.433012903784321)*r21);
IkReal x4588=(sj0*sj1);
IkReal x4589=(cj3*r01);
IkReal x4590=(cj5*r21);
IkReal x4591=((0.0160344678271334)*r02);
IkReal x4592=(cj5*r01);
IkReal x4593=((0.250000349687704)*sj3);
IkReal x4594=(cj1*x4560);
IkReal x4595=((0.500000349687582)*x4585);
IkReal x4596=((0.27144)*x4561);
IkReal x4597=(cj4*x4584);
IkReal x4598=(sj1*x4560);
IkReal x4599=((0.866025201892125)*cj3*sj4);
IkReal x4600=(cj1*x4561);
IkReal x4601=((1.0)*x4561);
evalcond[0]=((((-0.250000349687704)*r22))+x4598+((cj5*x4587))+(((-1.0)*x4566*x4587))+x4600+(((0.866025201892125)*r21*x4569))+(((-1.0)*r22*x4565))+((sj5*x4564))+(((-0.866025201892125)*r20*x4585))+(((-1.0)*x4562*x4564)));
evalcond[1]=((((-1.0)*x4566*x4568))+(((-0.250000349687704)*r02))+(((-0.866025201892125)*r00*x4585))+(((0.433012903784321)*x4577))+(((-1.0)*x4573*x4601))+((cj5*x4568))+(((-1.0)*r02*x4565))+(((-0.433012903784321)*r00*x4562))+(((0.866025201892125)*r01*x4569))+((cj0*x4594)));
evalcond[2]=((((-0.433012903784321)*r10*x4562))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x4571))+((sj0*x4594))+((cj5*x4580))+(((-1.0)*x4566*x4580))+(((-1.0)*x4588*x4601))+(((-0.866025201892125)*r10*x4585))+(((-1.0)*r12*x4565))+(((0.866025201892125)*r11*x4569)));
evalcond[3]=((((-0.27144)*x4598))+(((0.0185150129489311)*r20*x4585))+(((0.00925751294893567)*r20*x4562))+(((-1.0)*x4575))+(((0.00925751294893567)*r21*x4566))+(((0.41)*cj1))+((cj4*x4575))+(((-1.0)*pz))+(((0.0648043305514941)*x4590))+(((0.0648043305514941)*x4586))+(((-0.0185150129489311)*r21*x4569))+(((-1.0)*cj1*x4596)));
evalcond[4]=((((-1.0)*x4591))+(((-0.0185150129489311)*r01*x4569))+((cj4*x4591))+((x4573*x4596))+(((-0.41)*x4573))+(((0.00925751294893567)*r00*x4562))+(((0.0185150129489311)*r00*x4585))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4566))+(((0.0648043305514941)*x4577))+(((0.0648043305514941)*x4592))+(((0.0098)*sj0))+(((-0.27144)*cj0*x4594)));
evalcond[5]=((((0.0185150129489311)*r10*x4585))+(((-0.0185150129489311)*r11*x4569))+(((-1.0)*x4579))+(((0.00925751294893567)*r11*x4566))+(((-0.41)*x4588))+((cj4*x4579))+(((0.00925751294893567)*r10*x4562))+(((-1.0)*py))+(((0.0648043305514941)*x4571))+(((0.0648043305514941)*x4581))+(((-0.27144)*sj0*x4594))+(((-0.0098)*cj0))+((x4588*x4596)));
evalcond[6]=((((-1.0)*r22*x4584))+((r22*x4597))+((r22*x4599))+(((-1.0)*x4594))+((sj1*x4561))+(((-1.0)*r20*x4566*x4567))+((x4563*x4595))+((r20*x4572*x4585))+((r21*x4566*x4593))+(((0.250000349687704)*x4562*x4576))+((r20*x4569*x4574))+((x4570*x4590))+(((-1.0)*r21*x4569*x4572))+((x4562*x4563))+((x4570*x4586)));
evalcond[7]=((((0.250000349687704)*x4562*x4583))+((cj0*x4600))+(((-1.0)*r00*x4566*x4567))+((r02*x4597))+((r02*x4599))+((r01*x4574*x4585))+(((-1.0)*r01*x4569*x4572))+((r00*x4569*x4574))+((x4562*x4589))+(((-1.0)*r02*x4584))+((x4570*x4577))+((r01*x4566*x4593))+((x4570*x4592))+((x4560*x4573))+((r00*x4572*x4585)));
evalcond[8]=((((0.250000349687704)*x4562*x4582))+((r10*x4569*x4574))+(((-1.0)*r10*x4566*x4567))+((sj4*x4574*x4581))+((sj0*x4600))+((x4570*x4571))+((r10*x4572*x4585))+((x4560*x4588))+((r11*x4566*x4593))+(((-1.0)*r12*x4584))+(((-1.0)*r11*x4569*x4572))+((r12*x4597))+((r12*x4599))+((x4570*x4581))+((x4562*x4578)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4602=(cj0*r20);
IkReal x4603=(cj1*r00);
IkReal x4604=(r02*sj1);
IkReal x4605=(r00*sj1);
IkReal x4606=((0.433012903784321)*sj5);
IkReal x4607=(cj4*sj1);
IkReal x4608=((0.749999650312296)*cj4);
IkReal x4609=(cj0*r22);
IkReal x4610=(r01*sj1);
IkReal x4611=(cj1*cj4);
IkReal x4612=(cj0*r21);
IkReal x4613=(cj1*r02);
IkReal x4614=((0.866025201892125)*cj5*sj4);
IkReal x4615=((0.866025201892125)*sj4*sj5);
IkReal x4616=((0.433012903784321)*cj5*r01);
IkReal x4617=((0.433012903784321)*cj5*x4612);
CheckValue<IkReal> x4618 = IKatan2WithCheck(IkReal(((((-1.0)*sj1*x4602*x4606))+(((0.250000349687704)*sj1*x4609))+(((-1.0)*sj1*x4612*x4615))+((x4608*x4613))+(((-1.0)*x4603*x4606))+(((-1.0)*sj1*x4617))+((x4611*x4616))+((x4602*x4606*x4607))+(((0.250000349687704)*x4613))+(((0.749999650312296)*x4607*x4609))+((cj4*x4603*x4606))+((x4603*x4614))+(((-1.0)*cj1*x4616))+((x4607*x4617))+((sj1*x4602*x4614))+(((-1.0)*cj1*r01*x4615)))),IkReal((((cj1*x4608*x4609))+(((0.433012903784321)*cj5*x4610))+((x4605*x4606))+((x4602*x4606*x4611))+(((-1.0)*cj1*x4602*x4606))+((x4611*x4617))+(((-1.0)*x4607*x4616))+(((-1.0)*x4605*x4614))+(((0.250000349687704)*cj1*x4609))+(((-0.250000349687704)*x4604))+(((-1.0)*cj1*x4612*x4615))+((x4610*x4615))+(((-1.0)*cj1*x4617))+(((-1.0)*x4604*x4608))+((cj1*x4602*x4614))+(((-1.0)*cj4*x4605*x4606)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4618.valid){
continue;
}
CheckValue<IkReal> x4619=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4619.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4618.value)+(((1.5707963267949)*(x4619.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4620=IKsin(j2);
IkReal x4621=IKcos(j2);
IkReal x4622=(cj4*sj5);
IkReal x4623=(cj3*r21);
IkReal x4624=((0.433012903784321)*r20);
IkReal x4625=((0.749999650312296)*cj4);
IkReal x4626=(cj4*cj5);
IkReal x4627=((1.0)*cj3);
IkReal x4628=((0.433012903784321)*r01);
IkReal x4629=(sj4*sj5);
IkReal x4630=((0.749999650312296)*sj3);
IkReal x4631=(r10*sj5);
IkReal x4632=((0.500000349687582)*sj3);
IkReal x4633=(cj0*sj1);
IkReal x4634=((0.500000349687582)*cj3);
IkReal x4635=((0.0160344678271334)*r22);
IkReal x4636=(r20*sj3);
IkReal x4637=(r00*sj5);
IkReal x4638=(cj3*r11);
IkReal x4639=((0.0160344678271334)*r12);
IkReal x4640=((0.433012903784321)*r11);
IkReal x4641=(cj5*r11);
IkReal x4642=(r10*sj3);
IkReal x4643=(r00*sj3);
IkReal x4644=((0.433012903784321)*sj3);
IkReal x4645=(cj5*sj4);
IkReal x4646=(r20*sj5);
IkReal x4647=((0.433012903784321)*r21);
IkReal x4648=(sj0*sj1);
IkReal x4649=(cj3*r01);
IkReal x4650=(cj5*r21);
IkReal x4651=((0.0160344678271334)*r02);
IkReal x4652=(cj5*r01);
IkReal x4653=((0.250000349687704)*sj3);
IkReal x4654=(cj1*x4620);
IkReal x4655=((0.500000349687582)*x4645);
IkReal x4656=((0.27144)*x4621);
IkReal x4657=(cj4*x4644);
IkReal x4658=(sj1*x4620);
IkReal x4659=((0.866025201892125)*cj3*sj4);
IkReal x4660=(cj1*x4621);
IkReal x4661=((1.0)*x4621);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x4624))+(((-1.0)*r22*x4625))+x4660+x4658+(((-0.866025201892125)*r20*x4645))+(((0.866025201892125)*r21*x4629))+((cj5*x4647))+(((-1.0)*x4626*x4647))+(((-1.0)*x4622*x4624)));
evalcond[1]=((((0.433012903784321)*x4637))+(((-0.250000349687704)*r02))+((cj0*x4654))+(((-1.0)*r02*x4625))+(((-1.0)*x4626*x4628))+(((-0.866025201892125)*r00*x4645))+(((-0.433012903784321)*r00*x4622))+(((0.866025201892125)*r01*x4629))+((cj5*x4628))+(((-1.0)*x4633*x4661)));
evalcond[2]=(((sj0*x4654))+(((0.433012903784321)*x4631))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x4622))+(((-1.0)*x4648*x4661))+((cj5*x4640))+(((-1.0)*r12*x4625))+(((-0.866025201892125)*r10*x4645))+(((-1.0)*x4626*x4640))+(((0.866025201892125)*r11*x4629)));
evalcond[3]=((((0.00925751294893567)*r21*x4626))+(((-1.0)*cj1*x4656))+(((-1.0)*x4635))+((cj4*x4635))+(((0.0185150129489311)*r20*x4645))+(((0.41)*cj1))+(((-0.0185150129489311)*r21*x4629))+(((-1.0)*pz))+(((0.0648043305514941)*x4650))+(((0.0648043305514941)*x4646))+(((0.00925751294893567)*r20*x4622))+(((-0.27144)*x4658)));
evalcond[4]=((((-1.0)*x4651))+(((-0.41)*x4633))+(((-1.0)*px))+(((-0.0185150129489311)*r01*x4629))+(((-0.27144)*cj0*x4654))+((cj4*x4651))+((x4633*x4656))+(((0.0648043305514941)*x4652))+(((0.0648043305514941)*x4637))+(((0.00925751294893567)*r00*x4622))+(((0.00925751294893567)*r01*x4626))+(((0.0185150129489311)*r00*x4645))+(((0.0098)*sj0)));
evalcond[5]=((((-0.27144)*sj0*x4654))+(((-0.0185150129489311)*r11*x4629))+(((-1.0)*x4639))+((cj4*x4639))+(((0.00925751294893567)*r10*x4622))+(((0.0185150129489311)*r10*x4645))+(((-1.0)*py))+(((0.00925751294893567)*r11*x4626))+((x4648*x4656))+(((-0.41)*x4648))+(((0.0648043305514941)*x4631))+(((-0.0098)*cj0))+(((0.0648043305514941)*x4641)));
evalcond[6]=(((sj1*x4621))+((r21*x4626*x4653))+((x4630*x4650))+(((-1.0)*r20*x4626*x4627))+((x4623*x4655))+((x4630*x4646))+((r20*x4629*x4634))+(((-1.0)*x4654))+(((-1.0)*r22*x4644))+((r20*x4632*x4645))+((x4622*x4623))+((r22*x4657))+((r22*x4659))+(((-1.0)*r21*x4629*x4632))+(((0.250000349687704)*x4622*x4636)));
evalcond[7]=((((-1.0)*r02*x4644))+((r01*x4626*x4653))+(((0.250000349687704)*x4622*x4643))+((x4620*x4633))+((x4630*x4652))+((x4622*x4649))+((x4630*x4637))+(((-1.0)*r00*x4626*x4627))+((r00*x4632*x4645))+((r02*x4657))+((r02*x4659))+((r01*x4634*x4645))+((r00*x4629*x4634))+(((-1.0)*r01*x4629*x4632))+((cj0*x4660)));
evalcond[8]=(((x4620*x4648))+((r10*x4629*x4634))+((r12*x4657))+((r12*x4659))+(((0.250000349687704)*x4622*x4642))+(((-1.0)*r11*x4629*x4632))+((r11*x4626*x4653))+((sj0*x4660))+((x4630*x4631))+((x4630*x4641))+(((-1.0)*r12*x4644))+(((-1.0)*r10*x4626*x4627))+((r10*x4632*x4645))+((sj4*x4634*x4641))+((x4622*x4638)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4662=((0.26409636501044)*cj4);
IkReal x4663=(r20*sj5);
IkReal x4664=(cj5*r21);
IkReal x4665=(r10*sj5);
IkReal x4666=(cj5*r11);
IkReal x4667=((0.528192360616262)*sj4);
IkReal x4668=((0.18234135315471)*sj0);
IkReal x4669=(r12*sj0);
IkReal x4670=((0.10827950965428)*cj4*sj0);
IkReal x4671=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x4672=IKPowWithIntegerCheck(sj0,-2);
if(!x4672.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4672.value)*(((((-1.0)*cj5*r10*x4671))+((r11*sj5*x4671))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x4669))+((x4665*x4668))+(((-1.0)*x4665*x4670))+(((-1.0)*py*sj0))+((x4666*x4668))+(((-1.0)*x4666*x4670))+(((-0.0838945627463637)*x4669)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4667))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4667))+((x4662*x4663))+((x4662*x4664))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4663))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4672.value)*(((((-1.0)*cj5*r10*x4671))+((r11*sj5*x4671))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x4669))+((x4665*x4668))+(((-1.0)*x4665*x4670))+(((-1.0)*py*sj0))+((x4666*x4668))+(((-1.0)*x4666*x4670))+(((-0.0838945627463637)*x4669))))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4667))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4667))+((x4662*x4663))+((x4662*x4664))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4663))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4672.value)*(((((-1.0)*cj5*r10*x4671))+((r11*sj5*x4671))+(((-0.0098)*cj0*sj0))+(((-0.187545437253636)*cj4*x4669))+((x4665*x4668))+(((-1.0)*x4665*x4670))+(((-1.0)*py*sj0))+((x4666*x4668))+(((-1.0)*x4666*x4670))+(((-0.0838945627463637)*x4669))))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4667))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4667))+((x4662*x4663))+((x4662*x4664))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4663))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4673=IKsin(j1);
IkReal x4674=IKcos(j1);
IkReal x4675=sj0*sj0;
IkReal x4676=cj0*cj0;
IkReal x4677=((0.0098)*cj0);
IkReal x4678=(cj0*cj5);
IkReal x4679=(cj5*sj0);
IkReal x4680=((0.0648043305514941)*r21);
IkReal x4681=(r00*sj5);
IkReal x4682=((0.20357990508077)*sj3);
IkReal x4683=((0.135720094919197)*r21);
IkReal x4684=((1.0)*px);
IkReal x4685=((0.117537022603216)*sj3);
IkReal x4686=((0.00925751294893567)*cj4);
IkReal x4687=(r10*sj4);
IkReal x4688=(sj0*sj5);
IkReal x4689=(cj4*sj0);
IkReal x4690=(r20*sj5);
IkReal x4691=((0.10827950965428)*cj4);
IkReal x4692=(cj3*sj4);
IkReal x4693=((0.135720094919197)*sj5);
IkReal x4694=((0.117537022603216)*r11);
IkReal x4695=(cj5*r01);
IkReal x4696=(cj4*r02);
IkReal x4697=((0.117537022603216)*cj4);
IkReal x4698=((0.0160344678271334)*r02);
IkReal x4699=((0.0648043305514941)*r11);
IkReal x4700=((0.0160344678271334)*r12);
IkReal x4701=(cj0*cj4);
IkReal x4702=(cj5*sj3);
IkReal x4703=((0.0678600949192303)*cj4);
IkReal x4704=(r10*sj5);
IkReal x4705=((1.0)*py);
IkReal x4706=(cj5*r00);
IkReal x4707=(cj0*r21);
IkReal x4708=(r11*sj5);
IkReal x4709=((0.0160344678271334)*r22);
IkReal x4710=(r00*sj4);
IkReal x4711=((1.0)*pz);
IkReal x4712=(r22*sj0);
IkReal x4713=(sj3*sj4);
IkReal x4714=(cj5*r21);
IkReal x4715=(r21*sj3);
IkReal x4716=(cj0*r22);
IkReal x4717=((0.0185150129489311)*sj4);
IkReal x4718=(cj5*r11);
IkReal x4719=(r01*sj5);
IkReal x4720=((0.216558867852667)*sj4);
IkReal x4721=((0.135720094919197)*r20);
IkReal x4722=(sj0*x4677);
IkReal x4723=(sj4*x4688);
IkReal x4724=((0.27144)*cj3*cj4);
IkReal x4725=(r11*x4686);
IkReal x4726=((0.41)*x4673);
IkReal x4727=(cj0*x4704);
IkReal x4728=(sj5*x4717);
IkReal x4729=((0.41)*x4674);
IkReal x4730=(cj0*sj0*x4726);
evalcond[0]=((((-0.18234135315471)*x4690))+((cj5*r20*x4720))+((x4690*x4691))+((x4691*x4714))+(((-1.0)*x4729))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x4720))+pz+(((-0.18234135315471)*x4714))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.187545437253636)*r12*x4689))+(((0.18234135315471)*r11*x4679))+(((0.18234135315471)*r10*x4688))+(((-0.216558867852667)*x4679*x4687))+((r11*x4688*x4720))+(((-1.0)*x4722))+(((-1.0)*sj0*x4705))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x4675*x4726))+(((-1.0)*r11*x4679*x4691))+(((-1.0)*r10*x4688*x4691)));
evalcond[2]=((((-1.0)*cj0*x4684))+(((-1.0)*cj0*x4681*x4691))+(((-0.0838945627463637)*cj0*r02))+(((-0.216558867852667)*x4678*x4710))+(((-0.187545437253636)*cj0*x4696))+x4722+(((0.18234135315471)*cj0*x4681))+((cj0*x4719*x4720))+(((-1.0)*x4676*x4726))+(((-1.0)*r01*x4678*x4691))+(((0.18234135315471)*r01*x4678)));
evalcond[3]=((((0.0648043305514941)*r20*x4688))+((cj3*x4687*x4693))+((r11*x4702*x4703))+(((0.235073880801598)*r12*x4692))+((cj4*r12*x4685))+(((-1.0)*r11*x4693*x4713))+(((-1.0)*sj0*x4711))+((sj0*x4729))+((r21*x4679*x4686))+((r20*x4686*x4688))+(((-1.0)*sj0*x4709))+((r20*x4679*x4717))+((sj3*x4703*x4704))+((x4679*x4680))+((x4708*x4724))+(((0.135720094919197)*x4692*x4718))+((x4689*x4709))+(((0.135720094919197)*x4687*x4702))+(((-1.0)*r21*x4688*x4717))+(((-1.0)*cj5*r10*x4724))+((x4682*x4718))+((x4682*x4704))+(((-1.0)*r12*x4685)));
evalcond[4]=(((cj0*x4729))+(((-1.0)*cj0*x4711))+((x4682*x4695))+((r21*x4678*x4686))+(((-1.0)*cj0*x4709))+(((-1.0)*x4707*x4728))+(((0.135720094919197)*x4692*x4695))+((x4678*x4680))+(((-1.0)*x4706*x4724))+(((0.135720094919197)*x4681*x4692))+((x4681*x4682))+(((-1.0)*r02*x4685))+(((-1.0)*r01*x4693*x4713))+(((0.235073880801598)*r02*x4692))+((sj3*x4681*x4703))+(((0.0648043305514941)*cj0*x4690))+(((0.135720094919197)*x4702*x4710))+((cj0*x4686*x4690))+((sj3*x4695*x4703))+((x4701*x4709))+((x4719*x4724))+((x4685*x4696))+((r20*x4678*x4717)));
evalcond[5]=((((-1.0)*x4679*x4713*x4721))+(((-1.0)*sj0*x4726))+(((-1.0)*r20*x4682*x4688))+(((0.0648043305514941)*x4704))+(((-1.0)*x4679*x4703*x4715))+(((-1.0)*r20*sj3*x4688*x4703))+(((-1.0)*r22*x4685*x4689))+(((-1.0)*x4688*x4692*x4721))+(((-1.0)*x4679*x4683*x4692))+((cj4*x4700))+(((-1.0)*x4677))+((x4686*x4718))+(((-1.0)*r21*x4679*x4682))+((r20*x4679*x4724))+((x4685*x4712))+((x4686*x4704))+((x4683*x4688*x4713))+(((-1.0)*x4708*x4717))+(((-0.235073880801598)*x4692*x4712))+((cj5*x4699))+(((-1.0)*x4700))+(((-1.0)*x4705))+(((-1.0)*r21*x4688*x4724))+(((0.0185150129489311)*cj5*x4687)));
evalcond[6]=((((0.0160344678271334)*x4696))+(((0.0648043305514941)*x4681))+(((-0.27144)*cj3*r21*sj5*x4701))+(((0.0648043305514941)*x4695))+((r20*x4678*x4724))+(((-0.135720094919197)*cj0*x4690*x4692))+(((-1.0)*r21*x4678*x4682))+((x4681*x4686))+(((-1.0)*cj0*x4726))+(((-1.0)*r22*x4685*x4701))+(((-1.0)*x4678*x4713*x4721))+((x4685*x4716))+((x4706*x4717))+((cj0*sj5*x4683*x4713))+(((-1.0)*x4698))+(((-0.0678600949192303)*sj3*x4690*x4701))+((x4686*x4695))+(((-1.0)*x4684))+(((-1.0)*x4678*x4703*x4715))+(((-0.235073880801598)*x4692*x4716))+(((-1.0)*x4678*x4683*x4692))+(((-1.0)*x4717*x4719))+(((0.0098)*sj0))+(((-1.0)*cj0*x4682*x4690)));
evalcond[7]=((((0.117537022603216)*x4727))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*cj4*x4678*x4694))+(((-0.235073880801598)*x4678*x4687))+(((0.0648043305514941)*sj0*x4681))+(((-0.20357990508077)*r12*x4701))+(((0.0185150129489311)*x4679*x4710))+((x4678*x4694))+((sj0*x4681*x4686))+(((-1.0)*x4697*x4727))+(((-1.0)*x4730))+(((-1.0)*sj0*x4698))+(((0.235073880801598)*cj0*sj4*x4708))+(((0.0098)*x4675))+(((-1.0)*sj0*x4684))+(((0.0648043305514941)*r01*x4679))+((r01*x4679*x4686))+(((-1.0)*r01*x4688*x4717))+((x4689*x4698)));
evalcond[8]=((((-1.0)*cj0*x4708*x4717))+(((-1.0)*cj0*x4705))+(((-1.0)*cj0*x4700))+(((-0.117537022603216)*x4681*x4689))+((x4678*x4699))+(((-0.20357990508077)*r02*x4689))+(((-0.0098)*x4676))+(((-1.0)*x4730))+(((-0.235073880801598)*x4679*x4710))+(((0.235073880801598)*r01*x4723))+(((-1.0)*r01*x4679*x4697))+((x4700*x4701))+((x4678*x4725))+(((0.117537022603216)*sj0*x4681))+(((0.0185150129489311)*x4678*x4687))+(((0.117537022603216)*r01*x4679))+(((-0.0678600949192303)*r02*sj0))+(((0.0648043305514941)*x4727))+((x4686*x4727)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4731=((0.250000349687704)*sj1);
IkReal x4732=(cj1*cj4);
IkReal x4733=((0.749999650312296)*r22);
IkReal x4734=(cj4*sj1);
IkReal x4735=((0.749999650312296)*r02);
IkReal x4736=((0.250000349687704)*cj1);
IkReal x4737=((0.433012903784321)*r00*sj5);
IkReal x4738=((0.433012903784321)*r20*sj5);
IkReal x4739=((0.433012903784321)*cj5*r01);
IkReal x4740=((0.433012903784321)*cj5*r21);
IkReal x4741=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4742=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4743=((0.866025201892125)*r01*sj4*sj5);
IkReal x4744=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x4734*x4738))+(((-1.0)*sj1*x4738))+(((-1.0)*cj1*x4737))+(((-1.0)*cj1*x4739))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4740))+((x4734*x4740))+((r00*x4742))+(((-1.0)*cj1*x4743))+((r20*x4741))+((x4732*x4739))+((x4732*x4735))+((x4732*x4737))+((r02*x4736))+((x4733*x4734))+((r22*x4731)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4734*x4739))+(((-1.0)*x4734*x4735))+(((-1.0)*x4734*x4737))+(((-1.0)*cj1*x4738))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((sj1*x4739))+((sj1*x4737))+(((-1.0)*r00*x4741))+((x4732*x4738))+((x4732*x4733))+((r22*x4736))+((x4732*x4740))+((sj1*x4743))+(((-1.0)*r02*x4731)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4734*x4738))+(((-1.0)*sj1*x4738))+(((-1.0)*cj1*x4737))+(((-1.0)*cj1*x4739))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4740))+((x4734*x4740))+((r00*x4742))+(((-1.0)*cj1*x4743))+((r20*x4741))+((x4732*x4739))+((x4732*x4735))+((x4732*x4737))+((r02*x4736))+((x4733*x4734))+((r22*x4731))))+IKsqr(((((-1.0)*x4734*x4739))+(((-1.0)*x4734*x4735))+(((-1.0)*x4734*x4737))+(((-1.0)*cj1*x4738))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((sj1*x4739))+((sj1*x4737))+(((-1.0)*r00*x4741))+((x4732*x4738))+((x4732*x4733))+((r22*x4736))+((x4732*x4740))+((sj1*x4743))+(((-1.0)*r02*x4731))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4734*x4738))+(((-1.0)*sj1*x4738))+(((-1.0)*cj1*x4737))+(((-1.0)*cj1*x4739))+(((-1.0)*sj1*x4744))+(((-1.0)*sj1*x4740))+((x4734*x4740))+((r00*x4742))+(((-1.0)*cj1*x4743))+((r20*x4741))+((x4732*x4739))+((x4732*x4735))+((x4732*x4737))+((r02*x4736))+((x4733*x4734))+((r22*x4731))), ((((-1.0)*x4734*x4739))+(((-1.0)*x4734*x4735))+(((-1.0)*x4734*x4737))+(((-1.0)*cj1*x4738))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((sj1*x4739))+((sj1*x4737))+(((-1.0)*r00*x4741))+((x4732*x4738))+((x4732*x4733))+((r22*x4736))+((x4732*x4740))+((sj1*x4743))+(((-1.0)*r02*x4731))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4745=IKsin(j2);
IkReal x4746=IKcos(j2);
IkReal x4747=((0.749999650312296)*sj3);
IkReal x4748=(cj5*r01);
IkReal x4749=(r00*sj5);
IkReal x4750=(cj4*cj5);
IkReal x4751=((1.0)*cj3);
IkReal x4752=(r21*sj3);
IkReal x4753=(cj4*sj5);
IkReal x4754=(cj3*r21);
IkReal x4755=((0.500000349687582)*sj4);
IkReal x4756=((0.433012903784321)*r20);
IkReal x4757=(cj4*r22);
IkReal x4758=((0.433012903784321)*sj3);
IkReal x4759=((0.433012903784321)*cj4);
IkReal x4760=(r01*sj5);
IkReal x4761=(r20*sj5);
IkReal x4762=((0.0160344678271334)*r02);
IkReal x4763=(cj4*r02);
IkReal x4764=((0.00925751294893567)*cj4);
IkReal x4765=((0.0185150129489311)*sj4);
IkReal x4766=(r21*sj5);
IkReal x4767=(cj5*r21);
IkReal x4768=((0.866025201892125)*sj4);
IkReal x4769=(cj5*r20);
IkReal x4770=(cj5*r00);
IkReal x4771=((0.250000349687704)*sj3);
IkReal x4772=(cj1*x4746);
IkReal x4773=(sj1*x4745);
IkReal x4774=(cj1*x4745);
IkReal x4775=(sj1*x4746);
IkReal x4776=(x4772+x4773);
evalcond[0]=((((-1.0)*x4753*x4756))+(((-0.250000349687704)*r22))+((x4766*x4768))+(((-0.433012903784321)*r21*x4750))+((sj5*x4756))+(((0.433012903784321)*x4767))+x4776+(((-1.0)*x4768*x4769))+(((-0.749999650312296)*x4757)));
evalcond[1]=((((-1.0)*x4775))+(((-0.250000349687704)*r02))+(((-1.0)*x4749*x4759))+(((-1.0)*x4748*x4759))+x4774+(((0.433012903784321)*x4749))+(((0.433012903784321)*x4748))+(((-0.749999650312296)*x4763))+((x4760*x4768))+(((-1.0)*x4768*x4770)));
evalcond[2]=((((0.0648043305514941)*x4767))+(((0.0648043305514941)*x4761))+(((0.41)*cj1))+(((-1.0)*x4765*x4766))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4772))+(((-0.27144)*x4773))+(((0.00925751294893567)*r20*x4753))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x4750))+(((0.0160344678271334)*x4757))+((x4765*x4769)));
evalcond[3]=((((-1.0)*x4762))+(((-1.0)*x4760*x4765))+(((-0.41)*sj1))+(((-0.27144)*x4774))+(((0.0648043305514941)*x4749))+(((0.0648043305514941)*x4748))+((x4765*x4770))+(((-1.0)*px))+(((0.27144)*x4775))+((cj4*x4762))+((x4749*x4764))+((x4748*x4764)));
evalcond[4]=(((cj4*x4748*x4771))+((cj3*r01*x4753))+((sj3*x4755*x4770))+((x4758*x4763))+(((-1.0)*sj3*x4755*x4760))+((cj3*r02*x4768))+x4776+((x4747*x4748))+((x4747*x4749))+((cj3*x4748*x4755))+((cj3*x4749*x4755))+(((-1.0)*r02*x4758))+(((-1.0)*r00*x4750*x4751))+((cj4*x4749*x4771)));
evalcond[5]=((((-1.0)*x4774))+((r20*x4753*x4771))+((x4747*x4761))+((x4747*x4767))+(((0.250000349687704)*x4750*x4752))+((x4753*x4754))+(((-1.0)*r20*x4750*x4751))+((cj5*x4754*x4755))+x4775+(((-1.0)*r22*x4758))+((cj3*r22*x4768))+((x4757*x4758))+((sj3*x4755*x4769))+(((-1.0)*sj5*x4752*x4755))+((cj3*x4755*x4761)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4777=(r02*sj1);
IkReal x4778=(cj1*cj4);
IkReal x4779=((0.749999650312296)*r22);
IkReal x4780=(cj4*sj1);
IkReal x4781=((0.250000349687704)*r22);
IkReal x4782=((0.433012903784321)*r00*sj5);
IkReal x4783=((0.433012903784321)*r20*sj5);
IkReal x4784=((0.433012903784321)*cj5*r01);
IkReal x4785=((0.433012903784321)*cj5*r21);
IkReal x4786=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4787=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4788=((0.866025201892125)*r01*sj4*sj5);
IkReal x4789=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x4780*x4783))+((x4780*x4785))+((cj1*x4784))+((cj1*x4788))+((cj1*x4782))+(((-0.749999650312296)*r02*x4778))+((x4779*x4780))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*r00*x4787))+((r20*x4786))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4778*x4782))+(((-1.0)*x4778*x4784))+((sj1*x4781)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x4780*x4782))+((x4780*x4784))+((cj1*x4781))+((x4778*x4783))+((x4778*x4785))+(((0.250000349687704)*x4777))+((r00*x4786))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4788))+(((-1.0)*sj1*x4782))+(((-1.0)*cj1*x4785))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4783))+((x4778*x4779))+((r20*x4787))+(((0.749999650312296)*cj4*x4777)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4780*x4783))+((x4780*x4785))+((cj1*x4784))+((cj1*x4788))+((cj1*x4782))+(((-0.749999650312296)*r02*x4778))+((x4779*x4780))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*r00*x4787))+((r20*x4786))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4778*x4782))+(((-1.0)*x4778*x4784))+((sj1*x4781))))+IKsqr((((x4780*x4782))+((x4780*x4784))+((cj1*x4781))+((x4778*x4783))+((x4778*x4785))+(((0.250000349687704)*x4777))+((r00*x4786))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4788))+(((-1.0)*sj1*x4782))+(((-1.0)*cj1*x4785))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4783))+((x4778*x4779))+((r20*x4787))+(((0.749999650312296)*cj4*x4777))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4780*x4783))+((x4780*x4785))+((cj1*x4784))+((cj1*x4788))+((cj1*x4782))+(((-0.749999650312296)*r02*x4778))+((x4779*x4780))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*r00*x4787))+((r20*x4786))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*x4778*x4782))+(((-1.0)*x4778*x4784))+((sj1*x4781))), (((x4780*x4782))+((x4780*x4784))+((cj1*x4781))+((x4778*x4783))+((x4778*x4785))+(((0.250000349687704)*x4777))+((r00*x4786))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4788))+(((-1.0)*sj1*x4782))+(((-1.0)*cj1*x4785))+(((-1.0)*cj1*x4789))+(((-1.0)*cj1*x4783))+((x4778*x4779))+((r20*x4787))+(((0.749999650312296)*cj4*x4777))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4790=IKcos(j2);
IkReal x4791=IKsin(j2);
IkReal x4792=((0.433012903784321)*sj3);
IkReal x4793=((0.749999650312296)*sj3);
IkReal x4794=(r00*sj5);
IkReal x4795=(cj4*cj5);
IkReal x4796=((1.0)*cj3);
IkReal x4797=(cj5*r01);
IkReal x4798=(r21*sj3);
IkReal x4799=(cj4*sj5);
IkReal x4800=(cj3*r21);
IkReal x4801=((0.500000349687582)*sj4);
IkReal x4802=((0.433012903784321)*r20);
IkReal x4803=(cj4*r22);
IkReal x4804=(r20*sj5);
IkReal x4805=((0.0160344678271334)*r02);
IkReal x4806=(cj4*r02);
IkReal x4807=(r01*sj5);
IkReal x4808=(cj5*r00);
IkReal x4809=((0.0185150129489311)*sj4);
IkReal x4810=(r21*sj5);
IkReal x4811=(cj5*r21);
IkReal x4812=((0.866025201892125)*sj4);
IkReal x4813=(cj5*r20);
IkReal x4814=((0.250000349687704)*sj3);
IkReal x4815=(sj1*x4790);
IkReal x4816=(cj1*x4790);
IkReal x4817=(sj1*x4791);
IkReal x4818=(cj1*x4791);
IkReal x4819=((1.0)*x4818);
evalcond[0]=((((-0.433012903784321)*r21*x4795))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x4803))+(((-1.0)*x4799*x4802))+((x4810*x4812))+((sj5*x4802))+x4817+x4816+(((-1.0)*x4812*x4813))+(((0.433012903784321)*x4811)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4808*x4812))+((x4807*x4812))+(((-1.0)*x4819))+(((-0.433012903784321)*r01*x4795))+(((-0.749999650312296)*x4806))+(((0.433012903784321)*x4797))+(((0.433012903784321)*x4794))+(((-0.433012903784321)*cj4*x4794))+x4815);
evalcond[2]=(((x4809*x4813))+(((-1.0)*x4809*x4810))+(((0.00925751294893567)*r20*x4799))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x4795))+(((0.0648043305514941)*x4804))+(((-1.0)*pz))+(((-0.27144)*x4817))+(((-0.27144)*x4816))+(((0.0160344678271334)*x4803))+(((0.0648043305514941)*x4811)));
evalcond[3]=((((0.27144)*x4818))+(((0.41)*sj1))+(((-1.0)*px))+(((0.0648043305514941)*x4797))+(((0.0648043305514941)*x4794))+(((-0.27144)*x4815))+(((0.00925751294893567)*r01*x4795))+(((-1.0)*x4807*x4809))+((cj4*x4805))+((x4808*x4809))+(((-1.0)*x4805))+(((0.00925751294893567)*cj4*x4794)));
evalcond[4]=(((r20*x4799*x4814))+((sj3*x4801*x4813))+((cj3*r22*x4812))+((x4792*x4803))+(((-1.0)*x4819))+((cj5*x4800*x4801))+(((-1.0)*sj5*x4798*x4801))+(((-1.0)*r22*x4792))+((x4793*x4811))+((cj3*x4801*x4804))+(((0.250000349687704)*x4795*x4798))+((x4793*x4804))+x4815+(((-1.0)*r20*x4795*x4796))+((x4799*x4800)));
evalcond[5]=((((-1.0)*sj3*x4801*x4807))+(((-1.0)*r02*x4792))+((x4792*x4806))+((r01*x4795*x4814))+(((-1.0)*x4817))+(((-1.0)*x4816))+((sj3*x4801*x4808))+((x4793*x4797))+((x4793*x4794))+((cj3*r02*x4812))+((cj3*x4794*x4801))+((cj3*x4797*x4801))+(((-1.0)*r00*x4795*x4796))+((cj4*x4794*x4814))+((cj3*r01*x4799)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4820=((0.250000349687704)*r12);
IkReal x4821=((0.749999650312296)*cj4);
IkReal x4822=((0.433012903784321)*sj5);
IkReal x4823=(cj1*r10);
IkReal x4824=(cj1*r22);
IkReal x4825=(cj1*r20);
IkReal x4826=((0.866025201892125)*sj4);
IkReal x4827=(r20*sj1);
IkReal x4828=(r22*sj1);
IkReal x4829=(r10*sj1);
IkReal x4830=(r11*sj1);
IkReal x4831=((0.433012903784321)*cj5);
IkReal x4832=(r21*sj1);
IkReal x4833=(cj1*r21);
IkReal x4834=(cj1*r11);
IkReal x4835=(cj5*sj1*x4826);
IkReal x4836=(cj4*r21*x4831);
if( IKabs((((cj5*x4823*x4826))+(((-1.0)*x4831*x4834))+(((-1.0)*x4831*x4832))+((x4821*x4828))+((cj4*x4822*x4823))+((cj4*x4822*x4827))+(((0.250000349687704)*x4828))+((cj5*x4826*x4827))+(((-1.0)*x4822*x4823))+(((-1.0)*x4822*x4827))+((cj4*x4831*x4834))+((cj4*x4831*x4832))+((cj1*x4820))+(((-1.0)*sj5*x4826*x4832))+(((-1.0)*sj5*x4826*x4834))+((cj1*r12*x4821)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*x4825*x4826))+(((-1.0)*x4831*x4833))+(((-1.0)*r12*sj1*x4821))+((x4821*x4824))+((cj4*x4822*x4825))+(((0.250000349687704)*x4824))+(((-1.0)*x4822*x4825))+((sj5*x4826*x4830))+((cj4*x4831*x4833))+((x4822*x4829))+(((-1.0)*sj1*x4820))+(((-1.0)*cj4*x4830*x4831))+(((-1.0)*sj5*x4826*x4833))+(((-1.0)*cj4*x4822*x4829))+((x4830*x4831))+(((-1.0)*cj5*x4826*x4829)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x4823*x4826))+(((-1.0)*x4831*x4834))+(((-1.0)*x4831*x4832))+((x4821*x4828))+((cj4*x4822*x4823))+((cj4*x4822*x4827))+(((0.250000349687704)*x4828))+((cj5*x4826*x4827))+(((-1.0)*x4822*x4823))+(((-1.0)*x4822*x4827))+((cj4*x4831*x4834))+((cj4*x4831*x4832))+((cj1*x4820))+(((-1.0)*sj5*x4826*x4832))+(((-1.0)*sj5*x4826*x4834))+((cj1*r12*x4821))))+IKsqr((((cj5*x4825*x4826))+(((-1.0)*x4831*x4833))+(((-1.0)*r12*sj1*x4821))+((x4821*x4824))+((cj4*x4822*x4825))+(((0.250000349687704)*x4824))+(((-1.0)*x4822*x4825))+((sj5*x4826*x4830))+((cj4*x4831*x4833))+((x4822*x4829))+(((-1.0)*sj1*x4820))+(((-1.0)*cj4*x4830*x4831))+(((-1.0)*sj5*x4826*x4833))+(((-1.0)*cj4*x4822*x4829))+((x4830*x4831))+(((-1.0)*cj5*x4826*x4829))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x4823*x4826))+(((-1.0)*x4831*x4834))+(((-1.0)*x4831*x4832))+((x4821*x4828))+((cj4*x4822*x4823))+((cj4*x4822*x4827))+(((0.250000349687704)*x4828))+((cj5*x4826*x4827))+(((-1.0)*x4822*x4823))+(((-1.0)*x4822*x4827))+((cj4*x4831*x4834))+((cj4*x4831*x4832))+((cj1*x4820))+(((-1.0)*sj5*x4826*x4832))+(((-1.0)*sj5*x4826*x4834))+((cj1*r12*x4821))), (((cj5*x4825*x4826))+(((-1.0)*x4831*x4833))+(((-1.0)*r12*sj1*x4821))+((x4821*x4824))+((cj4*x4822*x4825))+(((0.250000349687704)*x4824))+(((-1.0)*x4822*x4825))+((sj5*x4826*x4830))+((cj4*x4831*x4833))+((x4822*x4829))+(((-1.0)*sj1*x4820))+(((-1.0)*cj4*x4830*x4831))+(((-1.0)*sj5*x4826*x4833))+(((-1.0)*cj4*x4822*x4829))+((x4830*x4831))+(((-1.0)*cj5*x4826*x4829))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4837=IKsin(j2);
IkReal x4838=IKcos(j2);
IkReal x4839=(cj5*r11);
IkReal x4840=((0.433012903784321)*cj4);
IkReal x4841=(r21*sj5);
IkReal x4842=((0.500000349687582)*sj4);
IkReal x4843=((0.749999650312296)*sj3);
IkReal x4844=(cj3*cj4);
IkReal x4845=(cj5*r10);
IkReal x4846=((0.0185150129489311)*sj4);
IkReal x4847=(r20*sj5);
IkReal x4848=(cj4*r22);
IkReal x4849=(r10*sj5);
IkReal x4850=(r22*sj3);
IkReal x4851=(r11*sj5);
IkReal x4852=((0.00925751294893567)*cj4);
IkReal x4853=(cj5*r21);
IkReal x4854=(r12*sj3);
IkReal x4855=(cj4*r12);
IkReal x4856=(cj5*r20);
IkReal x4857=((0.866025201892125)*sj4);
IkReal x4858=(cj1*x4838);
IkReal x4859=(sj1*x4837);
IkReal x4860=(cj1*x4837);
IkReal x4861=((0.250000349687704)*cj4*sj3);
IkReal x4862=(sj1*x4838);
IkReal x4863=(cj3*x4857);
IkReal x4864=(x4859+x4858);
evalcond[0]=((((-1.0)*x4840*x4853))+(((-0.250000349687704)*r22))+(((-1.0)*x4856*x4857))+(((-0.749999650312296)*x4848))+(((-1.0)*x4840*x4847))+(((0.433012903784321)*x4847))+(((0.433012903784321)*x4853))+((x4841*x4857))+x4864);
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x4839*x4840))+(((-1.0)*x4840*x4849))+(((0.433012903784321)*x4849))+(((-1.0)*x4862))+(((-0.749999650312296)*x4855))+(((0.433012903784321)*x4839))+((x4851*x4857))+x4860+(((-1.0)*x4845*x4857)));
evalcond[2]=((((-1.0)*x4841*x4846))+(((0.0648043305514941)*x4847))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4859))+(((-0.27144)*x4858))+(((-1.0)*pz))+(((0.0648043305514941)*x4853))+(((0.0160344678271334)*x4848))+((x4852*x4853))+((x4846*x4856))+((x4847*x4852)));
evalcond[3]=((((0.0160344678271334)*x4855))+(((0.0648043305514941)*x4849))+(((0.27144)*x4862))+((x4849*x4852))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+((x4845*x4846))+(((-0.27144)*x4860))+((x4839*x4852))+(((-1.0)*py))+(((0.0648043305514941)*x4839))+(((-1.0)*x4846*x4851)));
evalcond[4]=(((x4840*x4854))+((sj3*x4842*x4845))+((r12*x4863))+((cj3*x4842*x4849))+((x4849*x4861))+(((-1.0)*x4844*x4845))+((x4839*x4861))+((cj3*x4839*x4842))+(((-0.433012903784321)*x4854))+(((-1.0)*sj3*x4842*x4851))+((x4839*x4843))+((x4843*x4849))+((x4844*x4851))+x4864);
evalcond[5]=(((x4853*x4861))+(((-1.0)*x4844*x4856))+((x4847*x4861))+((x4840*x4850))+((cj3*x4842*x4847))+((x4841*x4844))+((x4843*x4853))+((r22*x4863))+((cj3*x4842*x4853))+(((-1.0)*sj3*x4841*x4842))+((sj3*x4842*x4856))+(((-1.0)*x4860))+(((-0.433012903784321)*x4850))+((x4843*x4847))+x4862);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4865=((0.250000349687704)*r12);
IkReal x4866=((0.749999650312296)*cj4);
IkReal x4867=(cj1*r22);
IkReal x4868=((0.866025201892125)*sj4);
IkReal x4869=(cj1*r20);
IkReal x4870=(sj1*sj5);
IkReal x4871=((0.433012903784321)*r20);
IkReal x4872=((0.433012903784321)*sj5);
IkReal x4873=(cj1*r10);
IkReal x4874=(r22*sj1);
IkReal x4875=((0.433012903784321)*r10);
IkReal x4876=((0.433012903784321)*cj5);
IkReal x4877=(cj1*r21);
IkReal x4878=(cj1*r11);
IkReal x4879=(r11*sj1);
IkReal x4880=(cj1*cj4*x4872);
IkReal x4881=(cj5*sj1*x4868);
IkReal x4882=(cj4*r21*x4876);
if( IKabs(((((-1.0)*cj4*x4876*x4878))+(((-1.0)*cj1*r12*x4866))+((cj4*x4870*x4871))+(((-1.0)*r21*sj1*x4876))+(((-1.0)*cj4*x4872*x4873))+((r20*x4881))+((x4872*x4873))+((x4866*x4874))+(((-1.0)*x4870*x4871))+((sj5*x4868*x4878))+(((0.250000349687704)*x4874))+((sj1*x4882))+(((-1.0)*cj5*x4868*x4873))+((x4876*x4878))+(((-1.0)*cj1*x4865))+(((-1.0)*r21*x4868*x4870)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4876*x4879))+(((-1.0)*x4876*x4877))+(((0.250000349687704)*x4867))+((cj4*x4870*x4875))+(((-1.0)*x4869*x4872))+((r12*sj1*x4866))+((cj4*x4876*x4877))+((cj4*x4876*x4879))+(((-1.0)*sj5*x4868*x4877))+((cj5*x4868*x4869))+(((-1.0)*x4870*x4875))+((x4866*x4867))+((r10*x4881))+((sj1*x4865))+(((-1.0)*r11*x4868*x4870))+((cj4*x4869*x4872)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj4*x4876*x4878))+(((-1.0)*cj1*r12*x4866))+((cj4*x4870*x4871))+(((-1.0)*r21*sj1*x4876))+(((-1.0)*cj4*x4872*x4873))+((r20*x4881))+((x4872*x4873))+((x4866*x4874))+(((-1.0)*x4870*x4871))+((sj5*x4868*x4878))+(((0.250000349687704)*x4874))+((sj1*x4882))+(((-1.0)*cj5*x4868*x4873))+((x4876*x4878))+(((-1.0)*cj1*x4865))+(((-1.0)*r21*x4868*x4870))))+IKsqr(((((-1.0)*x4876*x4879))+(((-1.0)*x4876*x4877))+(((0.250000349687704)*x4867))+((cj4*x4870*x4875))+(((-1.0)*x4869*x4872))+((r12*sj1*x4866))+((cj4*x4876*x4877))+((cj4*x4876*x4879))+(((-1.0)*sj5*x4868*x4877))+((cj5*x4868*x4869))+(((-1.0)*x4870*x4875))+((x4866*x4867))+((r10*x4881))+((sj1*x4865))+(((-1.0)*r11*x4868*x4870))+((cj4*x4869*x4872))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj4*x4876*x4878))+(((-1.0)*cj1*r12*x4866))+((cj4*x4870*x4871))+(((-1.0)*r21*sj1*x4876))+(((-1.0)*cj4*x4872*x4873))+((r20*x4881))+((x4872*x4873))+((x4866*x4874))+(((-1.0)*x4870*x4871))+((sj5*x4868*x4878))+(((0.250000349687704)*x4874))+((sj1*x4882))+(((-1.0)*cj5*x4868*x4873))+((x4876*x4878))+(((-1.0)*cj1*x4865))+(((-1.0)*r21*x4868*x4870))), ((((-1.0)*x4876*x4879))+(((-1.0)*x4876*x4877))+(((0.250000349687704)*x4867))+((cj4*x4870*x4875))+(((-1.0)*x4869*x4872))+((r12*sj1*x4866))+((cj4*x4876*x4877))+((cj4*x4876*x4879))+(((-1.0)*sj5*x4868*x4877))+((cj5*x4868*x4869))+(((-1.0)*x4870*x4875))+((x4866*x4867))+((r10*x4881))+((sj1*x4865))+(((-1.0)*r11*x4868*x4870))+((cj4*x4869*x4872))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4883=IKcos(j2);
IkReal x4884=IKsin(j2);
IkReal x4885=(cj5*r11);
IkReal x4886=((0.433012903784321)*cj4);
IkReal x4887=(r21*sj5);
IkReal x4888=((0.500000349687582)*sj4);
IkReal x4889=((0.749999650312296)*sj3);
IkReal x4890=(cj3*cj4);
IkReal x4891=(cj5*r10);
IkReal x4892=((0.0185150129489311)*sj4);
IkReal x4893=(r20*sj5);
IkReal x4894=(cj4*r22);
IkReal x4895=(r10*sj5);
IkReal x4896=(r12*sj3);
IkReal x4897=(r11*sj5);
IkReal x4898=(r22*sj3);
IkReal x4899=((0.27144)*sj1);
IkReal x4900=((0.00925751294893567)*cj4);
IkReal x4901=(cj5*r20);
IkReal x4902=(cj5*r21);
IkReal x4903=(cj4*r12);
IkReal x4904=((0.866025201892125)*sj4);
IkReal x4905=(sj1*x4883);
IkReal x4906=(cj1*x4883);
IkReal x4907=(cj1*x4884);
IkReal x4908=((0.250000349687704)*cj4*sj3);
IkReal x4909=(cj3*x4904);
IkReal x4910=(sj1*x4884);
IkReal x4911=((1.0)*x4907);
evalcond[0]=(x4910+x4906+(((-0.250000349687704)*r22))+((x4887*x4904))+(((0.433012903784321)*x4893))+(((-1.0)*x4886*x4893))+(((0.433012903784321)*x4902))+(((-0.749999650312296)*x4894))+(((-1.0)*x4886*x4902))+(((-1.0)*x4901*x4904)));
evalcond[1]=(x4905+(((-0.250000349687704)*r12))+(((-1.0)*x4911))+(((-0.749999650312296)*x4903))+(((-1.0)*x4891*x4904))+(((0.433012903784321)*x4895))+(((-1.0)*x4886*x4895))+(((0.433012903784321)*x4885))+(((-1.0)*x4885*x4886))+((x4897*x4904)));
evalcond[2]=((((0.0648043305514941)*x4893))+((x4900*x4902))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x4893*x4900))+(((-1.0)*x4887*x4892))+(((-1.0)*x4884*x4899))+(((-0.27144)*x4906))+((x4892*x4901))+(((0.0160344678271334)*x4894))+(((0.0648043305514941)*x4902)));
evalcond[3]=((((0.0648043305514941)*x4895))+(((0.0648043305514941)*x4885))+((x4895*x4900))+(((-1.0)*x4883*x4899))+(((-0.0160344678271334)*r12))+((x4891*x4892))+(((0.41)*sj1))+((x4885*x4900))+(((-1.0)*py))+(((0.0160344678271334)*x4903))+(((-1.0)*x4892*x4897))+(((0.27144)*x4907)));
evalcond[4]=(((x4887*x4890))+x4905+(((-1.0)*x4890*x4901))+(((-0.433012903784321)*x4898))+(((-1.0)*x4911))+(((-1.0)*sj3*x4887*x4888))+((cj3*x4888*x4893))+((x4902*x4908))+((x4889*x4902))+((x4889*x4893))+((x4893*x4908))+((cj3*x4888*x4902))+((r22*x4909))+((x4886*x4898))+((sj3*x4888*x4901)));
evalcond[5]=(((cj3*x4885*x4888))+((x4885*x4889))+(((-1.0)*sj3*x4888*x4897))+(((-0.433012903784321)*x4896))+((x4890*x4897))+((x4895*x4908))+(((-1.0)*x4910))+(((-1.0)*x4906))+((cj3*x4888*x4895))+((x4885*x4908))+((x4889*x4895))+((sj3*x4888*x4891))+((r12*x4909))+(((-1.0)*x4890*x4891))+((x4886*x4896)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4912=(cj4*sj1);
IkReal x4913=((0.433012903784321)*sj0);
IkReal x4914=(cj5*r21);
IkReal x4915=(cj1*r12);
IkReal x4916=(r20*sj5);
IkReal x4917=(r20*sj0);
IkReal x4918=(r10*sj1);
IkReal x4919=((0.749999650312296)*cj4);
IkReal x4920=(r21*sj0);
IkReal x4921=((0.433012903784321)*sj5);
IkReal x4922=(cj1*cj4);
IkReal x4923=(r22*sj0);
IkReal x4924=((0.250000349687704)*x4923);
IkReal x4925=((0.866025201892125)*cj5*sj4);
IkReal x4926=((0.433012903784321)*cj5*r11);
IkReal x4927=(cj1*r10*x4921);
IkReal x4928=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4929=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4930=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4930.valid){
continue;
}
CheckValue<IkReal> x4931 = IKatan2WithCheck(IkReal(((((0.749999650312296)*x4912*x4923))+((cj1*r10*x4925))+((x4922*x4926))+(((-1.0)*sj1*x4913*x4916))+(((-1.0)*sj1*x4913*x4914))+((r10*x4921*x4922))+((x4912*x4913*x4914))+((x4912*x4913*x4916))+(((0.250000349687704)*x4915))+(((-1.0)*r11*x4929))+((x4915*x4919))+(((-1.0)*cj1*x4926))+((sj1*x4917*x4925))+(((-1.0)*x4920*x4928))+(((-1.0)*x4927))+((sj1*x4924)))),IkReal(((((-0.749999650312296)*r12*x4912))+(((-0.250000349687704)*r12*sj1))+((cj1*x4919*x4923))+(((-1.0)*r10*x4912*x4921))+(((-1.0)*x4912*x4926))+(((-1.0)*x4918*x4925))+(((-1.0)*cj1*x4913*x4914))+(((-1.0)*cj1*x4913*x4916))+((x4918*x4921))+((cj1*x4917*x4925))+(((-1.0)*x4920*x4929))+((r11*x4928))+((x4913*x4914*x4922))+((sj1*x4926))+((x4913*x4916*x4922))+((cj1*x4924)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4931.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4930.value)))+(x4931.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4932=IKsin(j2);
IkReal x4933=IKcos(j2);
IkReal x4934=(cj4*sj5);
IkReal x4935=(cj3*r21);
IkReal x4936=((0.433012903784321)*r20);
IkReal x4937=((0.749999650312296)*cj4);
IkReal x4938=(cj4*cj5);
IkReal x4939=((1.0)*cj3);
IkReal x4940=((0.433012903784321)*r01);
IkReal x4941=(sj4*sj5);
IkReal x4942=((0.749999650312296)*sj3);
IkReal x4943=(r10*sj5);
IkReal x4944=((0.500000349687582)*sj3);
IkReal x4945=(cj0*sj1);
IkReal x4946=((0.500000349687582)*cj3);
IkReal x4947=((0.0160344678271334)*r22);
IkReal x4948=(r20*sj3);
IkReal x4949=(r00*sj5);
IkReal x4950=(cj3*r11);
IkReal x4951=((0.0160344678271334)*r12);
IkReal x4952=((0.433012903784321)*r11);
IkReal x4953=(cj5*r11);
IkReal x4954=(r10*sj3);
IkReal x4955=(r00*sj3);
IkReal x4956=((0.433012903784321)*sj3);
IkReal x4957=(cj5*sj4);
IkReal x4958=(r20*sj5);
IkReal x4959=((0.433012903784321)*r21);
IkReal x4960=(sj0*sj1);
IkReal x4961=(cj3*r01);
IkReal x4962=(cj5*r21);
IkReal x4963=((0.0160344678271334)*r02);
IkReal x4964=(cj5*r01);
IkReal x4965=((0.250000349687704)*sj3);
IkReal x4966=(cj1*x4932);
IkReal x4967=((0.500000349687582)*x4957);
IkReal x4968=((0.27144)*x4933);
IkReal x4969=(cj4*x4956);
IkReal x4970=(sj1*x4932);
IkReal x4971=((0.866025201892125)*cj3*sj4);
IkReal x4972=(cj1*x4933);
IkReal x4973=((1.0)*x4933);
evalcond[0]=(x4970+x4972+(((0.866025201892125)*r21*x4941))+(((-0.250000349687704)*r22))+(((-1.0)*x4934*x4936))+(((-1.0)*x4938*x4959))+((sj5*x4936))+(((-1.0)*r22*x4937))+((cj5*x4959))+(((-0.866025201892125)*r20*x4957)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4938*x4940))+(((-1.0)*r02*x4937))+(((0.433012903784321)*x4949))+(((-1.0)*x4945*x4973))+((cj5*x4940))+(((-0.433012903784321)*r00*x4934))+(((0.866025201892125)*r01*x4941))+((cj0*x4966))+(((-0.866025201892125)*r00*x4957)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-1.0)*x4960*x4973))+((sj0*x4966))+(((0.433012903784321)*x4943))+(((-1.0)*x4938*x4952))+(((-0.433012903784321)*r10*x4934))+(((-0.866025201892125)*r10*x4957))+(((-1.0)*r12*x4937))+(((0.866025201892125)*r11*x4941))+((cj5*x4952)));
evalcond[3]=((((-0.0185150129489311)*r21*x4941))+(((0.41)*cj1))+(((-1.0)*x4947))+(((-0.27144)*x4970))+(((-1.0)*pz))+((cj4*x4947))+(((0.0185150129489311)*r20*x4957))+(((0.00925751294893567)*r21*x4938))+(((0.0648043305514941)*x4958))+(((0.00925751294893567)*r20*x4934))+(((0.0648043305514941)*x4962))+(((-1.0)*cj1*x4968)));
evalcond[4]=((((0.00925751294893567)*r01*x4938))+(((0.00925751294893567)*r00*x4934))+(((-1.0)*x4963))+(((-1.0)*px))+(((0.0648043305514941)*x4949))+(((-0.0185150129489311)*r01*x4941))+((cj4*x4963))+(((0.0185150129489311)*r00*x4957))+((x4945*x4968))+(((0.0098)*sj0))+(((-0.41)*x4945))+(((0.0648043305514941)*x4964))+(((-0.27144)*cj0*x4966)));
evalcond[5]=((((-0.41)*x4960))+(((-0.27144)*sj0*x4966))+(((0.00925751294893567)*r10*x4934))+(((-1.0)*x4951))+(((-1.0)*py))+((x4960*x4968))+((cj4*x4951))+(((0.0648043305514941)*x4943))+(((0.0185150129489311)*r10*x4957))+(((-0.0185150129489311)*r11*x4941))+(((-0.0098)*cj0))+(((0.00925751294893567)*r11*x4938))+(((0.0648043305514941)*x4953)));
evalcond[6]=(((r20*x4944*x4957))+((x4934*x4935))+(((-1.0)*r21*x4941*x4944))+((r22*x4971))+((r22*x4969))+((r20*x4941*x4946))+(((-1.0)*r20*x4938*x4939))+((r21*x4938*x4965))+(((0.250000349687704)*x4934*x4948))+(((-1.0)*r22*x4956))+((x4942*x4962))+((x4942*x4958))+(((-1.0)*x4966))+((x4935*x4967))+((sj1*x4933)));
evalcond[7]=(((r01*x4946*x4957))+((x4942*x4949))+((x4942*x4964))+((r02*x4969))+(((-1.0)*r02*x4956))+((r02*x4971))+((r00*x4941*x4946))+(((0.250000349687704)*x4934*x4955))+((x4932*x4945))+((r00*x4944*x4957))+((x4934*x4961))+(((-1.0)*r00*x4938*x4939))+((r01*x4938*x4965))+(((-1.0)*r01*x4941*x4944))+((cj0*x4972)));
evalcond[8]=((((-1.0)*r10*x4938*x4939))+((r12*x4969))+((r11*x4938*x4965))+((sj0*x4972))+((r12*x4971))+((sj4*x4946*x4953))+((x4942*x4943))+((r10*x4944*x4957))+((x4942*x4953))+(((-1.0)*r12*x4956))+((x4932*x4960))+(((0.250000349687704)*x4934*x4954))+((r10*x4941*x4946))+((x4934*x4950))+(((-1.0)*r11*x4941*x4944)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4974=(cj0*r20);
IkReal x4975=(cj1*r00);
IkReal x4976=(r02*sj1);
IkReal x4977=(r00*sj1);
IkReal x4978=((0.433012903784321)*sj5);
IkReal x4979=(cj4*sj1);
IkReal x4980=((0.749999650312296)*cj4);
IkReal x4981=(cj0*r22);
IkReal x4982=(r01*sj1);
IkReal x4983=(cj1*cj4);
IkReal x4984=(cj0*r21);
IkReal x4985=(cj1*r02);
IkReal x4986=((0.866025201892125)*cj5*sj4);
IkReal x4987=((0.866025201892125)*sj4*sj5);
IkReal x4988=((0.433012903784321)*cj5*r01);
IkReal x4989=((0.433012903784321)*cj5*x4984);
CheckValue<IkReal> x4990 = IKatan2WithCheck(IkReal(((((-1.0)*cj1*x4988))+(((-1.0)*x4975*x4978))+((sj1*x4974*x4986))+((x4975*x4986))+(((0.250000349687704)*sj1*x4981))+((x4979*x4989))+(((-1.0)*cj1*r01*x4987))+(((0.250000349687704)*x4985))+(((-1.0)*sj1*x4984*x4987))+(((0.749999650312296)*x4979*x4981))+(((-1.0)*sj1*x4974*x4978))+((x4974*x4978*x4979))+(((-1.0)*sj1*x4989))+((x4980*x4985))+((cj4*x4975*x4978))+((x4983*x4988)))),IkReal(((((-1.0)*cj1*x4989))+(((-1.0)*x4977*x4986))+((cj1*x4980*x4981))+(((0.250000349687704)*cj1*x4981))+(((0.433012903784321)*cj5*x4982))+(((-1.0)*cj1*x4984*x4987))+((x4977*x4978))+(((-0.250000349687704)*x4976))+((x4982*x4987))+(((-1.0)*cj4*x4977*x4978))+(((-1.0)*x4979*x4988))+(((-1.0)*cj1*x4974*x4978))+((cj1*x4974*x4986))+((x4974*x4978*x4983))+((x4983*x4989))+(((-1.0)*x4976*x4980)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4990.valid){
continue;
}
CheckValue<IkReal> x4991=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4991.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4990.value)+(((1.5707963267949)*(x4991.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4992=IKsin(j2);
IkReal x4993=IKcos(j2);
IkReal x4994=(cj4*sj5);
IkReal x4995=(cj3*r21);
IkReal x4996=((0.433012903784321)*r20);
IkReal x4997=((0.749999650312296)*cj4);
IkReal x4998=(cj4*cj5);
IkReal x4999=((1.0)*cj3);
IkReal x5000=((0.433012903784321)*r01);
IkReal x5001=(sj4*sj5);
IkReal x5002=((0.749999650312296)*sj3);
IkReal x5003=(r10*sj5);
IkReal x5004=((0.500000349687582)*sj3);
IkReal x5005=(cj0*sj1);
IkReal x5006=((0.500000349687582)*cj3);
IkReal x5007=((0.0160344678271334)*r22);
IkReal x5008=(r20*sj3);
IkReal x5009=(r00*sj5);
IkReal x5010=(cj3*r11);
IkReal x5011=((0.0160344678271334)*r12);
IkReal x5012=((0.433012903784321)*r11);
IkReal x5013=(cj5*r11);
IkReal x5014=(r10*sj3);
IkReal x5015=(r00*sj3);
IkReal x5016=((0.433012903784321)*sj3);
IkReal x5017=(cj5*sj4);
IkReal x5018=(r20*sj5);
IkReal x5019=((0.433012903784321)*r21);
IkReal x5020=(sj0*sj1);
IkReal x5021=(cj3*r01);
IkReal x5022=(cj5*r21);
IkReal x5023=((0.0160344678271334)*r02);
IkReal x5024=(cj5*r01);
IkReal x5025=((0.250000349687704)*sj3);
IkReal x5026=(cj1*x4992);
IkReal x5027=((0.500000349687582)*x5017);
IkReal x5028=((0.27144)*x4993);
IkReal x5029=(cj4*x5016);
IkReal x5030=(sj1*x4992);
IkReal x5031=((0.866025201892125)*cj3*sj4);
IkReal x5032=(cj1*x4993);
IkReal x5033=((1.0)*x4993);
evalcond[0]=(((sj5*x4996))+(((-1.0)*r22*x4997))+(((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x5017))+(((0.866025201892125)*r21*x5001))+x5032+x5030+(((-1.0)*x4994*x4996))+(((-1.0)*x4998*x5019))+((cj5*x5019)));
evalcond[1]=(((cj0*x5026))+(((-0.250000349687704)*r02))+((cj5*x5000))+(((0.866025201892125)*r01*x5001))+(((-1.0)*x4998*x5000))+(((-1.0)*r02*x4997))+(((-0.866025201892125)*r00*x5017))+(((-1.0)*x5005*x5033))+(((0.433012903784321)*x5009))+(((-0.433012903784321)*r00*x4994)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x4994))+(((-0.866025201892125)*r10*x5017))+(((-1.0)*r12*x4997))+((sj0*x5026))+(((-1.0)*x5020*x5033))+(((0.866025201892125)*r11*x5001))+(((0.433012903784321)*x5003))+(((-1.0)*x4998*x5012))+((cj5*x5012)));
evalcond[3]=((((0.00925751294893567)*r20*x4994))+(((0.00925751294893567)*r21*x4998))+((cj4*x5007))+(((0.41)*cj1))+(((-1.0)*pz))+(((-1.0)*cj1*x5028))+(((-0.0185150129489311)*r21*x5001))+(((0.0185150129489311)*r20*x5017))+(((-0.27144)*x5030))+(((0.0648043305514941)*x5018))+(((0.0648043305514941)*x5022))+(((-1.0)*x5007)));
evalcond[4]=((((0.0648043305514941)*x5009))+((x5005*x5028))+((cj4*x5023))+(((-0.41)*x5005))+(((-0.0185150129489311)*r01*x5001))+(((0.00925751294893567)*r00*x4994))+(((0.00925751294893567)*r01*x4998))+(((-1.0)*px))+(((-1.0)*x5023))+(((-0.27144)*cj0*x5026))+(((0.0098)*sj0))+(((0.0648043305514941)*x5024))+(((0.0185150129489311)*r00*x5017)));
evalcond[5]=((((0.0648043305514941)*x5003))+(((-0.41)*x5020))+(((-0.0185150129489311)*r11*x5001))+(((0.0185150129489311)*r10*x5017))+((x5020*x5028))+(((-0.27144)*sj0*x5026))+(((0.00925751294893567)*r10*x4994))+(((-1.0)*py))+(((0.00925751294893567)*r11*x4998))+(((0.0648043305514941)*x5013))+(((-0.0098)*cj0))+((cj4*x5011))+(((-1.0)*x5011)));
evalcond[6]=(((x4994*x4995))+((r21*x4998*x5025))+((r20*x5004*x5017))+((r20*x5001*x5006))+(((-1.0)*r21*x5001*x5004))+((sj1*x4993))+((x5002*x5022))+(((-1.0)*x5026))+((x4995*x5027))+(((-1.0)*r20*x4998*x4999))+(((-1.0)*r22*x5016))+((r22*x5029))+((x5002*x5018))+((r22*x5031))+(((0.250000349687704)*x4994*x5008)));
evalcond[7]=(((r01*x5006*x5017))+((r02*x5029))+((r01*x4998*x5025))+((r02*x5031))+((r00*x5001*x5006))+((x5002*x5009))+(((-1.0)*r02*x5016))+((x4994*x5021))+((x5002*x5024))+((x4992*x5005))+((r00*x5004*x5017))+(((-1.0)*r01*x5001*x5004))+(((-1.0)*r00*x4998*x4999))+((cj0*x5032))+(((0.250000349687704)*x4994*x5015)));
evalcond[8]=(((r12*x5031))+(((-1.0)*r11*x5001*x5004))+((r12*x5029))+((x5002*x5003))+((r10*x5001*x5006))+((r11*x4998*x5025))+((sj0*x5032))+(((-1.0)*r10*x4998*x4999))+((x4994*x5010))+((sj4*x5006*x5013))+((x5002*x5013))+((x4992*x5020))+(((-1.0)*r12*x5016))+((r10*x5004*x5017))+(((0.250000349687704)*x4994*x5014)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - j2n6s300 (ac6b5a99b8ce3bb18bb33db4d7448c9a)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x10000049"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
